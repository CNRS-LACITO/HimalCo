<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="classlmf_1_1src_1_1core_1_1statement_1_1_statement" kind="class" prot="public">
    <compoundname>lmf::src::core::statement::Statement</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1abc61d06d03119e6e12d5c3854afc93c1" prot="public" static="no" mutable="no">
        <type></type>
        <definition>lmf.src.core.statement.Statement::noteType</definition>
        <argsstring></argsstring>
        <name>noteType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" line="17" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a231fe52b0b7ba3deb6d0993987dddaf0" prot="public" static="no" mutable="no">
        <type></type>
        <definition>lmf.src.core.statement.Statement::note</definition>
        <argsstring></argsstring>
        <name>note</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" line="18" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a71a5b6eaf4bad349ab3399fbea06b88d" prot="public" static="no" mutable="no">
        <type></type>
        <definition>lmf.src.core.statement.Statement::language</definition>
        <argsstring></argsstring>
        <name>language</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" line="19" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a3f6a8d066930ce775d6f6655ea5f3dfa" prot="public" static="no" mutable="no">
        <type></type>
        <definition>lmf.src.core.statement.Statement::encyclopedicInformation</definition>
        <argsstring></argsstring>
        <name>encyclopedicInformation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" line="20" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a2e146c5f5de5eed52c082c2cc0bea7d0" prot="public" static="no" mutable="no">
        <type></type>
        <definition>lmf.src.core.statement.Statement::usageNote</definition>
        <argsstring></argsstring>
        <name>usageNote</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" line="21" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a812bbd34658f5bfaf3babff001be9715" prot="public" static="no" mutable="no">
        <type></type>
        <definition>lmf.src.core.statement.Statement::restriction</definition>
        <argsstring></argsstring>
        <name>restriction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" line="22" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1afa73464513552afc8a6bf3828446a7d9" prot="public" static="no" mutable="no">
        <type></type>
        <definition>lmf.src.core.statement.Statement::derivation</definition>
        <argsstring></argsstring>
        <name>derivation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" line="23" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a534b2190fdea34d7f085a78adaac1ee2" prot="public" static="no" mutable="no">
        <type></type>
        <definition>lmf.src.core.statement.Statement::borrowedWord</definition>
        <argsstring></argsstring>
        <name>borrowedWord</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" line="24" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a4126cee37a75d852056ae49f45cf6cc3" prot="public" static="no" mutable="no">
        <type></type>
        <definition>lmf.src.core.statement.Statement::writtenForm</definition>
        <argsstring></argsstring>
        <name>writtenForm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" line="25" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a1670c113f5b8143803936a3958d3f256" prot="public" static="no" mutable="no">
        <type></type>
        <definition>lmf.src.core.statement.Statement::sense</definition>
        <argsstring></argsstring>
        <name>sense</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" line="26" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a1232c0098a52fa5f72d6a80c8661152a" prot="public" static="no" mutable="no">
        <type></type>
        <definition>lmf.src.core.statement.Statement::etymology</definition>
        <argsstring></argsstring>
        <name>etymology</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" line="27" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a25f9127cf2fe1017c53a3ccb57570352" prot="public" static="no" mutable="no">
        <type></type>
        <definition>lmf.src.core.statement.Statement::etymologyComment</definition>
        <argsstring></argsstring>
        <name>etymologyComment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" line="28" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a7d9d96cae746848b83b4ae8516c92bee" prot="public" static="no" mutable="no">
        <type></type>
        <definition>lmf.src.core.statement.Statement::etymologyGloss</definition>
        <argsstring></argsstring>
        <name>etymologyGloss</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" line="29" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1adeefdc77c6ff898b8adba4ef2a946af3" prot="public" static="no" mutable="no">
        <type></type>
        <definition>lmf.src.core.statement.Statement::etymologySource</definition>
        <argsstring></argsstring>
        <name>etymologySource</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" line="30" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1ac334fff77caf25a783e77aa55ca3128d" prot="public" static="no" mutable="no">
        <type></type>
        <definition>lmf.src.core.statement.Statement::termSourceLanguage</definition>
        <argsstring></argsstring>
        <name>termSourceLanguage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" line="31" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1aee57d23dce671062480f9b84ac43a2f1" prot="public" static="no" mutable="no">
        <type></type>
        <definition>lmf.src.core.statement.Statement::targetLexicalEntry</definition>
        <argsstring></argsstring>
        <name>targetLexicalEntry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" line="32" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a3af309c396e738565e75fff8df1b960a" prot="public" static="no" mutable="no">
        <type></type>
        <definition>lmf.src.core.statement.Statement::scientificName</definition>
        <argsstring></argsstring>
        <name>scientificName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" line="33" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1af2781856fbb02d55acc39864ec66aa24" prot="public" static="no" mutable="no">
        <type></type>
        <definition>lmf.src.core.statement.Statement::text_representation</definition>
        <argsstring></argsstring>
        <name>text_representation</name>
        <briefdescription>
<para>TextRepresentation instances are owned by <ref refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement" kindref="compound">Statement</ref> There is zero to many TextRepresentation instances per <ref refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement" kindref="compound">Statement</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" line="36" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1ace7d3a3325c7f7b255a3dd72b20c74b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.statement.Statement.__init__</definition>
        <argsstring></argsstring>
        <name>__init__</name>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement" kindref="compound">Statement</ref> instances are owned by Definition. <simplesect kind="return"><para>A <ref refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement" kindref="compound">Statement</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" line="12" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" bodystart="12" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a49d77869667dfde6c6abc794201f9fc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.statement.Statement.__del__</definition>
        <argsstring></argsstring>
        <name>__del__</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
<para>Release TextRepresentation instances. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" line="38" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" bodystart="38" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1ac5f19645e137199d8a35ed7ddbf4b280" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.statement.Statement.set_note</definition>
        <argsstring></argsstring>
        <name>set_note</name>
        <briefdescription>
<para>Set note. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>note</parametername>
</parameternamelist>
<parameterdescription>
<para>Note to set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the note. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>language</parametername>
</parameternamelist>
<parameterdescription>
<para>Language used for the note. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement" kindref="compound">Statement</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" line="46" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" bodystart="46" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a2fb4b0e5e1a60fc1c64a568f23836365" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.statement.Statement.get_note</definition>
        <argsstring></argsstring>
        <name>get_note</name>
        <briefdescription>
<para>Get note. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>If this argument is given, get note only if its type corresponds. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>language</parametername>
</parameternamelist>
<parameterdescription>
<para>If this argument is given, get note only if written in this language. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The filtered <ref refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement" kindref="compound">Statement</ref> attribute &apos;note&apos;. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" line="60" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" bodystart="60" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1aba967f0f44c48614ef275b43729a65a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.statement.Statement.set_language</definition>
        <argsstring></argsstring>
        <name>set_language</name>
        <briefdescription>
<para>Set language used for the note. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>language</parametername>
</parameternamelist>
<parameterdescription>
<para>Language used for the note. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement" kindref="compound">Statement</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" line="73" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" bodystart="73" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1aaa72b5537d3c61a7b4da16b83d99a947" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.statement.Statement.get_language</definition>
        <argsstring></argsstring>
        <name>get_language</name>
        <briefdescription>
<para>Get language used for the note. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement" kindref="compound">Statement</ref> attribute &apos;language&apos;. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" line="83" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" bodystart="83" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a496622deaffb5533321e305c99ef4689" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.statement.Statement.set_noteType</definition>
        <argsstring></argsstring>
        <name>set_noteType</name>
        <briefdescription>
<para>Set type of the note. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>note_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the note. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement" kindref="compound">Statement</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" line="89" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" bodystart="89" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a3d7c298b233b33d30ede48fb9c447a4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.statement.Statement.get_noteType</definition>
        <argsstring></argsstring>
        <name>get_noteType</name>
        <briefdescription>
<para>Get type of the note. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement" kindref="compound">Statement</ref> attribute &apos;noteType&apos;. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" line="100" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" bodystart="100" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a457b19a604578033bd13ab3d4007ba2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.statement.Statement.set_usageNote</definition>
        <argsstring></argsstring>
        <name>set_usageNote</name>
        <briefdescription>
<para>Set usage note. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>usage_note</parametername>
</parameternamelist>
<parameterdescription>
<para>Usage note to set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>language</parametername>
</parameternamelist>
<parameterdescription>
<para>Language used for the usage note. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement" kindref="compound">Statement</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" line="106" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" bodystart="106" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1afd49544da7d45364b4c74100ea1dfbe8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.statement.Statement.get_usageNote</definition>
        <argsstring></argsstring>
        <name>get_usageNote</name>
        <briefdescription>
<para>Get usage note. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>language</parametername>
</parameternamelist>
<parameterdescription>
<para>If this argument is given, get usage note only if written in this language. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The filtered <ref refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement" kindref="compound">Statement</ref> attribute &apos;usageNote&apos;. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" line="117" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" bodystart="117" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a8f4587c26a7c775f581ca3cbf2291411" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.statement.Statement.set_encyclopedicInformation</definition>
        <argsstring></argsstring>
        <name>set_encyclopedicInformation</name>
        <briefdescription>
<para>Set encyclopedic information. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>encyclopedic_information</parametername>
</parameternamelist>
<parameterdescription>
<para>Encyclopedic information to set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>language</parametername>
</parameternamelist>
<parameterdescription>
<para>Language used for the encyclopedic information. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement" kindref="compound">Statement</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" line="127" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" bodystart="127" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a2c315d4fcbfec270476dc7536b48fd46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.statement.Statement.get_encyclopedicInformation</definition>
        <argsstring></argsstring>
        <name>get_encyclopedicInformation</name>
        <briefdescription>
<para>Get encyclopedic information. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>language</parametername>
</parameternamelist>
<parameterdescription>
<para>If this argument is given, get encyclopedic information only if written in this language. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The filtered <ref refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement" kindref="compound">Statement</ref> attribute &apos;encyclopedicInformation&apos;. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" line="138" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" bodystart="138" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a66ff1951ce0a2b839f2ab4c1f5447426" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.statement.Statement.set_restriction</definition>
        <argsstring></argsstring>
        <name>set_restriction</name>
        <briefdescription>
<para>Set restriction. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>restriction</parametername>
</parameternamelist>
<parameterdescription>
<para>Restriction to set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>language</parametername>
</parameternamelist>
<parameterdescription>
<para>Language used for the restriction. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement" kindref="compound">Statement</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" line="148" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" bodystart="148" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1ab85c880e48d2123caaed25d78bd32c76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.statement.Statement.get_restriction</definition>
        <argsstring></argsstring>
        <name>get_restriction</name>
        <briefdescription>
<para>Get restriction. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>language</parametername>
</parameternamelist>
<parameterdescription>
<para>If this argument is given, get restriction only if written in this language. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The filtered <ref refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement" kindref="compound">Statement</ref> attribute &apos;restriction&apos;. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" line="159" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" bodystart="159" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1abf1eb5ffc95de2aedde3fbc57ba9a795" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.statement.Statement.set_borrowedWord</definition>
        <argsstring></argsstring>
        <name>set_borrowedWord</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Set source language (in English), e.g. &quot;Chinese&quot;.
@param borrowed_word The source language to set.
@return Statement instance.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" line="169" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" bodystart="169" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a4d211071167d9b64b90a8863bccdba47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.statement.Statement.get_borrowedWord</definition>
        <argsstring></argsstring>
        <name>get_borrowedWord</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Get source language (in English).
@return Statement attribute &apos;borrowedWord&apos;.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" line="179" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" bodystart="179" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a0a666409b4347a2e1fc306c776403644" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.statement.Statement.set_writtenForm</definition>
        <argsstring></argsstring>
        <name>set_writtenForm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Set loan word.
@param written_form The loan word to set.
@return Statement instance.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" line="185" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" bodystart="185" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1ad76ee83090f177477973b3318f14e4e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.statement.Statement.get_writtenForm</definition>
        <argsstring></argsstring>
        <name>get_writtenForm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Get loan word.
@return Statement attribute &apos;writtenForm&apos;.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" line="195" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" bodystart="195" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a77b0a232ce93b2cc0495ee63064e286d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.statement.Statement.set_etymology</definition>
        <argsstring></argsstring>
        <name>set_etymology</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Set etymology.
@param etymolgy The etymology to set.
@return Statement instance.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" line="201" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" bodystart="201" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a680c28452d3c0e819db589479e364441" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.statement.Statement.get_etymology</definition>
        <argsstring></argsstring>
        <name>get_etymology</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Get etymology.
@return Statement attribute &apos;etymology&apos;.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" line="211" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" bodystart="211" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1abcd99a1f9adf0b86fe0648d3d5d0c745" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.statement.Statement.set_etymologyComment</definition>
        <argsstring></argsstring>
        <name>set_etymologyComment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Set etymology comment (in English).
@param etymolgy_comment The etymology comment to set.
@param term_source_language The language used for the comment.
@return Statement instance.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" line="217" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" bodystart="217" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1ad64f4d82e8aac9ca2e106673195adef2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.statement.Statement.get_etymologyComment</definition>
        <argsstring></argsstring>
        <name>get_etymologyComment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Get etymology comment (in English).
@param term_source_language The language of the etymology comment to retrieve.
@return Statement attribute &apos;etymologyComment&apos;.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" line="230" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" bodystart="230" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a2559e6c441e8b9c1276ea7f7ae765f1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.statement.Statement.set_termSourceLanguage</definition>
        <argsstring></argsstring>
        <name>set_termSourceLanguage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Set language used for the etymology comment.
@param term_source_language The etymology comment language to set.
@return Statement instance.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" line="238" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" bodystart="238" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1ab63acc79afef490f7e9c748c57452d9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.statement.Statement.get_termSourceLanguage</definition>
        <argsstring></argsstring>
        <name>get_termSourceLanguage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Get language used for the etymology comment.
@return Statement attribute &apos;termSourceLanguage&apos;.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" line="248" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" bodystart="248" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1ad5405bae6d97fb2a64ab75748c1122a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.statement.Statement.set_etymologyGloss</definition>
        <argsstring></argsstring>
        <name>set_etymologyGloss</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Set etymology gloss.
@param etymolgy_gloss The etymology gloss to set.
@return Statement instance.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" line="254" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" bodystart="254" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1ade26b2eb6ee95396a9716030020e7b80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.statement.Statement.get_etymologyGloss</definition>
        <argsstring></argsstring>
        <name>get_etymologyGloss</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Get etymology gloss.
@return Statement attribute &apos;etymologyGloss&apos;.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" line="264" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" bodystart="264" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a74132a7211362920d34c35ed423f24fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.statement.Statement.set_etymologySource</definition>
        <argsstring></argsstring>
        <name>set_etymologySource</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Set etymology source.
@param etymolgy_source The etymology source to set.
@return Statement instance.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" line="270" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" bodystart="270" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a4871b4a55077cb3c57b8b69ce9c9a00b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.statement.Statement.get_etymologySource</definition>
        <argsstring></argsstring>
        <name>get_etymologySource</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Get etymology source.
@return Statement attribute &apos;etymologySource&apos;.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" line="280" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" bodystart="280" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a24eacb4f5629fb9339f80c9529eb4a8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.statement.Statement.set_scientificName</definition>
        <argsstring></argsstring>
        <name>set_scientificName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Set scientific name.
@param scientific_name The scientific name to set.
@return Statement instance.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" line="286" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" bodystart="286" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1acce9c29f9d9f11c5464d5f6a3caf3463" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.statement.Statement.get_scientificName</definition>
        <argsstring></argsstring>
        <name>get_scientificName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Get scientific name.
@return Statement attribute &apos;scientificName&apos;.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" line="296" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" bodystart="296" bodyend="301"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>&quot;Statement is a class representating a narrative description that refines or complements Definition.&quot; (LMF) </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" line="9" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/statement.py" bodystart="9" bodyend="301"/>
    <listofallmembers>
      <member refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a49d77869667dfde6c6abc794201f9fc3" prot="public" virt="non-virtual"><scope>lmf::src::core::statement::Statement</scope><name>__del__</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1ace7d3a3325c7f7b255a3dd72b20c74b1" prot="public" virt="non-virtual"><scope>lmf::src::core::statement::Statement</scope><name>__init__</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a534b2190fdea34d7f085a78adaac1ee2" prot="public" virt="non-virtual"><scope>lmf::src::core::statement::Statement</scope><name>borrowedWord</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1afa73464513552afc8a6bf3828446a7d9" prot="public" virt="non-virtual"><scope>lmf::src::core::statement::Statement</scope><name>derivation</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a3f6a8d066930ce775d6f6655ea5f3dfa" prot="public" virt="non-virtual"><scope>lmf::src::core::statement::Statement</scope><name>encyclopedicInformation</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a1232c0098a52fa5f72d6a80c8661152a" prot="public" virt="non-virtual"><scope>lmf::src::core::statement::Statement</scope><name>etymology</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a25f9127cf2fe1017c53a3ccb57570352" prot="public" virt="non-virtual"><scope>lmf::src::core::statement::Statement</scope><name>etymologyComment</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a7d9d96cae746848b83b4ae8516c92bee" prot="public" virt="non-virtual"><scope>lmf::src::core::statement::Statement</scope><name>etymologyGloss</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1adeefdc77c6ff898b8adba4ef2a946af3" prot="public" virt="non-virtual"><scope>lmf::src::core::statement::Statement</scope><name>etymologySource</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a4d211071167d9b64b90a8863bccdba47" prot="public" virt="non-virtual"><scope>lmf::src::core::statement::Statement</scope><name>get_borrowedWord</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a2c315d4fcbfec270476dc7536b48fd46" prot="public" virt="non-virtual"><scope>lmf::src::core::statement::Statement</scope><name>get_encyclopedicInformation</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a680c28452d3c0e819db589479e364441" prot="public" virt="non-virtual"><scope>lmf::src::core::statement::Statement</scope><name>get_etymology</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1ad64f4d82e8aac9ca2e106673195adef2" prot="public" virt="non-virtual"><scope>lmf::src::core::statement::Statement</scope><name>get_etymologyComment</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1ade26b2eb6ee95396a9716030020e7b80" prot="public" virt="non-virtual"><scope>lmf::src::core::statement::Statement</scope><name>get_etymologyGloss</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a4871b4a55077cb3c57b8b69ce9c9a00b" prot="public" virt="non-virtual"><scope>lmf::src::core::statement::Statement</scope><name>get_etymologySource</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1aaa72b5537d3c61a7b4da16b83d99a947" prot="public" virt="non-virtual"><scope>lmf::src::core::statement::Statement</scope><name>get_language</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a2fb4b0e5e1a60fc1c64a568f23836365" prot="public" virt="non-virtual"><scope>lmf::src::core::statement::Statement</scope><name>get_note</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a3d7c298b233b33d30ede48fb9c447a4c" prot="public" virt="non-virtual"><scope>lmf::src::core::statement::Statement</scope><name>get_noteType</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1ab85c880e48d2123caaed25d78bd32c76" prot="public" virt="non-virtual"><scope>lmf::src::core::statement::Statement</scope><name>get_restriction</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1acce9c29f9d9f11c5464d5f6a3caf3463" prot="public" virt="non-virtual"><scope>lmf::src::core::statement::Statement</scope><name>get_scientificName</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1ab63acc79afef490f7e9c748c57452d9c" prot="public" virt="non-virtual"><scope>lmf::src::core::statement::Statement</scope><name>get_termSourceLanguage</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1afd49544da7d45364b4c74100ea1dfbe8" prot="public" virt="non-virtual"><scope>lmf::src::core::statement::Statement</scope><name>get_usageNote</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1ad76ee83090f177477973b3318f14e4e3" prot="public" virt="non-virtual"><scope>lmf::src::core::statement::Statement</scope><name>get_writtenForm</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a71a5b6eaf4bad349ab3399fbea06b88d" prot="public" virt="non-virtual"><scope>lmf::src::core::statement::Statement</scope><name>language</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a231fe52b0b7ba3deb6d0993987dddaf0" prot="public" virt="non-virtual"><scope>lmf::src::core::statement::Statement</scope><name>note</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1abc61d06d03119e6e12d5c3854afc93c1" prot="public" virt="non-virtual"><scope>lmf::src::core::statement::Statement</scope><name>noteType</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a812bbd34658f5bfaf3babff001be9715" prot="public" virt="non-virtual"><scope>lmf::src::core::statement::Statement</scope><name>restriction</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a3af309c396e738565e75fff8df1b960a" prot="public" virt="non-virtual"><scope>lmf::src::core::statement::Statement</scope><name>scientificName</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a1670c113f5b8143803936a3958d3f256" prot="public" virt="non-virtual"><scope>lmf::src::core::statement::Statement</scope><name>sense</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1abf1eb5ffc95de2aedde3fbc57ba9a795" prot="public" virt="non-virtual"><scope>lmf::src::core::statement::Statement</scope><name>set_borrowedWord</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a8f4587c26a7c775f581ca3cbf2291411" prot="public" virt="non-virtual"><scope>lmf::src::core::statement::Statement</scope><name>set_encyclopedicInformation</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a77b0a232ce93b2cc0495ee63064e286d" prot="public" virt="non-virtual"><scope>lmf::src::core::statement::Statement</scope><name>set_etymology</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1abcd99a1f9adf0b86fe0648d3d5d0c745" prot="public" virt="non-virtual"><scope>lmf::src::core::statement::Statement</scope><name>set_etymologyComment</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1ad5405bae6d97fb2a64ab75748c1122a5" prot="public" virt="non-virtual"><scope>lmf::src::core::statement::Statement</scope><name>set_etymologyGloss</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a74132a7211362920d34c35ed423f24fb" prot="public" virt="non-virtual"><scope>lmf::src::core::statement::Statement</scope><name>set_etymologySource</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1aba967f0f44c48614ef275b43729a65a0" prot="public" virt="non-virtual"><scope>lmf::src::core::statement::Statement</scope><name>set_language</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1ac5f19645e137199d8a35ed7ddbf4b280" prot="public" virt="non-virtual"><scope>lmf::src::core::statement::Statement</scope><name>set_note</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a496622deaffb5533321e305c99ef4689" prot="public" virt="non-virtual"><scope>lmf::src::core::statement::Statement</scope><name>set_noteType</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a66ff1951ce0a2b839f2ab4c1f5447426" prot="public" virt="non-virtual"><scope>lmf::src::core::statement::Statement</scope><name>set_restriction</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a24eacb4f5629fb9339f80c9529eb4a8c" prot="public" virt="non-virtual"><scope>lmf::src::core::statement::Statement</scope><name>set_scientificName</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a2559e6c441e8b9c1276ea7f7ae765f1d" prot="public" virt="non-virtual"><scope>lmf::src::core::statement::Statement</scope><name>set_termSourceLanguage</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a457b19a604578033bd13ab3d4007ba2e" prot="public" virt="non-virtual"><scope>lmf::src::core::statement::Statement</scope><name>set_usageNote</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a0a666409b4347a2e1fc306c776403644" prot="public" virt="non-virtual"><scope>lmf::src::core::statement::Statement</scope><name>set_writtenForm</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1aee57d23dce671062480f9b84ac43a2f1" prot="public" virt="non-virtual"><scope>lmf::src::core::statement::Statement</scope><name>targetLexicalEntry</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1ac334fff77caf25a783e77aa55ca3128d" prot="public" virt="non-virtual"><scope>lmf::src::core::statement::Statement</scope><name>termSourceLanguage</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1af2781856fbb02d55acc39864ec66aa24" prot="public" virt="non-virtual"><scope>lmf::src::core::statement::Statement</scope><name>text_representation</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a2e146c5f5de5eed52c082c2cc0bea7d0" prot="public" virt="non-virtual"><scope>lmf::src::core::statement::Statement</scope><name>usageNote</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1statement_1_1_statement_1a4126cee37a75d852056ae49f45cf6cc3" prot="public" virt="non-virtual"><scope>lmf::src::core::statement::Statement</scope><name>writtenForm</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
