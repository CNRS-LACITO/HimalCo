<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kind="class" prot="public">
    <compoundname>lmf::src::core::lexical_entry::LexicalEntry</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a402073c8f71f2f779725c6aeefa5df49" prot="public" static="no" mutable="no">
        <type></type>
        <definition>lmf.src.core.lexical_entry.LexicalEntry::homonymNumber</definition>
        <argsstring></argsstring>
        <name>homonymNumber</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="24" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1aaec5fa141d51ae38a0346b0f863f4522" prot="public" static="no" mutable="no">
        <type></type>
        <definition>lmf.src.core.lexical_entry.LexicalEntry::status</definition>
        <argsstring></argsstring>
        <name>status</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="25" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1ac6d96435547dea66e1433966098249b8" prot="public" static="no" mutable="no">
        <type></type>
        <definition>lmf.src.core.lexical_entry.LexicalEntry::date</definition>
        <argsstring></argsstring>
        <name>date</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="26" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1ad59e408fda5122725f6f361e08739916" prot="public" static="no" mutable="no">
        <type></type>
        <definition>lmf.src.core.lexical_entry.LexicalEntry::partOfSpeech</definition>
        <argsstring></argsstring>
        <name>partOfSpeech</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="27" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a6e84227c5c4a0d4d6574f3daa19ebac4" prot="public" static="no" mutable="no">
        <type></type>
        <definition>lmf.src.core.lexical_entry.LexicalEntry::independentWord</definition>
        <argsstring></argsstring>
        <name>independentWord</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="28" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a27dfa720ca4c7839a105bd7b671762ee" prot="public" static="no" mutable="no">
        <type></type>
        <definition>lmf.src.core.lexical_entry.LexicalEntry::bibliography</definition>
        <argsstring></argsstring>
        <name>bibliography</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="29" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a28fe2bf7e53e223a6919bb38b6d55256" prot="public" static="no" mutable="no">
        <type></type>
        <definition>lmf.src.core.lexical_entry.LexicalEntry::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <briefdescription>
<para>UID is managed at the Lexicon level. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="31" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a92b1d39e09a8af1a90e780ef5780cc92" prot="public" static="no" mutable="no">
        <type></type>
        <definition>lmf.src.core.lexical_entry.LexicalEntry::sense</definition>
        <argsstring></argsstring>
        <name>sense</name>
        <briefdescription>
<para>Sense instances are owned by <ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> There is zero to many Sense instances per <ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="34" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a25e285f1f40cf8c4a17d021c2d2b878f" prot="public" static="no" mutable="no">
        <type></type>
        <definition>lmf.src.core.lexical_entry.LexicalEntry::lemma</definition>
        <argsstring></argsstring>
        <name>lemma</name>
        <briefdescription>
<para>Lemma instance is owned by <ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> There is one Lemma instance by <ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="37" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a860127ced1990bb4f1639f23d989da27" prot="public" static="no" mutable="no">
        <type></type>
        <definition>lmf.src.core.lexical_entry.LexicalEntry::related_form</definition>
        <argsstring></argsstring>
        <name>related_form</name>
        <briefdescription>
<para>RelatedForm instances are owned by <ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> There is zero to many RelatedForm instances per <ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="40" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a6418f42441f0d6d25449270298010d03" prot="public" static="no" mutable="no">
        <type></type>
        <definition>lmf.src.core.lexical_entry.LexicalEntry::word_form</definition>
        <argsstring></argsstring>
        <name>word_form</name>
        <briefdescription>
<para>WordForm instances are owned by <ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> There is zero to many WordForm instances per <ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="43" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a381ed307ce61e5ae137abc94e45be36a" prot="public" static="no" mutable="no">
        <type></type>
        <definition>lmf.src.core.lexical_entry.LexicalEntry::stem</definition>
        <argsstring></argsstring>
        <name>stem</name>
        <briefdescription>
<para>Stem instances are owned by <ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> There is zero to many Stem instances per <ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="46" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a852239d30b350d7ec590c7a6a01b76b8" prot="public" static="no" mutable="no">
        <type></type>
        <definition>lmf.src.core.lexical_entry.LexicalEntry::list_of_components</definition>
        <argsstring></argsstring>
        <name>list_of_components</name>
        <briefdescription>
<para>ListOfComponents instance is owned by <ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> There is zero or one ListOfComponents instance per <ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="49" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1aaf11d999bc91a5cf161fd4ce0ca3319b" prot="public" static="no" mutable="no">
        <type></type>
        <definition>lmf.src.core.lexical_entry.LexicalEntry::targets</definition>
        <argsstring></argsstring>
        <name>targets</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="51" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="51" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a93548bb677c73c375d32da1a809c03bd" prot="private" static="no" mutable="no">
        <type></type>
        <definition>lmf.src.core.lexical_entry.LexicalEntry::__speaker</definition>
        <argsstring></argsstring>
        <name>__speaker</name>
        <briefdescription>
<para>Pointer to an existing Speaker There is one Speaker pointer per <ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="54" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a99f46e253fd0abb1999d14f4eac102d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.__init__</definition>
        <argsstring></argsstring>
        <name>__init__</name>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instances are owned by Lexicon. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>Unique IDentifier. If not provided, default value is 0. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A <ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="18" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="18" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a7aef35b0a044411935c2fe5d6877699f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.__del__</definition>
        <argsstring></argsstring>
        <name>__del__</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
<para>Release Sense, Lemma, RelatedForm, WordForm, Stem, ListOfComponents instances. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="56" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="56" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1ad9aec09ea7a1664650e8667b5d161c84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.set_partOfSpeech</definition>
        <argsstring></argsstring>
        <name>set_partOfSpeech</name>
        <briefdescription>
<para>Set grammatical category. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>part_of_speech</parametername>
</parameternamelist>
<parameterdescription>
<para>The grammatical category to set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>range</parametername>
</parameternamelist>
<parameterdescription>
<para>A Python set giving all possible values of part of speech LMF attribute. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mapping</parametername>
</parameternamelist>
<parameterdescription>
<para>A Python dictionary giving the mapping between MDF and LMF values. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="79" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="79" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a198ccaea559997368ea7b0f9a198707f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.get_partOfSpeech</definition>
        <argsstring></argsstring>
        <name>get_partOfSpeech</name>
        <briefdescription>
<para>Get grammatical category. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> attribute &apos;partOfSpeech&apos;. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="94" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="94" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1ab991806fefc45e2cc5f3bf88ee3d6604" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.set_status</definition>
        <argsstring></argsstring>
        <name>set_status</name>
        <briefdescription>
<para>Set lexical entry status. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>The status to set. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="100" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="100" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a616dd1fa3fbfc0db546832fd9ba5b3e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.get_status</definition>
        <argsstring></argsstring>
        <name>get_status</name>
        <briefdescription>
<para>Get lexical entry status. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> attribute &apos;status&apos;. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="108" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="108" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a37728197c726801ebfed551feb0d9fa7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.set_date</definition>
        <argsstring></argsstring>
        <name>set_date</name>
        <briefdescription>
<para>Set lexical entry date. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>The date to set. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="114" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="114" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1ae8d874e16530609d02844a04c1cf1ec5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.get_date</definition>
        <argsstring></argsstring>
        <name>get_date</name>
        <briefdescription>
<para>Get lexical entry date. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> attribute &apos;date&apos;. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="122" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="122" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a7f1def059e7cb83693727e36df501e62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.set_homonymNumber</definition>
        <argsstring></argsstring>
        <name>set_homonymNumber</name>
        <briefdescription>
<para>Set lexical entry homonym number. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>homonym_number</parametername>
</parameternamelist>
<parameterdescription>
<para>The homonym number to set. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="128" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="128" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a526cd4c368d55317f6cda8d507865fd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.get_homonymNumber</definition>
        <argsstring></argsstring>
        <name>get_homonymNumber</name>
        <briefdescription>
<para>Get lexical entry homonym number. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> attribute &apos;homonymNumber&apos;. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="136" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="136" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1ab918c4abc48ca39893be6d25f564b84a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.set_bibliography</definition>
        <argsstring></argsstring>
        <name>set_bibliography</name>
        <briefdescription>
<para>Set lexical entry bibliography. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bibliography</parametername>
</parameternamelist>
<parameterdescription>
<para>The bibliography to set. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="142" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="142" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1af6682cbe4dee446ab8d4488fa36ae832" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.get_bibliography</definition>
        <argsstring></argsstring>
        <name>get_bibliography</name>
        <briefdescription>
<para>Get lexical entry bibliography. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> attribute &apos;bibliography&apos;. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="150" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="150" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1aef758dd6e01b35dc780e0c8b9f7124d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.set_independentWord</definition>
        <argsstring></argsstring>
        <name>set_independentWord</name>
        <briefdescription>
<para>Set lexical entry independent word indication. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>independent_word</parametername>
</parameternamelist>
<parameterdescription>
<para>The independent word indication to set. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="156" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="156" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1aa30f1aec6f435fea3185aa555c44d8b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.get_independentWord</definition>
        <argsstring></argsstring>
        <name>get_independentWord</name>
        <briefdescription>
<para>Get lexical entry independent word indication. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> attribute &apos;independentWord&apos;. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="166" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="166" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a337ed7fdab2cabc9dce913920424dd95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.get_id</definition>
        <argsstring></argsstring>
        <name>get_id</name>
        <briefdescription>
<para>Get Unique IDentifier. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> attribute &apos;id&apos; followed by the homonym number. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="172" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="172" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a0720cfa82decbc27a30d4830c1e8cbf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.set_lexeme</definition>
        <argsstring></argsstring>
        <name>set_lexeme</name>
        <briefdescription>
<para>Set lexeme. </para>        </briefdescription>
        <detaileddescription>
<para>Attribute &apos;lexeme&apos; is owned by Lemma. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lexeme</parametername>
</parameternamelist>
<parameterdescription>
<para>The lexeme to set. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="181" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="181" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a351a470c736be8b896354d27f56e1833" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.get_lexeme</definition>
        <argsstring></argsstring>
        <name>get_lexeme</name>
        <briefdescription>
<para>Get lexeme. </para>        </briefdescription>
        <detaileddescription>
<para>Attribute &apos;lexeme&apos; is owned by Lemma. <simplesect kind="return"><para>Lemma attribute &apos;lexeme&apos; if any. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="193" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="193" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1ac3b6d197ee90f1aec5b61e24613c091f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.create_related_form</definition>
        <argsstring></argsstring>
        <name>create_related_form</name>
        <briefdescription>
<para>Create a related form. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lexeme</parametername>
</parameternamelist>
<parameterdescription>
<para>Related lexeme. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>semantic_relation</parametername>
</parameternamelist>
<parameterdescription>
<para>The semantic relation existing between this lexical entry and the related lexeme to create. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RelatedForm instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="201" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="201" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a9078d381fea92a4d1d3f57b391a2b5b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.add_related_form</definition>
        <argsstring></argsstring>
        <name>add_related_form</name>
        <briefdescription>
<para>Add a related form to the lexical entry. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>related_form</parametername>
</parameternamelist>
<parameterdescription>
<para>The RelatedForm instance to add to the lexical entry. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="209" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="209" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a46576799af0465084051e3c2957afa3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.create_and_add_related_form</definition>
        <argsstring></argsstring>
        <name>create_and_add_related_form</name>
        <briefdescription>
<para>Create and add a related form to the lexical entry. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lexeme</parametername>
</parameternamelist>
<parameterdescription>
<para>Related lexeme. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>semantic_relation</parametername>
</parameternamelist>
<parameterdescription>
<para>The semantic relation existing between this lexical entry and the related lexeme to create. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="217" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="217" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1ac89bb82f0afe4e1566f34379f3a188da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.find_related_forms</definition>
        <argsstring></argsstring>
        <name>find_related_forms</name>
        <briefdescription>
<para>Find related lexemes. </para>        </briefdescription>
        <detaileddescription>
<para>This attribute is owned by RelatedForm. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>semantic_relation</parametername>
</parameternamelist>
<parameterdescription>
<para>The semantic relation to consider to retrieve the related form. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A Python list of found RelatedForm attributes &apos;targets&apos;. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="230" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="230" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1aee5b118b1015a35a5e8426235d325291" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.get_related_forms</definition>
        <argsstring></argsstring>
        <name>get_related_forms</name>
        <briefdescription>
<para>Get all related forms maintained by the lexical entry. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>semantic_relation</parametername>
</parameternamelist>
<parameterdescription>
<para>The semantic relation to consider to retrieve the related forms. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A Python set of related forms. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="242" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="242" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a62717ccb205bcbea9a421cbc562068ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.get_form_representations</definition>
        <argsstring></argsstring>
        <name>get_form_representations</name>
        <briefdescription>
<para>Get all form representations maintained by the lemma. </para>        </briefdescription>
        <detaileddescription>
<para>Attribute &apos;<ref refid="namespacelmf_1_1src_1_1core_1_1form__representation" kindref="compound">form_representation</ref>&apos; is owned by Lemma. <simplesect kind="return"><para>Lemma attribute &apos;<ref refid="namespacelmf_1_1src_1_1core_1_1form__representation" kindref="compound">form_representation</ref>&apos; if any. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="256" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="256" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1ab5ec3863b9c8623df7f41ad07332b2ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.set_variant_form</definition>
        <argsstring></argsstring>
        <name>set_variant_form</name>
        <briefdescription>
<para>Set variant form and type. </para>        </briefdescription>
        <detaileddescription>
<para>Attributes &apos;variantForm&apos; and &apos;type&apos; are owned by FormRepresentation, which is owned by Lemma. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>variant_form</parametername>
</parameternamelist>
<parameterdescription>
<para>Variant form. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of variant, in range &apos;type_variant_range&apos; defined in &apos;<ref refid="range_8py" kindref="compound">common/range.py</ref>&apos;. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="264" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="264" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a32a47f7dd435da7c5e06799fdee7d094" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.get_variant_forms</definition>
        <argsstring></argsstring>
        <name>get_variant_forms</name>
        <briefdescription>
<para>Get all variant forms of specified type. </para>        </briefdescription>
        <detaileddescription>
<para>Attribute &apos;variantForm&apos; is owned by FormRepresentation, which is owned by Lemma. <simplesect kind="return"><para>A Python list of FormRepresentation attributes &apos;variantForm&apos; if type matches. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="277" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="277" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a150a57b434161d86b8962b3ef7f0ff51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.set_variant_comment</definition>
        <argsstring></argsstring>
        <name>set_variant_comment</name>
        <briefdescription>
<para>Set variant comment and language. </para>        </briefdescription>
        <detaileddescription>
<para>Attributes &apos;comment&apos; and &apos;language&apos; are owned by FormRepresentation, which is owned by Lemma. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>comment</parametername>
</parameternamelist>
<parameterdescription>
<para>Variant comment. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>language</parametername>
</parameternamelist>
<parameterdescription>
<para>Language of comment. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="285" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="285" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1ad816834c160783393a4a60a71431886b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.set_tone</definition>
        <argsstring></argsstring>
        <name>set_tone</name>
        <briefdescription>
<para>Set tone. </para>        </briefdescription>
        <detaileddescription>
<para>Attribute &apos;tone&apos; is owned by FormRepresentation, which is owned by Lemma. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tone</parametername>
</parameternamelist>
<parameterdescription>
<para>The tone to set. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="298" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="298" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a5527aa1541a398941192ef5a5d400e8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.get_tones</definition>
        <argsstring></argsstring>
        <name>get_tones</name>
        <briefdescription>
<para>Get all tones. </para>        </briefdescription>
        <detaileddescription>
<para>Attribute &apos;tone&apos; is owned by FormRepresentation, which is owned by Lemma. <simplesect kind="return"><para>A Python list of FormRepresentation attributes &apos;tone&apos; if any. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="310" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="310" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a931ea014bba9cddfd2e1e9d4cdb1f40a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.set_geographical_variant</definition>
        <argsstring></argsstring>
        <name>set_geographical_variant</name>
        <briefdescription>
<para>Set geographical variant. </para>        </briefdescription>
        <detaileddescription>
<para>Attribute &apos;geographicalVariant&apos; is owned by FormRepresentation, which is owned by Lemma. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>geographical_variant</parametername>
</parameternamelist>
<parameterdescription>
<para>The geographical variant to set. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="318" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="318" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a475be85222f2a0b4fc6f9e218675fc47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.set_phonetic_form</definition>
        <argsstring></argsstring>
        <name>set_phonetic_form</name>
        <briefdescription>
<para>Set phonetic form. </para>        </briefdescription>
        <detaileddescription>
<para>Attribute &apos;phoneticForm&apos; is owned by FormRepresentation, which is owned by Lemma. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>phonetic_form</parametername>
</parameternamelist>
<parameterdescription>
<para>The phonetic form to set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>script_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the script used to write the phonetic form, e.g. pinyin. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="330" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="330" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1ad341d1cfa5e60593a7bce27a5eec8b98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.get_phonetic_forms</definition>
        <argsstring></argsstring>
        <name>get_phonetic_forms</name>
        <briefdescription>
<para>Get all phonetic forms. </para>        </briefdescription>
        <detaileddescription>
<para>Attribute &apos;phoneticForm&apos; is owned by FormRepresentation, which is owned by Lemma. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>script_name</parametername>
</parameternamelist>
<parameterdescription>
<para>If provided, get only phonetic forms that are written using this script. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A Python list of FormRepresentation attributes &apos;phoneticForm&apos; if any. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="343" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="343" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a2e094703f5eb2e25c5d9c4aabf67ae72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.set_contextual_variation</definition>
        <argsstring></argsstring>
        <name>set_contextual_variation</name>
        <briefdescription>
<para>Set contextual variation. </para>        </briefdescription>
        <detaileddescription>
<para>Attribute &apos;contextualVariation&apos; is owned by FormRepresentation, which is owned by Lemma. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>contextual_variation</parametername>
</parameternamelist>
<parameterdescription>
<para>The contextual variation to set. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="352" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="352" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1aa2a404954cb0bd85ddfeec53db637dd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.get_contextual_variations</definition>
        <argsstring></argsstring>
        <name>get_contextual_variations</name>
        <briefdescription>
<para>Get all contextual variations. </para>        </briefdescription>
        <detaileddescription>
<para>Attribute &apos;contextualVariation&apos; is owned by FormRepresentation, which is owned by Lemma. <simplesect kind="return"><para>A Python list of FormRepresentation attributes &apos;contextualVariation&apos; if any. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="364" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="364" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a091b34e06640680cc167472c519b5c3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.set_spelling_variant</definition>
        <argsstring></argsstring>
        <name>set_spelling_variant</name>
        <briefdescription>
<para>Set spelling variant. </para>        </briefdescription>
        <detaileddescription>
<para>Attribute &apos;spellingVariant&apos; is owned by FormRepresentation, which is owned by Lemma. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>spelling_variant</parametername>
</parameternamelist>
<parameterdescription>
<para>The spelling variant to set. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="372" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="372" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a72701906e798fbc34c6ef6ea177901e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.get_spelling_variants</definition>
        <argsstring></argsstring>
        <name>get_spelling_variants</name>
        <briefdescription>
<para>Get all spelling variants. </para>        </briefdescription>
        <detaileddescription>
<para>Attribute &apos;spellingVariant&apos; is owned by FormRepresentation, which is owned by Lemma. <simplesect kind="return"><para>A Python list of FormRepresentation attributes &apos;spellingVariant&apos; if any. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="384" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="384" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a13f7f29967c9ac00d8453578904cc394" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.set_citation_form</definition>
        <argsstring></argsstring>
        <name>set_citation_form</name>
        <briefdescription>
<para>Set citation form. </para>        </briefdescription>
        <detaileddescription>
<para>Attribute &apos;citationForm&apos; is owned by FormRepresentation, which is owned by Lemma. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>citation_form</parametername>
</parameternamelist>
<parameterdescription>
<para>The citation form to set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>script_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the script used to write the citation form, e.g. devanagari. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="392" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="392" bodyend="404"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a14304ddd9123093352bce750b8dce7c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.get_citation_forms</definition>
        <argsstring></argsstring>
        <name>get_citation_forms</name>
        <briefdescription>
<para>Get all citation forms. </para>        </briefdescription>
        <detaileddescription>
<para>Attribute &apos;citationForm&apos; is owned by FormRepresentation, which is owned by Lemma. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>script_name</parametername>
</parameternamelist>
<parameterdescription>
<para>If provided, get only citation forms that are written using this script. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A Python list of FormRepresentation attributes &apos;citationForm&apos; if any. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="405" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="405" bodyend="413"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1aef2e9bae6caaa9cebcb1960869752037" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.set_dialect</definition>
        <argsstring></argsstring>
        <name>set_dialect</name>
        <briefdescription>
<para>Set dialect. </para>        </briefdescription>
        <detaileddescription>
<para>Attribute &apos;dialect&apos; is owned by FormRepresentation, which is owned by Lemma. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dialect</parametername>
</parameternamelist>
<parameterdescription>
<para>The dialect to set. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="414" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="414" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a7aab11889a7b3ec80087cce8e4ed28e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.set_transliteration</definition>
        <argsstring></argsstring>
        <name>set_transliteration</name>
        <briefdescription>
<para>Set transliteration. </para>        </briefdescription>
        <detaileddescription>
<para>Attribute &apos;transliteration&apos; is owned by FormRepresentation, which is owned by Lemma. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>transliteration</parametername>
</parameternamelist>
<parameterdescription>
<para>The transliteration to set. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="426" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="426" bodyend="437"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a24bb03c658cff21a7b34d30e720f1da5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.get_transliterations</definition>
        <argsstring></argsstring>
        <name>get_transliterations</name>
        <briefdescription>
<para>Get all transliterations. </para>        </briefdescription>
        <detaileddescription>
<para>Attribute &apos;transliteration&apos; is owned by FormRepresentation, which is owned by Lemma. <simplesect kind="return"><para>A Python list of FormRepresentation attributes &apos;transliteration&apos; if any. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="438" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="438" bodyend="445"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a254dd885319a2be995b81f659cacce88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.set_script_name</definition>
        <argsstring></argsstring>
        <name>set_script_name</name>
        <briefdescription>
<para>Set script name. </para>        </briefdescription>
        <detaileddescription>
<para>Attribute &apos;scriptName&apos; is owned by FormRepresentation, which is owned by Lemma. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>script_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The script name to set. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="446" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="446" bodyend="457"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a4ac0758b963893625a283a289b4c1549" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.create_sense</definition>
        <argsstring></argsstring>
        <name>create_sense</name>
        <briefdescription>
<para>Create a sense. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifier. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Sense instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="458" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="458" bodyend="464"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a4aef3989f5793f9ef330cbca51b77520" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.add_sense</definition>
        <argsstring></argsstring>
        <name>add_sense</name>
        <briefdescription>
<para>Add a sense to the lexical entry. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sense</parametername>
</parameternamelist>
<parameterdescription>
<para>The Sense instance to add to the lexical entry. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="465" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="465" bodyend="472"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a6a3c981f673e000f25b0be3df42b53f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.create_and_add_sense</definition>
        <argsstring></argsstring>
        <name>create_and_add_sense</name>
        <briefdescription>
<para>Create and add a sense to the lexical entry. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sense_number</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of the sense to add. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="473" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="473" bodyend="481"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a00e6fd296669f34f047b3502bebd6a90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.get_senses</definition>
        <argsstring></argsstring>
        <name>get_senses</name>
        <briefdescription>
<para>Get all senses maintained by the lexical entry. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> attribute &apos;sense&apos;. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="482" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="482" bodyend="487"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a50334b78f54e0ad7a2bedbc7d5bf821f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.get_last_sense</definition>
        <argsstring></argsstring>
        <name>get_last_sense</name>
        <briefdescription>
<para>Get the previously registered sense. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The last element of <ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> attribute &apos;sense&apos;. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="488" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="488" bodyend="494"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1aaf135ff72cc9f20358208e733c3a0ffb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.set_definition</definition>
        <argsstring></argsstring>
        <name>set_definition</name>
        <briefdescription>
<para>Set definition and language. </para>        </briefdescription>
        <detaileddescription>
<para>Attributes &apos;definition&apos; and &apos;language&apos; are owned by Definition, which is owned by Sense. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>definition</parametername>
</parameternamelist>
<parameterdescription>
<para>Definition. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>language</parametername>
</parameternamelist>
<parameterdescription>
<para>Language of definition. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="495" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="495" bodyend="510"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1ab83d1cb6142baa7a1914db467f63121f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.set_gloss</definition>
        <argsstring></argsstring>
        <name>set_gloss</name>
        <briefdescription>
<para>Set gloss and language. </para>        </briefdescription>
        <detaileddescription>
<para>Attributes &apos;gloss&apos; and &apos;language&apos; are owned by Definition, which is owned by Sense. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gloss</parametername>
</parameternamelist>
<parameterdescription>
<para>Gloss. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>language</parametername>
</parameternamelist>
<parameterdescription>
<para>Language of gloss. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="511" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="511" bodyend="526"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a5efc30f6a6e8bb9b761ece95523719df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.set_note</definition>
        <argsstring></argsstring>
        <name>set_note</name>
        <briefdescription>
<para>Set note, type and language. </para>        </briefdescription>
        <detaileddescription>
<para>Attributes &apos;note&apos;, &apos;noteType&apos; and &apos;language&apos; are owned by Statement, which owned by Definition, itself owned by Sense. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>note</parametername>
</parameternamelist>
<parameterdescription>
<para>Note to set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the note. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>language</parametername>
</parameternamelist>
<parameterdescription>
<para>Language of the note. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="527" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="527" bodyend="543"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1afd1942b2ace38b2e6522c9b1c55a17f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.find_notes</definition>
        <argsstring></argsstring>
        <name>find_notes</name>
        <briefdescription>
<para>Find notes. </para>        </briefdescription>
        <detaileddescription>
<para>This attribute is owned by Statement, which owned by Definition, itself owned by Sense. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the note to consider to retrieve the note. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A Python list of found Statement attributes &apos;notes&apos;. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="544" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="544" bodyend="554"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1aaf37b80eaa95fb2fc6e8a20e5cf3e023" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.set_usage_note</definition>
        <argsstring></argsstring>
        <name>set_usage_note</name>
        <briefdescription>
<para>Set usage note and language. </para>        </briefdescription>
        <detaileddescription>
<para>Attributes &apos;usageNote&apos; and &apos;language&apos; are owned by Statement, which owned by Definition, itself owned by Sense. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>usage_note</parametername>
</parameternamelist>
<parameterdescription>
<para>Usage note to set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>language</parametername>
</parameternamelist>
<parameterdescription>
<para>Language of the usage note. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="555" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="555" bodyend="570"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1af08e4e9e77021330f1a093e7e0fe7a36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.set_encyclopedic_information</definition>
        <argsstring></argsstring>
        <name>set_encyclopedic_information</name>
        <briefdescription>
<para>Set encyclopedic information and language. </para>        </briefdescription>
        <detaileddescription>
<para>Attributes &apos;encyclopedicInformation&apos; and &apos;language&apos; are owned by Statement, which owned by Definition, itself owned by Sense. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>encyclopedic_information</parametername>
</parameternamelist>
<parameterdescription>
<para>Encyclopedic information to set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>language</parametername>
</parameternamelist>
<parameterdescription>
<para>Language of the encyclopedic information. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="571" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="571" bodyend="586"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a39a8812156d3d5710691ca427cd7fd6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.set_restriction</definition>
        <argsstring></argsstring>
        <name>set_restriction</name>
        <briefdescription>
<para>Set restriction and language. </para>        </briefdescription>
        <detaileddescription>
<para>Attributes &apos;restriction&apos; and &apos;language&apos; are owned by Statement, which owned by Definition, itself owned by Sense. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>restriction</parametername>
</parameternamelist>
<parameterdescription>
<para>Restriction to set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>language</parametername>
</parameternamelist>
<parameterdescription>
<para>Language of the restriction. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="587" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="587" bodyend="602"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a1530ee0141c9459719b0e07b65ccff82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.set_borrowed_word</definition>
        <argsstring></argsstring>
        <name>set_borrowed_word</name>
        <briefdescription>
<para>Set source language (in English). </para>        </briefdescription>
        <detaileddescription>
<para>Attribute &apos;borrowedWord&apos; is owned by Statement, which is owned by Definition, itself owned by Sense. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>borrowed_word</parametername>
</parameternamelist>
<parameterdescription>
<para>Source language. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="603" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="603" bodyend="617"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a0cc51d09a44392de1065c5a94e1da39d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.get_borrowed_word</definition>
        <argsstring></argsstring>
        <name>get_borrowed_word</name>
        <briefdescription>
<para>Get source language (in English). </para>        </briefdescription>
        <detaileddescription>
<para>This attribute is owned by Statement, which is owned by Definition, itself owned by Sense. <simplesect kind="return"><para>Statement attribute &apos;borrowedWord&apos;. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="618" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="618" bodyend="628"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a14705c1acad6100ea1adbbe6b89e0f22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.set_written_form</definition>
        <argsstring></argsstring>
        <name>set_written_form</name>
        <briefdescription>
<para>Set loan word. </para>        </briefdescription>
        <detaileddescription>
<para>Attribute &apos;writtenForm&apos; is owned by Statement, which is owned by Definition, itself owned by Sense. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>written_form</parametername>
</parameternamelist>
<parameterdescription>
<para>Loan word. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="629" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="629" bodyend="643"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a68a87b24b174bccf92e6a400b6208de4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.get_written_form</definition>
        <argsstring></argsstring>
        <name>get_written_form</name>
        <briefdescription>
<para>Get loan word. </para>        </briefdescription>
        <detaileddescription>
<para>This attribute is owned by Statement, which is owned by Definition, itself owned by Sense. <simplesect kind="return"><para>Statement attribute &apos;writtenForm&apos;. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="644" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="644" bodyend="654"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a90650c9ec70a484186405f9b40efa618" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.set_etymology</definition>
        <argsstring></argsstring>
        <name>set_etymology</name>
        <briefdescription>
<para>Set etymology. </para>        </briefdescription>
        <detaileddescription>
<para>Attribute &apos;etymology&apos; is owned by Statement, which is owned by Definition, itself owned by Sense. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>etymology</parametername>
</parameternamelist>
<parameterdescription>
<para>Etymology. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="655" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="655" bodyend="669"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1ab2168094e851c2dccb798fc2a0e45ec2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.get_etymology</definition>
        <argsstring></argsstring>
        <name>get_etymology</name>
        <briefdescription>
<para>Get etymology. </para>        </briefdescription>
        <detaileddescription>
<para>This attribute is owned by Statement, which is owned by Definition, itself owned by Sense. <simplesect kind="return"><para>The first found Statement attribute &apos;etymology&apos;. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="670" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="670" bodyend="678"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1ac585a9ac515b028d919fd4902bcf5c1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.set_etymology_comment</definition>
        <argsstring></argsstring>
        <name>set_etymology_comment</name>
        <briefdescription>
<para>Set etymology comment and language. </para>        </briefdescription>
        <detaileddescription>
<para>Attributes &apos;etymologyComment&apos; and &apos;termSourceLanguage&apos; are owned by Statement, which is owned by Definition, itself owned by Sense. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>etymology_comment</parametername>
</parameternamelist>
<parameterdescription>
<para>Etymology comment. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>term_source_language</parametername>
</parameternamelist>
<parameterdescription>
<para>Language of the comment. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="679" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="679" bodyend="694"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a667de841ccf2e947f15ed1b3fbd3fe77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.get_etymology_comment</definition>
        <argsstring></argsstring>
        <name>get_etymology_comment</name>
        <briefdescription>
<para>Get etymology comment. </para>        </briefdescription>
        <detaileddescription>
<para>This attribute is owned by Statement, which is owned by Definition, itself owned by Sense. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term_source_language</parametername>
</parameternamelist>
<parameterdescription>
<para>The language of the etymology comment to retrieve. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The first found Statement attribute &apos;etymologyComment&apos;. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="695" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="695" bodyend="704"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a5588b93f3b5fc77c3ea74fd7fef1cca1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.get_term_source_language</definition>
        <argsstring></argsstring>
        <name>get_term_source_language</name>
        <briefdescription>
<para>Get language used for the etymology comment. </para>        </briefdescription>
        <detaileddescription>
<para>This attribute is owned by Statement, which is owned by Definition, itself owned by Sense. <simplesect kind="return"><para>Statement attribute &apos;termSourceLanguage&apos;. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="705" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="705" bodyend="715"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a9e37ea6e11cfdd10b7fe48f332d5dbe9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.set_etymology_gloss</definition>
        <argsstring></argsstring>
        <name>set_etymology_gloss</name>
        <briefdescription>
<para>Set etymology gloss. </para>        </briefdescription>
        <detaileddescription>
<para>Attribute &apos;etymologyGloss&apos; is owned by Statement, which is owned by Definition, itself owned by Sense. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>etymology_gloss</parametername>
</parameternamelist>
<parameterdescription>
<para>Etymology gloss. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="716" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="716" bodyend="730"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a1756da5cb9ce0bab99cc900d3204be27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.get_etymology_gloss</definition>
        <argsstring></argsstring>
        <name>get_etymology_gloss</name>
        <briefdescription>
<para>Get etymology gloss. </para>        </briefdescription>
        <detaileddescription>
<para>This attribute is owned by Statement, which is owned by Definition, itself owned by Sense. <simplesect kind="return"><para>Statement attribute &apos;etymologyGloss&apos;. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="731" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="731" bodyend="741"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a82d85b914a1dd8f6ad6738b25c5ea172" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.set_etymology_source</definition>
        <argsstring></argsstring>
        <name>set_etymology_source</name>
        <briefdescription>
<para>Set etymology source. </para>        </briefdescription>
        <detaileddescription>
<para>Attribute &apos;etymologySource&apos; is owned by Statement, which is owned by Definition, itself owned by Sense. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>etymology_source</parametername>
</parameternamelist>
<parameterdescription>
<para>Etymology source. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="742" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="742" bodyend="756"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a94b171c5e86e2fdeabb7bff1bc32de10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.get_etymology_source</definition>
        <argsstring></argsstring>
        <name>get_etymology_source</name>
        <briefdescription>
<para>Get etymology source. </para>        </briefdescription>
        <detaileddescription>
<para>This attribute is owned by Statement, which is owned by Definition, itself owned by Sense. <simplesect kind="return"><para>Statement attribute &apos;etymologySource&apos;. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="757" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="757" bodyend="767"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a819e2e7556f604962d5e299b747e55bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.set_scientific_name</definition>
        <argsstring></argsstring>
        <name>set_scientific_name</name>
        <briefdescription>
<para>Set scientific_name. </para>        </briefdescription>
        <detaileddescription>
<para>Attribute &apos;scientificName&apos; is owned by Statement, which is owned by Definition, itself owned by Sense. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scientific_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Scientific name. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="768" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="768" bodyend="782"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a94c696b57970f35eabe92f2e454aafb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.get_scientific_name</definition>
        <argsstring></argsstring>
        <name>get_scientific_name</name>
        <briefdescription>
<para>Get scientific name. </para>        </briefdescription>
        <detaileddescription>
<para>This attribute is owned by Statement, which is owned by Definition, itself owned by Sense. <simplesect kind="return"><para>Statement attribute &apos;scientificName&apos;. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="783" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="783" bodyend="793"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1afa9239b3df5d96fa1648e634e8ff471c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.create_word_form</definition>
        <argsstring></argsstring>
        <name>create_word_form</name>
        <briefdescription>
<para>Create a word form. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>WordForm instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="794" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="794" bodyend="799"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a6d961cc5d3d155c2c93d4e991b766f04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.add_word_form</definition>
        <argsstring></argsstring>
        <name>add_word_form</name>
        <briefdescription>
<para>Add a word form to the lexical entry. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>word_form</parametername>
</parameternamelist>
<parameterdescription>
<para>The WordForm instance to add to the lexical entry. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="800" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="800" bodyend="807"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a78f21adcc19aca799e18e7ae89588e83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.get_word_forms</definition>
        <argsstring></argsstring>
        <name>get_word_forms</name>
        <briefdescription>
<para>Get all word forms maintained by the lexical entry. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A Python list of word forms. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="808" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="808" bodyend="813"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a5183e8be3b27dd7ff7f8ad2bc100c289" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.set_paradigm</definition>
        <argsstring></argsstring>
        <name>set_paradigm</name>
        <briefdescription>
<para>Set paradigm. </para>        </briefdescription>
        <detaileddescription>
<para>Attributes &apos;writtenForm&apos; and &apos;scriptName&apos; are owned by FormRepresentation, wich is owned by WordForm. Attributes &apos;person&apos;, &apos;anymacy&apos;, &apos;grammaticalNumber&apos; and &apos;clusivity&apos; are owned by WordForm. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>written_form</parametername>
</parameternamelist>
<parameterdescription>
<para>The paradigm to set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>script_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Script used for the written form. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>person</parametername>
</parameternamelist>
<parameterdescription>
<para>Person, e.g. first person. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>anymacy</parametername>
</parameternamelist>
<parameterdescription>
<para>Anymacy, e.g. animate or inanimate. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>grammatical_number</parametername>
</parameternamelist>
<parameterdescription>
<para>Grammatical number, e.g. singular or plural. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clusivity</parametername>
</parameternamelist>
<parameterdescription>
<para>Clusivity, e.g. inclusive or exclusive. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="814" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="814" bodyend="847"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a4d29b1f69f6591832869bdfdbed1dc90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.find_paradigms</definition>
        <argsstring></argsstring>
        <name>find_paradigms</name>
        <briefdescription>
<para>Find paradigms. </para>        </briefdescription>
        <detaileddescription>
<para>Attribute &apos;scriptName&apos; is owned by FormRepresentation, wich is owned by WordForm. Attributes &apos;person&apos;, &apos;anymacy&apos;, &apos;grammaticalNumber&apos; and &apos;clusivity&apos; are owned by WordForm. Attribute &apos;writtenForm&apos; to retrieve is owned by FormRepresentation, wich is owned by WordForm. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>script_name</parametername>
</parameternamelist>
<parameterdescription>
<para>If this argument is given, get paradigm written form only if written using this script. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>person</parametername>
</parameternamelist>
<parameterdescription>
<para>Person, e.g. first person. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>anymacy</parametername>
</parameternamelist>
<parameterdescription>
<para>Anymacy, e.g. animate or inanimate. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>grammatical_number</parametername>
</parameternamelist>
<parameterdescription>
<para>Grammatical number, e.g. singular or plural. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clusivity</parametername>
</parameternamelist>
<parameterdescription>
<para>Clusivity, e.g. inclusive or exclusive. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A Python list of FormRepresentation attributes &apos;writtenForm&apos;. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="848" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="848" bodyend="866"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1af2b23a5d39e9bddddf4da1a971d6928c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.set_paradigm_label</definition>
        <argsstring></argsstring>
        <name>set_paradigm_label</name>
        <briefdescription>
<para>Set paradigm label. </para>        </briefdescription>
        <detaileddescription>
<para>Attribute &apos;paradigmLabel&apos; is owned by Paradigm, which is owned by Sense. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>paradigm_label</parametername>
</parameternamelist>
<parameterdescription>
<para>Paradigm label. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="867" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="867" bodyend="881"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1ad991d3a24dea50c4d793b3c947fa9037" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.set_paradigm_form</definition>
        <argsstring></argsstring>
        <name>set_paradigm_form</name>
        <briefdescription>
<para>Set paradigm form. </para>        </briefdescription>
        <detaileddescription>
<para>Attribute &apos;paradigm&apos; is owned by Paradigm, which is owned by Sense. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>paradigm</parametername>
</parameternamelist>
<parameterdescription>
<para>Paradigm form. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>language</parametername>
</parameternamelist>
<parameterdescription>
<para>Language of the paradigm form. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="882" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="882" bodyend="897"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1ac4b0c5f22daeba6c9cb445e80c8245e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.set_morphology</definition>
        <argsstring></argsstring>
        <name>set_morphology</name>
        <briefdescription>
<para>Set morphology. </para>        </briefdescription>
        <detaileddescription>
<para>Attribute &apos;morphology&apos; is owned by Paradigm, which is owned by Sense. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>morphology</parametername>
</parameternamelist>
<parameterdescription>
<para>Morphology. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="898" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="898" bodyend="912"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1ae87d1a773737190fba2a22330b886472" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.get_paradigms</definition>
        <argsstring></argsstring>
        <name>get_paradigms</name>
        <briefdescription>
<para>Get all paradigms. </para>        </briefdescription>
        <detaileddescription>
<para>This attribute is owned by Sense. <simplesect kind="return"><para>Sense attribute &apos;paradigm&apos;. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="913" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="913" bodyend="922"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a18ba5dfe76ff71f23635aff3b2d5560f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.get_morphologies</definition>
        <argsstring></argsstring>
        <name>get_morphologies</name>
        <briefdescription>
<para>Get all morphologies. </para>        </briefdescription>
        <detaileddescription>
<para>This attribute is owned by Paradigm, which is owned by Sense. <simplesect kind="return"><para>A Python list of Paradigm attributes &apos;morphology&apos;. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="923" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="923" bodyend="934"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a8de47b684e09a774bd97be2cd98a2b68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.create_example</definition>
        <argsstring></argsstring>
        <name>create_example</name>
        <briefdescription>
<para>Create a context. </para>        </briefdescription>
        <detaileddescription>
<para>Attribute &apos;targets&apos; is owned by Context, itself owend by Sense. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reference</parametername>
</parameternamelist>
<parameterdescription>
<para>The example reference to set. If not provided, default value is None. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="935" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="935" bodyend="949"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1ab8281dae44c97d12be3a9fe3a865d40b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.create_and_add_example</definition>
        <argsstring></argsstring>
        <name>create_and_add_example</name>
        <briefdescription>
<para>Add an example to a new context and set its written form, language and script. </para>        </briefdescription>
        <detaileddescription>
<para>Attributes &apos;writtenForm&apos;, &apos;language&apos; and &apos;scriptName&apos; are owned by TextRepresentation, which is owned by Context, itself owend by Sense. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>written_form</parametername>
</parameternamelist>
<parameterdescription>
<para>The written form to set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>language</parametername>
</parameternamelist>
<parameterdescription>
<para>Language used for the written form. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>script_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the script used to write the example, e.g. devanagari. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="950" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="950" bodyend="966"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1acfdd422522c23eb7073da59ce09c764d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.add_example</definition>
        <argsstring></argsstring>
        <name>add_example</name>
        <briefdescription>
<para>Add an example to an existing context and set its written form, language and script. </para>        </briefdescription>
        <detaileddescription>
<para>Attributes &apos;writtenForm&apos;, &apos;language&apos; and &apos;scriptName&apos; are owned by TextRepresentation, which is owned by Context, itself owend by Sense. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>written_form</parametername>
</parameternamelist>
<parameterdescription>
<para>The written form to set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>language</parametername>
</parameternamelist>
<parameterdescription>
<para>Language used for the written form. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>script_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the script used to write the example, e.g. devanagari. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="967" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="967" bodyend="983"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a492011efb0c5c4dbe7312d3f4d7f8b5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.set_example_comment</definition>
        <argsstring></argsstring>
        <name>set_example_comment</name>
        <briefdescription>
<para>Set comment of an existing example. </para>        </briefdescription>
        <detaileddescription>
<para>Attribute &apos;comment&apos; is owned by TextRepresentation, which is owned by Context, itself owend by Sense. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>comment</parametername>
</parameternamelist>
<parameterdescription>
<para>The comment to set. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="984" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="984" bodyend="998"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a215b437f217ce3e652380f74059403e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.set_semantic_domain</definition>
        <argsstring></argsstring>
        <name>set_semantic_domain</name>
        <briefdescription>
<para>Set semantic domain and language. </para>        </briefdescription>
        <detaileddescription>
<para>Attributes &apos;semanticDomain&apos; and &apos;language&apos; are owned by SubjectField, which is owned by Sense. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>semantic_domain</parametername>
</parameternamelist>
<parameterdescription>
<para>The semantic domain to set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>language</parametername>
</parameternamelist>
<parameterdescription>
<para>Language used to describe the semantic domain. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="999" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="999" bodyend="1014"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1afd064ec67db5c093665165b59162f94f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.get_semantic_domains</definition>
        <argsstring></argsstring>
        <name>get_semantic_domains</name>
        <briefdescription>
<para>Get all semantic domains. </para>        </briefdescription>
        <detaileddescription>
<para>This attribute is owned by SubjectField, which is owned by Sense. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>language</parametername>
</parameternamelist>
<parameterdescription>
<para>If this argument is given, get only semantic domains that are described using this language. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A Python list of filtered SubjectField attributes &apos;semanticDomain&apos;. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="1015" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="1015" bodyend="1028"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a8b90d3fd26d1c8f54f36810ca63e156a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.set_translation</definition>
        <argsstring></argsstring>
        <name>set_translation</name>
        <briefdescription>
<para>Set translation and language. </para>        </briefdescription>
        <detaileddescription>
<para>Attributes &apos;translation&apos; and &apos;language&apos; are owned by Equivalent, which is owned by Sense. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>translation</parametername>
</parameternamelist>
<parameterdescription>
<para>The translation to set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>language</parametername>
</parameternamelist>
<parameterdescription>
<para>Language used for the translation. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="1029" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="1029" bodyend="1044"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1ab876a6ced2f3919efb81d72286419c01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.set_audio</definition>
        <argsstring></argsstring>
        <name>set_audio</name>
        <briefdescription>
<para>Set audio resource. </para>        </briefdescription>
        <detaileddescription>
<para>Attributes &apos;mediaType&apos;, &apos;fileName&apos;, &apos;author&apos;, &apos;quality&apos;, &apos;startPosition&apos;, &apos;durationOfEffectiveSpeech&apos;, &apos;externalReference&apos;, &apos;audioFileFormat&apos; are owned by Material/Audio, which is owned by FormRepresentation, itself owend by Lemma. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>media_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The media type to set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the audio file. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>author</parametername>
</parameternamelist>
<parameterdescription>
<para>Author of the recording. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>quality</parametername>
</parameternamelist>
<parameterdescription>
<para>Quality of the recording, in range &apos;quality_range&apos; defined in &apos;<ref refid="range_8py" kindref="compound">common/range.py</ref>&apos;. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start_position</parametername>
</parameternamelist>
<parameterdescription>
<para>Start position of the form in the recording, in format &apos;Thh:mm:ss,msms&apos;, e.g. &quot;T00:05:00&quot;. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>duration</parametername>
</parameternamelist>
<parameterdescription>
<para>Duration of the effcetive speech, in format &apos;PThhHmmMssS&apos;, e.g. &quot;PT00:05:00&quot;. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference of the audio file, if not directly provided. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>audio_file_format</parametername>
</parameternamelist>
<parameterdescription>
<para>Format of the audio file, e.g. &quot;wav&quot;. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="1045" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="1045" bodyend="1063"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1ac7d5e6cc18edad83387ae547e408035e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.is_subentry</definition>
        <argsstring></argsstring>
        <name>is_subentry</name>
        <briefdescription>
<para>Check if this lexical entry is a subentry. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>&apos;True&apos; if it is a subentry, &apos;False&apos; otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="1064" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="1064" bodyend="1073"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1adea1f58c4350fac27bdcd829c3e6cd54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.has_subentries</definition>
        <argsstring></argsstring>
        <name>has_subentries</name>
        <briefdescription>
<para>Check if this lexical entry has subentries. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>&apos;True&apos; if it has subentries, &apos;False&apos; otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="1074" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="1074" bodyend="1083"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a1f50b9666f7738439e1c33b701de758d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.get_subentries</definition>
        <argsstring></argsstring>
        <name>get_subentries</name>
        <briefdescription>
<para>Get subentries of this lexical entry. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A Python list of <ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="1084" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="1084" bodyend="1093"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1ae446eab7bcbbc3d8cb251848121f2cc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.get_main_entry</definition>
        <argsstring></argsstring>
        <name>get_main_entry</name>
        <briefdescription>
<para>If this lexical entry is a subentry, get its main entry. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A <ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> if it exists, &apos;None&apos; otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="1094" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="1094" bodyend="1101"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a3aceadc1a05034590a950e86c2720f54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.create_and_add_component</definition>
        <argsstring></argsstring>
        <name>create_and_add_component</name>
        <briefdescription>
<para>Create and add a component to the lexical entry. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>The position of the component in the multiword expression. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lexeme</parametername>
</parameternamelist>
<parameterdescription>
<para>Related lexeme. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="1102" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="1102" bodyend="1112"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a5ac31dac631e9825425bdfa550311555" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.get_components</definition>
        <argsstring></argsstring>
        <name>get_components</name>
        <briefdescription>
<para>If this lexical entry is a multiword expression, get its components. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A list of components if any, an empty list otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="1113" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="1113" bodyend="1120"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a8c0e7904dbb8c7b25560db7601b3ad71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.is_component</definition>
        <argsstring></argsstring>
        <name>is_component</name>
        <briefdescription>
<para>Check if this lexical entry is a component. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>&apos;True&apos; if it is a component, &apos;False&apos; otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="1121" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="1121" bodyend="1130"/>
      </memberdef>
      <memberdef kind="function" id="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1ac741ce07b961fb9d6d0a1033cf1f1790" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.core.lexical_entry.LexicalEntry.get_speaker</definition>
        <argsstring></argsstring>
        <name>get_speaker</name>
        <briefdescription>
<para>Get speaker. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry" kindref="compound">LexicalEntry</ref> private attribute &apos;__speaker&apos;. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="1131" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="1131" bodyend="1136"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>&quot;Lexical Entry is a class representing a lexeme in a given language and is a container for managing the Form and Sense classes. A Lexical Entry instance can contain one to many different forms and can have from zero to many different senses.&quot; (LMF) </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" line="15" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/core/lexical_entry.py" bodystart="15" bodyend="1136"/>
    <listofallmembers>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a7aef35b0a044411935c2fe5d6877699f" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>__del__</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a99f46e253fd0abb1999d14f4eac102d5" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>__init__</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a93548bb677c73c375d32da1a809c03bd" prot="private" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>__speaker</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1acfdd422522c23eb7073da59ce09c764d" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>add_example</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a9078d381fea92a4d1d3f57b391a2b5b7" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>add_related_form</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a4aef3989f5793f9ef330cbca51b77520" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>add_sense</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a6d961cc5d3d155c2c93d4e991b766f04" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>add_word_form</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a27dfa720ca4c7839a105bd7b671762ee" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>bibliography</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a3aceadc1a05034590a950e86c2720f54" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>create_and_add_component</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1ab8281dae44c97d12be3a9fe3a865d40b" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>create_and_add_example</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a46576799af0465084051e3c2957afa3c" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>create_and_add_related_form</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a6a3c981f673e000f25b0be3df42b53f2" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>create_and_add_sense</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a8de47b684e09a774bd97be2cd98a2b68" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>create_example</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1ac3b6d197ee90f1aec5b61e24613c091f" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>create_related_form</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a4ac0758b963893625a283a289b4c1549" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>create_sense</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1afa9239b3df5d96fa1648e634e8ff471c" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>create_word_form</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1ac6d96435547dea66e1433966098249b8" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>date</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1afd1942b2ace38b2e6522c9b1c55a17f3" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>find_notes</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a4d29b1f69f6591832869bdfdbed1dc90" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>find_paradigms</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1ac89bb82f0afe4e1566f34379f3a188da" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>find_related_forms</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1af6682cbe4dee446ab8d4488fa36ae832" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>get_bibliography</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a0cc51d09a44392de1065c5a94e1da39d" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>get_borrowed_word</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a14304ddd9123093352bce750b8dce7c8" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>get_citation_forms</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a5ac31dac631e9825425bdfa550311555" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>get_components</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1aa2a404954cb0bd85ddfeec53db637dd3" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>get_contextual_variations</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1ae8d874e16530609d02844a04c1cf1ec5" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>get_date</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1ab2168094e851c2dccb798fc2a0e45ec2" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>get_etymology</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a667de841ccf2e947f15ed1b3fbd3fe77" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>get_etymology_comment</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a1756da5cb9ce0bab99cc900d3204be27" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>get_etymology_gloss</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a94b171c5e86e2fdeabb7bff1bc32de10" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>get_etymology_source</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a62717ccb205bcbea9a421cbc562068ce" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>get_form_representations</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a526cd4c368d55317f6cda8d507865fd6" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>get_homonymNumber</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a337ed7fdab2cabc9dce913920424dd95" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>get_id</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1aa30f1aec6f435fea3185aa555c44d8b7" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>get_independentWord</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a50334b78f54e0ad7a2bedbc7d5bf821f" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>get_last_sense</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a351a470c736be8b896354d27f56e1833" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>get_lexeme</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1ae446eab7bcbbc3d8cb251848121f2cc0" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>get_main_entry</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a18ba5dfe76ff71f23635aff3b2d5560f" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>get_morphologies</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1ae87d1a773737190fba2a22330b886472" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>get_paradigms</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a198ccaea559997368ea7b0f9a198707f" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>get_partOfSpeech</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1ad341d1cfa5e60593a7bce27a5eec8b98" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>get_phonetic_forms</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1aee5b118b1015a35a5e8426235d325291" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>get_related_forms</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a94c696b57970f35eabe92f2e454aafb5" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>get_scientific_name</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1afd064ec67db5c093665165b59162f94f" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>get_semantic_domains</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a00e6fd296669f34f047b3502bebd6a90" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>get_senses</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1ac741ce07b961fb9d6d0a1033cf1f1790" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>get_speaker</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a72701906e798fbc34c6ef6ea177901e8" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>get_spelling_variants</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a616dd1fa3fbfc0db546832fd9ba5b3e2" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>get_status</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a1f50b9666f7738439e1c33b701de758d" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>get_subentries</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a5588b93f3b5fc77c3ea74fd7fef1cca1" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>get_term_source_language</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a5527aa1541a398941192ef5a5d400e8e" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>get_tones</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a24bb03c658cff21a7b34d30e720f1da5" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>get_transliterations</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a32a47f7dd435da7c5e06799fdee7d094" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>get_variant_forms</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a78f21adcc19aca799e18e7ae89588e83" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>get_word_forms</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a68a87b24b174bccf92e6a400b6208de4" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>get_written_form</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1adea1f58c4350fac27bdcd829c3e6cd54" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>has_subentries</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a402073c8f71f2f779725c6aeefa5df49" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>homonymNumber</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a28fe2bf7e53e223a6919bb38b6d55256" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>id</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a6e84227c5c4a0d4d6574f3daa19ebac4" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>independentWord</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a8c0e7904dbb8c7b25560db7601b3ad71" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>is_component</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1ac7d5e6cc18edad83387ae547e408035e" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>is_subentry</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a25e285f1f40cf8c4a17d021c2d2b878f" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>lemma</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a852239d30b350d7ec590c7a6a01b76b8" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>list_of_components</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1ad59e408fda5122725f6f361e08739916" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>partOfSpeech</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a860127ced1990bb4f1639f23d989da27" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>related_form</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a92b1d39e09a8af1a90e780ef5780cc92" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>sense</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1ab876a6ced2f3919efb81d72286419c01" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>set_audio</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1ab918c4abc48ca39893be6d25f564b84a" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>set_bibliography</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a1530ee0141c9459719b0e07b65ccff82" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>set_borrowed_word</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a13f7f29967c9ac00d8453578904cc394" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>set_citation_form</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a2e094703f5eb2e25c5d9c4aabf67ae72" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>set_contextual_variation</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a37728197c726801ebfed551feb0d9fa7" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>set_date</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1aaf135ff72cc9f20358208e733c3a0ffb" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>set_definition</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1aef2e9bae6caaa9cebcb1960869752037" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>set_dialect</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1af08e4e9e77021330f1a093e7e0fe7a36" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>set_encyclopedic_information</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a90650c9ec70a484186405f9b40efa618" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>set_etymology</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1ac585a9ac515b028d919fd4902bcf5c1b" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>set_etymology_comment</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a9e37ea6e11cfdd10b7fe48f332d5dbe9" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>set_etymology_gloss</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a82d85b914a1dd8f6ad6738b25c5ea172" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>set_etymology_source</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a492011efb0c5c4dbe7312d3f4d7f8b5e" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>set_example_comment</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a931ea014bba9cddfd2e1e9d4cdb1f40a" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>set_geographical_variant</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1ab83d1cb6142baa7a1914db467f63121f" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>set_gloss</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a7f1def059e7cb83693727e36df501e62" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>set_homonymNumber</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1aef758dd6e01b35dc780e0c8b9f7124d2" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>set_independentWord</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a0720cfa82decbc27a30d4830c1e8cbf2" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>set_lexeme</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1ac4b0c5f22daeba6c9cb445e80c8245e4" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>set_morphology</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a5efc30f6a6e8bb9b761ece95523719df" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>set_note</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a5183e8be3b27dd7ff7f8ad2bc100c289" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>set_paradigm</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1ad991d3a24dea50c4d793b3c947fa9037" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>set_paradigm_form</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1af2b23a5d39e9bddddf4da1a971d6928c" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>set_paradigm_label</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1ad9aec09ea7a1664650e8667b5d161c84" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>set_partOfSpeech</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a475be85222f2a0b4fc6f9e218675fc47" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>set_phonetic_form</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a39a8812156d3d5710691ca427cd7fd6f" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>set_restriction</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a819e2e7556f604962d5e299b747e55bb" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>set_scientific_name</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a254dd885319a2be995b81f659cacce88" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>set_script_name</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a215b437f217ce3e652380f74059403e1" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>set_semantic_domain</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a091b34e06640680cc167472c519b5c3a" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>set_spelling_variant</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1ab991806fefc45e2cc5f3bf88ee3d6604" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>set_status</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1ad816834c160783393a4a60a71431886b" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>set_tone</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a8b90d3fd26d1c8f54f36810ca63e156a" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>set_translation</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a7aab11889a7b3ec80087cce8e4ed28e0" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>set_transliteration</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1aaf37b80eaa95fb2fc6e8a20e5cf3e023" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>set_usage_note</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a150a57b434161d86b8962b3ef7f0ff51" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>set_variant_comment</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1ab5ec3863b9c8623df7f41ad07332b2ec" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>set_variant_form</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a14705c1acad6100ea1adbbe6b89e0f22" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>set_written_form</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1aaec5fa141d51ae38a0346b0f863f4522" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>status</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a381ed307ce61e5ae137abc94e45be36a" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>stem</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1aaf11d999bc91a5cf161fd4ce0ca3319b" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>targets</name></member>
      <member refid="classlmf_1_1src_1_1core_1_1lexical__entry_1_1_lexical_entry_1a6418f42441f0d6d25449270298010d03" prot="public" virt="non-virtual"><scope>lmf::src::core::lexical_entry::LexicalEntry</scope><name>word_form</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
