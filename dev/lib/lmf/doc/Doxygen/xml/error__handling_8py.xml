<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="error__handling_8py" kind="file">
    <compoundname>error_handling.py</compoundname>
    <innerclass refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_error" prot="public">lmf::src::utils::error_handling::Error</innerclass>
    <innerclass refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_input_error" prot="public">lmf::src::utils::error_handling::InputError</innerclass>
    <innerclass refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_output_error" prot="public">lmf::src::utils::error_handling::OutputError</innerclass>
    <innerclass refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_warning" prot="public">lmf::src::utils::error_handling::Warning</innerclass>
    <innernamespace refid="namespacelmf_1_1src_1_1utils_1_1error__handling">lmf::src::utils::error_handling</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacelmf_1_1src_1_1utils_1_1error__handling" refkind="compound"><highlight class="comment">#!<sp/>/usr/bin/env<sp/>python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3" refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_error" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_error" kindref="compound">Error</ref>(Exception):</highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>Base<sp/>class<sp/>for<sp/>exceptions<sp/>in<sp/>this<sp/>library.</highlight></codeline>
<codeline lineno="5"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_error_1a7ef901bcd33f6064d695302b1167d811" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_error_1a7ef901bcd33f6064d695302b1167d811" kindref="member">__init__</ref>(self,<sp/>msg,<sp/>excp=None):</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>@brief<sp/>Constructor.</highlight></codeline>
<codeline lineno="8"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@param<sp/>msg<sp/>String<sp/>to<sp/>be<sp/>reported<sp/>to<sp/>user.</highlight></codeline>
<codeline lineno="9"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@param<sp/>excp<sp/>Raised<sp/>system<sp/>exception<sp/>if<sp/>any:<sp/>IOError,<sp/>KeyboardInterrupt,<sp/>SystemExit,<sp/>IndexError,<sp/>KeyError,<sp/>AttributeError,<sp/>TypeError,<sp/>NameError,<sp/>UnboundLocalError,<sp/>ValueError.</highlight></codeline>
<codeline lineno="10"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@return<sp/>An<sp/>Error<sp/>instance.</highlight></codeline>
<codeline lineno="11"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_error_1ad949ea867656445f2db40f53c3369209" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_error_1ad949ea867656445f2db40f53c3369209" kindref="member">msg</ref><sp/>=<sp/>msg</highlight></codeline>
<codeline lineno="13" refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_error_1ab3bb063176871fe118580d16667ee5b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_error_1ab3bb063176871fe118580d16667ee5b2" kindref="member">excp</ref><sp/>=<sp/>excp</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Retrieve<sp/>caller<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>inspect</highlight></codeline>
<codeline lineno="16" refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_error_1a6a83c5628792d5ae735d52a9af4709d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_error_1a6a83c5628792d5ae735d52a9af4709d4" kindref="member">frame_info</ref><sp/>=<sp/>inspect.getframeinfo(inspect.currentframe().f_back)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_error_1a1904e4b7091d08a68e43a0e13b5d10e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_error_1a1904e4b7091d08a68e43a0e13b5d10e6" kindref="member">__str__</ref>(self):</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>@brief<sp/>Build<sp/>the<sp/>string<sp/>to<sp/>be<sp/>displayed.</highlight></codeline>
<codeline lineno="20"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@return<sp/>A<sp/>Python<sp/>string.</highlight></codeline>
<codeline lineno="21"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>utils.io<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>EOL</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Follow<sp/>Python<sp/>display<sp/>error<sp/>style:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>File<sp/>&quot;user/scenario.py&quot;,<sp/>line<sp/>5,<sp/>in<sp/>&lt;module&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>from<sp/>startup<sp/>import<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>File<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>+<sp/>self.frame_info.filename<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\&quot;,<sp/>line<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(self.frame_info.lineno)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>in<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(self.frame_info.function)<sp/>+<sp/>EOL</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>Error:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>self.<ref refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_error_1ad949ea867656445f2db40f53c3369209" kindref="member">msg</ref></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_error_1af74fa5546dd2777e4d4b23b84b98cf9d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_error_1af74fa5546dd2777e4d4b23b84b98cf9d" kindref="member">handle</ref>(self):</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>@brief<sp/>Define<sp/>behavior<sp/>to<sp/>follow<sp/>in<sp/>case<sp/>this<sp/>error<sp/>is<sp/>caught:<sp/>diplay<sp/>error<sp/>and<sp/>exit<sp/>program.</highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>self</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>a<sp/>system<sp/>error<sp/>occured,<sp/>report<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_error_1ab3bb063176871fe118580d16667ee5b2" kindref="member">excp</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>self.<ref refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_error_1ab3bb063176871fe118580d16667ee5b2" kindref="member">excp</ref></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>We<sp/>consider<sp/>that<sp/>the<sp/>error<sp/>is<sp/>not<sp/>recoverable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sys.exit(-1)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_input_error" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_input_error" kindref="compound">InputError</ref>(<ref refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_error" kindref="compound">Error</ref>):</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>Exception<sp/>raised<sp/>for<sp/>errors<sp/>in<sp/>the<sp/>input.</highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_input_error_1ac78b36781ea6b31a7c9c7e576c701a5f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_input_error_1ac78b36781ea6b31a7c9c7e576c701a5f" kindref="member">__init__</ref>(self,<sp/>msg,<sp/>expr=None):</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>@brief<sp/>Constructor.</highlight></codeline>
<codeline lineno="46"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@param<sp/>msg<sp/>Explanation<sp/>of<sp/>the<sp/>error.</highlight></codeline>
<codeline lineno="47"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@param<sp/>expr<sp/>Input<sp/>expression<sp/>in<sp/>which<sp/>the<sp/>error<sp/>occurred.</highlight></codeline>
<codeline lineno="48"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@return<sp/>An<sp/>InputError<sp/>instance.</highlight></codeline>
<codeline lineno="49"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_input_error_1a13dc7af38c991d10bbf04900ecc4a44b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_error_1ad949ea867656445f2db40f53c3369209" kindref="member">msg</ref><sp/>=<sp/>msg</highlight></codeline>
<codeline lineno="51" refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_input_error_1a315f51b60727d5ff945e0017a9838e43" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_input_error_1a315f51b60727d5ff945e0017a9838e43" kindref="member">expr</ref><sp/>=<sp/>expr</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Retrieve<sp/>caller<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>inspect</highlight></codeline>
<codeline lineno="54" refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_input_error_1a41ac62579b8419be8fee90ac0b907817" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_error_1a6a83c5628792d5ae735d52a9af4709d4" kindref="member">frame_info</ref><sp/>=<sp/>inspect.getframeinfo(inspect.currentframe().f_back)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_input_error_1aacc052f82e4982bfe41d6589a7a249d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_input_error_1aacc052f82e4982bfe41d6589a7a249d9" kindref="member">handle</ref>(self):</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>@brief<sp/>Define<sp/>behavior<sp/>to<sp/>follow<sp/>in<sp/>case<sp/>this<sp/>error<sp/>is<sp/>caught:<sp/>display<sp/>error<sp/>and<sp/>exit<sp/>program.</highlight></codeline>
<codeline lineno="58"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>self</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>there<sp/>is<sp/>input<sp/>expression,<sp/>report<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_input_error_1a315f51b60727d5ff945e0017a9838e43" kindref="member">expr</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>Input:&quot;</highlight><highlight class="normal">,<sp/>self.<ref refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_input_error_1a315f51b60727d5ff945e0017a9838e43" kindref="member">expr</ref></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>Input:&quot;</highlight><highlight class="normal">,<sp/>self.frame_info.code_context[self.frame_info.index]</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>We<sp/>consider<sp/>that<sp/>the<sp/>error<sp/>is<sp/>not<sp/>recoverable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sys.exit(-1)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_output_error" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_output_error" kindref="compound">OutputError</ref>(<ref refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_error" kindref="compound">Error</ref>):</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>Exception<sp/>raised<sp/>for<sp/>errors<sp/>in<sp/>the<sp/>output.</highlight></codeline>
<codeline lineno="71"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_output_error_1ae8b17e571a6cda3419da8e5d157817ac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_output_error_1ae8b17e571a6cda3419da8e5d157817ac" kindref="member">__init__</ref>(self,<sp/>msg,<sp/>expr=None):</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>@brief<sp/>Constructor.</highlight></codeline>
<codeline lineno="74"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@param<sp/>msg<sp/>Explanation<sp/>of<sp/>the<sp/>error.</highlight></codeline>
<codeline lineno="75"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@param<sp/>expr<sp/>Output<sp/>expression<sp/>in<sp/>which<sp/>the<sp/>error<sp/>occurred.</highlight></codeline>
<codeline lineno="76"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@return<sp/>An<sp/>OutputError<sp/>instance.</highlight></codeline>
<codeline lineno="77"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_output_error_1a4bdad4fe4219a12ae88039ee8633c316" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_error_1ad949ea867656445f2db40f53c3369209" kindref="member">msg</ref><sp/>=<sp/>msg</highlight></codeline>
<codeline lineno="79" refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_output_error_1a0b89f6a37fac3415e278b996f2ba8117" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_output_error_1a0b89f6a37fac3415e278b996f2ba8117" kindref="member">expr</ref><sp/>=<sp/>expr</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Retrieve<sp/>caller<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>inspect</highlight></codeline>
<codeline lineno="82" refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_output_error_1aa9cde9b3f989c8465f12e1b6e3b715bb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_error_1a6a83c5628792d5ae735d52a9af4709d4" kindref="member">frame_info</ref><sp/>=<sp/>inspect.getframeinfo(inspect.currentframe().f_back)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_output_error_1adacfd84a3c64b1606a39f744f031e1a6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_output_error_1adacfd84a3c64b1606a39f744f031e1a6" kindref="member">handle</ref>(self):</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>@brief<sp/>Define<sp/>behavior<sp/>to<sp/>follow<sp/>in<sp/>case<sp/>this<sp/>error<sp/>is<sp/>caught:<sp/>display<sp/>error<sp/>and<sp/>exit<sp/>program.</highlight></codeline>
<codeline lineno="86"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>self</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>there<sp/>is<sp/>output<sp/>expression,<sp/>report<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_output_error_1a0b89f6a37fac3415e278b996f2ba8117" kindref="member">expr</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>Output:&quot;</highlight><highlight class="normal">,<sp/>self.<ref refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_output_error_1a0b89f6a37fac3415e278b996f2ba8117" kindref="member">expr</ref></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>Output:&quot;</highlight><highlight class="normal">,<sp/>self.frame_info.code_context[self.frame_info.index]</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>We<sp/>consider<sp/>that<sp/>the<sp/>error<sp/>is<sp/>not<sp/>recoverable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sys.exit(-1)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_warning" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_warning" kindref="compound">Warning</ref>(UserWarning):</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>Base<sp/>class<sp/>for<sp/>warnings<sp/>in<sp/>this<sp/>library.</highlight></codeline>
<codeline lineno="99"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_warning_1a1ca035181464bbf15ed05f00ed430384" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_warning_1a1ca035181464bbf15ed05f00ed430384" kindref="member">__init__</ref>(self,<sp/>msg):</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>@brief<sp/>Constructor.</highlight></codeline>
<codeline lineno="102"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@param<sp/>msg<sp/>String<sp/>to<sp/>be<sp/>reported<sp/>to<sp/>user.</highlight></codeline>
<codeline lineno="103"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@return<sp/>A<sp/>Warning<sp/>instance.</highlight></codeline>
<codeline lineno="104"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_warning_1a0933de123c20a65d4226d8294d1e3506" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_warning_1a0933de123c20a65d4226d8294d1e3506" kindref="member">msg</ref><sp/>=<sp/>msg</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Retrieve<sp/>caller<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>inspect</highlight></codeline>
<codeline lineno="108" refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_warning_1abfcf05ce22e0fb5e6b81f167729c09c7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_warning_1abfcf05ce22e0fb5e6b81f167729c09c7" kindref="member">frame_info</ref><sp/>=<sp/>inspect.getframeinfo(inspect.currentframe().f_back)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_warning_1a3dd52e27b533f30681c500081cac6982" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_warning_1a3dd52e27b533f30681c500081cac6982" kindref="member">__str__</ref>(self):</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>@brief<sp/>Build<sp/>the<sp/>string<sp/>to<sp/>be<sp/>displayed.</highlight></codeline>
<codeline lineno="112"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@return<sp/>A<sp/>Python<sp/>string.</highlight></codeline>
<codeline lineno="113"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>utils.io<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>EOL</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Follow<sp/>Python<sp/>display<sp/>error<sp/>style</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>File<sp/>&quot;user/scenario.py&quot;,<sp/>line<sp/>5,<sp/>in<sp/>&lt;module&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>from<sp/>startup<sp/>import<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>File<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>+<sp/>self.frame_info.filename<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\&quot;,<sp/>line<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(self.frame_info.lineno)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>in<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(self.frame_info.function)<sp/>+<sp/>EOL</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>Warning:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>self.<ref refid="classlmf_1_1src_1_1utils_1_1error__handling_1_1_warning_1a0933de123c20a65d4226d8294d1e3506" kindref="member">msg</ref></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result</highlight></codeline>
    </programlisting>
    <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/utils/error_handling.py"/>
  </compounddef>
</doxygen>
