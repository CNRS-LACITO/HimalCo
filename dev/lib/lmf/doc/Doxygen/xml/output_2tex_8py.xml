<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="output_2tex_8py" kind="file">
    <compoundname>tex.py</compoundname>
    <innernamespace refid="namespacelmf_1_1src_1_1output_1_1tex">lmf::src::output::tex</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacelmf_1_1src_1_1output_1_1tex" refkind="compound"><highlight class="comment">#!<sp/>/usr/bin/env<sp/>python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>config.tex<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>lmf_tex,<sp/>tex_order</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>utils.io<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>open_read,<sp/>open_write,<sp/>EOL</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>utils.error_handling<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>OutputError</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="namespacelmf_1_1src_1_1output_1_1tex_1ac02be073e031d36d66f61dc7d6fb94df" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1output_1_1tex_1ac02be073e031d36d66f61dc7d6fb94df" kindref="member">compute_header</ref>(preamble):</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>@brief<sp/>Create<sp/>LaTeX<sp/>header.</highlight></codeline>
<codeline lineno="9"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>preamble<sp/>The<sp/>name<sp/>of<sp/>the<sp/>LaTeX<sp/>file<sp/>with<sp/>full<sp/>path<sp/>containing<sp/>the<sp/>LaTeX<sp/>header<sp/>of<sp/>the<sp/>document,<sp/>for<sp/>instance<sp/>&apos;user/config/japhug.tex&apos;.</highlight></codeline>
<codeline lineno="10"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@return<sp/>A<sp/>Python<sp/>string<sp/>containing<sp/>read<sp/>information.</highlight></codeline>
<codeline lineno="11"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>header<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>preamble<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hdr<sp/>=<sp/><ref refid="namespacelmf_1_1src_1_1utils_1_1io_1a2659ffc6cd260a7a4e43f0546d518dff" kindref="member">open_read</ref>(preamble)</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header<sp/>=<sp/>hdr.read()</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hdr.close()</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>header</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="namespacelmf_1_1src_1_1output_1_1tex_1a2f69a7ff35d3a419eaa9f4bb40aefa06" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1output_1_1tex_1a2f69a7ff35d3a419eaa9f4bb40aefa06" kindref="member">tex_write</ref>(object,<sp/>filename,<sp/>preamble=None,<sp/>lmf2tex=lmf_tex,<sp/>order=tex_order):</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>@brief<sp/>Write<sp/>a<sp/>LaTeX<sp/>file.</highlight></codeline>
<codeline lineno="21"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>object<sp/>The<sp/>LMF<sp/>instance<sp/>to<sp/>convert<sp/>into<sp/>LaTeX<sp/>output<sp/>format.</highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>filename<sp/>The<sp/>name<sp/>of<sp/>the<sp/>LaTeX<sp/>file<sp/>to<sp/>write<sp/>with<sp/>full<sp/>path,<sp/>for<sp/>instance<sp/>&apos;user/output.tex&apos;.</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>preamble<sp/>The<sp/>name<sp/>of<sp/>the<sp/>LaTeX<sp/>file<sp/>with<sp/>full<sp/>path<sp/>containing<sp/>the<sp/>LaTeX<sp/>header<sp/>of<sp/>the<sp/>document,<sp/>for<sp/>instance<sp/>&apos;user/config/japhug.tex&apos;.<sp/>Deafult<sp/>value<sp/>is<sp/>None.</highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>lmf2tex<sp/>A<sp/>Python<sp/>dictionary<sp/>describing<sp/>the<sp/>mapping<sp/>between<sp/>LMF<sp/>representation<sp/>and<sp/>LaTeX<sp/>commands.<sp/>Default<sp/>value<sp/>is<sp/>&apos;lmf_tex&apos;<sp/>dictionary<sp/>defined<sp/>in<sp/>&apos;src/config/tex.py&apos;.<sp/>Please<sp/>refer<sp/>to<sp/>it<sp/>as<sp/>an<sp/>example.</highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>order<sp/>A<sp/>Python<sp/>list<sp/>defining<sp/>the<sp/>order<sp/>in<sp/>which<sp/>LMF<sp/>information<sp/>must<sp/>be<sp/>written,<sp/>for<sp/>instance<sp/><sp/>[&quot;Lemma.lexeme&quot;,<sp/>&quot;LexicalEntry.partOfSpeech&quot;].<sp/>Default<sp/>value<sp/>is<sp/>&apos;tex_order&apos;<sp/>list<sp/>defined<sp/>in<sp/>&apos;src/config/tex.py&apos;.</highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>tex_file<sp/>=<sp/><ref refid="namespacelmf_1_1src_1_1utils_1_1io_1a943b893b8992a6e46d91400538709b80" kindref="member">open_write</ref>(filename)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Add<sp/>file<sp/>header<sp/>if<sp/>any</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>tex_file.write(<ref refid="namespacelmf_1_1src_1_1output_1_1tex_1ac02be073e031d36d66f61dc7d6fb94df" kindref="member">compute_header</ref>(preamble))</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Insert<sp/>LaTeX<sp/>commands<sp/>to<sp/>create<sp/>a<sp/>document</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>tex_file.write(EOL<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\\begin{document}&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>tex_file.write(</highlight><highlight class="stringliteral">&quot;\\maketitle&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>tex_file.write(</highlight><highlight class="stringliteral">&quot;\\newpage&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>tex_file.write(</highlight><highlight class="stringliteral">&quot;\\begin{multicols}{2}&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>For<sp/>each<sp/>element<sp/>to<sp/>write,<sp/>get<sp/>the<sp/>corresponding<sp/>LMF<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>object.__class__.__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Lexicon&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>lexical_entry<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>object.get_lexical_entries():</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>attribute<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>order:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex_file.write(lmf2tex[attribute](lexical_entry))</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Separate<sp/>lexical<sp/>entries<sp/>from<sp/>each<sp/>others<sp/>with<sp/>a<sp/>blank<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex_file.write(EOL)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>OutputError(object,<sp/></highlight><highlight class="stringliteral">&quot;Object<sp/>to<sp/>write<sp/>must<sp/>be<sp/>a<sp/>Lexicon.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Insert<sp/>LaTeX<sp/>commands<sp/>to<sp/>finish<sp/>the<sp/>document<sp/>properly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>tex_file.write(</highlight><highlight class="stringliteral">&quot;\end{multicols}&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>tex_file.write(</highlight><highlight class="stringliteral">&quot;\end{document}&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>tex_file.close()</highlight></codeline>
    </programlisting>
    <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/output/tex.py"/>
  </compounddef>
</doxygen>
