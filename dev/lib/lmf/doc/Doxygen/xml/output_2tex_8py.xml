<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="output_2tex_8py" kind="file">
    <compoundname>tex.py</compoundname>
    <innernamespace refid="namespacelmf_1_1src_1_1output_1_1tex">lmf::src::output::tex</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacelmf_1_1src_1_1output_1_1tex" refkind="compound"><highlight class="comment">#!<sp/>/usr/bin/env<sp/>python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>-*-<sp/>coding:<sp/>utf-8<sp/>-*-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>config.tex<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>lmf_to_tex,<sp/>partOfSpeech_tex</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>config.mdf<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>mdf_semanticRelation,<sp/>pd_grammaticalNumber,<sp/>pd_person,<sp/>pd_anymacy,<sp/>pd_clusivity</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>utils.io<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>open_read,<sp/>open_write,<sp/>EOL,<sp/>ENCODING</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>utils.error_handling<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>OutputError,<sp/>Warning</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>common.defs<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>VERNACULAR,<sp/>ENGLISH,<sp/>NATIONAL,<sp/>REGIONAL</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/>To<sp/>define<sp/>languages<sp/>and<sp/>fonts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>config</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="namespacelmf_1_1src_1_1output_1_1tex_1add0a1198eaf15d3c6303038718684dec" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1output_1_1tex_1add0a1198eaf15d3c6303038718684dec" kindref="member">file_read</ref>(filename):</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>@brief<sp/>Read<sp/>file<sp/>contents.</highlight></codeline>
<codeline lineno="15"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>filename<sp/>The<sp/>name<sp/>of<sp/>the<sp/>file<sp/>with<sp/>full<sp/>path<sp/>containing<sp/>information<sp/>to<sp/>read,<sp/>for<sp/>instance<sp/>the<sp/>LaTeX<sp/>header<sp/>of<sp/>the<sp/>document:<sp/>&apos;user/config/japhug.tex&apos;.</highlight></codeline>
<codeline lineno="16"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@return<sp/>A<sp/>Python<sp/>string<sp/>containing<sp/>read<sp/>information.</highlight></codeline>
<codeline lineno="17"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>contents<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>filename<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file<sp/>=<sp/><ref refid="namespacelmf_1_1src_1_1utils_1_1io_1a2659ffc6cd260a7a4e43f0546d518dff" kindref="member">open_read</ref>(filename)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contents<sp/>=<sp/>file.read()</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file.close()</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>contents</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="namespacelmf_1_1src_1_1output_1_1tex_1ab81efa044d47f387368ae4f11af1bde3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1output_1_1tex_1ab81efa044d47f387368ae4f11af1bde3" kindref="member">insert_references</ref>(lexical_entry):</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>@brief<sp/>Insert<sp/>references<sp/>to<sp/>paradigms.</highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>lexical_entry<sp/>The<sp/>targeted<sp/>Lexical<sp/>Entry<sp/>LMF<sp/>instance.</highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@return<sp/>A<sp/>string<sp/>representing<sp/>the<sp/>references<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="29"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>part_of_speech<sp/>=<sp/>lexical_entry.get_partOfSpeech()</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>spelling_variant<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(lexical_entry.get_spelling_variants())<sp/>!=<sp/>0:</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spelling_variant<sp/>=<sp/>lexical_entry.get_spelling_variants()[0]</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>spelling_variant<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>current<sp/>entry<sp/>is<sp/>a<sp/>subentry,<sp/>then<sp/>take<sp/>the<sp/>spelling<sp/>variant<sp/>of<sp/>the<sp/>main<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>main_entry<sp/>=<sp/>lexical_entry.get_main_entry()</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>main_entry<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(main_entry.get_spelling_variants())<sp/>!=<sp/>0:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spelling_variant<sp/>=<sp/>main_entry.get_spelling_variants()[0]</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>spelling_variant<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>part_of_speech<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;transitive<sp/>verb&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\hfill\\break<sp/>See:<sp/>\\ref{&quot;</highlight><highlight class="normal"><sp/>+<sp/>spelling_variant<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.vt}&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\ref{&quot;</highlight><highlight class="normal"><sp/>+<sp/>spelling_variant<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.vt.eng}&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>part_of_speech<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;intransitive<sp/>verb&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\hfill\\break<sp/>See:<sp/>\\ref{&quot;</highlight><highlight class="normal"><sp/>+<sp/>spelling_variant<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.vi}&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\ref{&quot;</highlight><highlight class="normal"><sp/>+<sp/>spelling_variant<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.vi.eng}&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>part_of_speech<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;reflexive<sp/>verb&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\hfill\\break<sp/>See:<sp/>\\ref{&quot;</highlight><highlight class="normal"><sp/>+<sp/>spelling_variant<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.vr}&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\ref{&quot;</highlight><highlight class="normal"><sp/>+<sp/>spelling_variant<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.vr.eng}&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>text</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="namespacelmf_1_1src_1_1output_1_1tex_1a2f69a7ff35d3a419eaa9f4bb40aefa06" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1output_1_1tex_1a2f69a7ff35d3a419eaa9f4bb40aefa06" kindref="member">tex_write</ref>(object,<sp/>filename,<sp/>preamble=None,<sp/>introduction=None,<sp/>lmf2tex=lmf_to_tex,<sp/>font=None,<sp/>items=lambda<sp/>lexical_entry:<sp/>lexical_entry.get_lexeme(),<sp/>sort_order=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>paradigms=[],<sp/>tables=[]):</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>@brief<sp/>Write<sp/>a<sp/>LaTeX<sp/>file.</highlight></codeline>
<codeline lineno="55"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Note<sp/>that<sp/>the<sp/>lexicon<sp/>must<sp/>already<sp/>be<sp/>ordered<sp/>at<sp/>this<sp/>point.<sp/>Here,<sp/>parameters<sp/>&apos;items&apos;<sp/>and<sp/>&apos;sort_order&apos;<sp/>are<sp/>only<sp/>used<sp/>to<sp/>define<sp/>chapters.</highlight></codeline>
<codeline lineno="56"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>object<sp/>The<sp/>LMF<sp/>instance<sp/>to<sp/>convert<sp/>into<sp/>LaTeX<sp/>output<sp/>format.</highlight></codeline>
<codeline lineno="57"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>filename<sp/>The<sp/>name<sp/>of<sp/>the<sp/>LaTeX<sp/>file<sp/>to<sp/>write<sp/>with<sp/>full<sp/>path,<sp/>for<sp/>instance<sp/>&apos;user/output.tex&apos;.</highlight></codeline>
<codeline lineno="58"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>preamble<sp/>The<sp/>name<sp/>of<sp/>the<sp/>LaTeX<sp/>file<sp/>with<sp/>full<sp/>path<sp/>containing<sp/>the<sp/>LaTeX<sp/>header<sp/>of<sp/>the<sp/>document,<sp/>for<sp/>instance<sp/>&apos;user/config/japhug.tex&apos;.<sp/>Deafult<sp/>value<sp/>is<sp/>None.</highlight></codeline>
<codeline lineno="59"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>lmf2tex<sp/>A<sp/>function<sp/>giving<sp/>the<sp/>mapping<sp/>from<sp/>LMF<sp/>representation<sp/>information<sp/>that<sp/>must<sp/>be<sp/>written<sp/>to<sp/>LaTeX<sp/>commands,<sp/>in<sp/>a<sp/>defined<sp/>order.<sp/>Default<sp/>value<sp/>is<sp/>&apos;lmf_to_tex&apos;<sp/>function<sp/>defined<sp/>in<sp/>&apos;src/config/tex.py&apos;.<sp/>Please<sp/>refer<sp/>to<sp/>it<sp/>as<sp/>an<sp/>example.</highlight></codeline>
<codeline lineno="60"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>font<sp/>A<sp/>Python<sp/>dictionary<sp/>giving<sp/>the<sp/>vernacular,<sp/>national,<sp/>regional<sp/>fonts<sp/>to<sp/>apply<sp/>to<sp/>a<sp/>text<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="61"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>items<sp/>Lambda<sp/>function<sp/>giving<sp/>the<sp/>item<sp/>to<sp/>sort.<sp/>Default<sp/>value<sp/>is<sp/>&apos;lambda<sp/>lexical_entry:<sp/>lexical_entry.get_lexeme()&apos;,<sp/>which<sp/>means<sp/>that<sp/>the<sp/>items<sp/>to<sp/>sort<sp/>are<sp/>lexemes.</highlight></codeline>
<codeline lineno="62"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>sort_order<sp/>Default<sp/>value<sp/>is<sp/>&apos;None&apos;,<sp/>which<sp/>means<sp/>that<sp/>the<sp/>LaTeX<sp/>output<sp/>is<sp/>alphabetically<sp/>ordered.</highlight></codeline>
<codeline lineno="63"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>paradigms<sp/>A<sp/>Python<sp/>list<sp/>of<sp/>LaTeX<sp/>filenames<sp/>with<sp/>full<sp/>path<sp/>containing<sp/>the<sp/>paradigms<sp/>in<sp/>LaTeX<sp/>format.<sp/>Default<sp/>value<sp/>is<sp/>an<sp/>empty<sp/>list.</highlight></codeline>
<codeline lineno="64"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>string,<sp/>os</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Define<sp/>font</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>font<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>font<sp/>=<sp/>config.xml.font</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>tex_file<sp/>=<sp/><ref refid="namespacelmf_1_1src_1_1utils_1_1io_1a943b893b8992a6e46d91400538709b80" kindref="member">open_write</ref>(filename)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Add<sp/>file<sp/>header<sp/>if<sp/>any</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>tex_file.write(<ref refid="namespacelmf_1_1src_1_1output_1_1tex_1add0a1198eaf15d3c6303038718684dec" kindref="member">file_read</ref>(preamble))</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Insert<sp/>LaTeX<sp/>commands<sp/>to<sp/>create<sp/>a<sp/>document</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>tex_file.write(EOL<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\\begin{document}&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>tex_file.write(</highlight><highlight class="stringliteral">&quot;\\maketitle&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>tex_file.write(</highlight><highlight class="stringliteral">&quot;\\newpage&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Add<sp/>introduction<sp/>if<sp/>any</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>introduction<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex_file.write(</highlight><highlight class="stringliteral">&quot;\\markboth{INTRODUCTION}{}&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL<sp/>*<sp/>2)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>tex_file.write(<ref refid="namespacelmf_1_1src_1_1output_1_1tex_1add0a1198eaf15d3c6303038718684dec" kindref="member">file_read</ref>(introduction))</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Add<sp/>command<sp/>for<sp/>small<sp/>caps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>tex_file.write(EOL<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\\def\\mytextsc{\\bgroup\\obeyspaces\\mytextscaux}&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>tex_file.write(</highlight><highlight class="stringliteral">&quot;\\def\\mytextscaux#1{\\mytextscauxii<sp/>#1\\relax\\relax\\egroup}&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>tex_file.write(</highlight><highlight class="stringliteral">&quot;\\def\\mytextscauxii#1{%&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>tex_file.write(</highlight><highlight class="stringliteral">&quot;\\ifx\\relax#1\\else<sp/>\\ifcat#1\\@sptoken{}<sp/>\\expandafter\\expandafter\\expandafter\\mytextscauxii\\else&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>tex_file.write(</highlight><highlight class="stringliteral">&quot;\\ifnum`#1=\\uccode`#1<sp/>{\\normalsize<sp/>#1}\\else<sp/>{\\footnotesize<sp/>\\uppercase{#1}}\\fi<sp/>\\expandafter\\expandafter\\expandafter\\mytextscauxii\\expandafter\\fi\\fi}&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL<sp/>*<sp/>2)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Configure<sp/>space<sp/>indent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>tex_file.write(</highlight><highlight class="stringliteral">&quot;\\setlength\\parindent{0cm}&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Insert<sp/>data<sp/>path<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Unix-style<sp/>paths</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>audio_path<sp/>=<sp/>config.xml.audio_path</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>graphic_path<sp/>=<sp/>os.path.abspath(</highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>os.name<sp/>!=<sp/></highlight><highlight class="stringliteral">&apos;posix&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Windows-style<sp/>paths</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>audio_path<sp/>=<sp/>audio_path.replace(</highlight><highlight class="stringliteral">&quot;\\&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graphic_path<sp/>=<sp/>graphic_path.replace(</highlight><highlight class="stringliteral">&quot;\\&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>tex_file.write(EOL<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\\addmediapath{&quot;</highlight><highlight class="normal"><sp/>+<sp/>audio_path.rstrip(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>tex_file.write(</highlight><highlight class="stringliteral">&quot;\\addmediapath{&quot;</highlight><highlight class="normal"><sp/>+<sp/>audio_path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;mp3}&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>tex_file.write(</highlight><highlight class="stringliteral">&quot;\\addmediapath{&quot;</highlight><highlight class="normal"><sp/>+<sp/>audio_path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;wav}&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>tex_file.write(</highlight><highlight class="stringliteral">&quot;\\graphicspath{{&quot;</highlight><highlight class="normal"><sp/>+<sp/>graphic_path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/src/output/img/}}&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL<sp/>*<sp/>2)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Configure<sp/>2<sp/>columns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>tex_file.write(</highlight><highlight class="stringliteral">&quot;\\newpage&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>tex_file.write(</highlight><highlight class="stringliteral">&quot;\\begin{multicols}{2}&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL<sp/>*<sp/>2)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>sort_order<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Lowercase<sp/>and<sp/>uppercase<sp/>letters<sp/>must<sp/>have<sp/>the<sp/>same<sp/>rank</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sort_order<sp/>=<sp/>dict([(c,<sp/>ord(c))<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>c<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>string.lowercase])</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>up<sp/>=<sp/>dict([(c,<sp/>ord(c)<sp/>+<sp/>32)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>c<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>string.uppercase])</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sort_order.update(up)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sort_order.update({</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">:0,<sp/></highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">:0})</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>For<sp/>each<sp/>element<sp/>to<sp/>write,<sp/>get<sp/>the<sp/>corresponding<sp/>LMF<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>object.__class__.__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;LexicalResource&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>lexicon<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>object.get_lexicons():</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previous_character<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_character<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Lexicon<sp/>is<sp/>already<sp/>ordered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>lexical_entry<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lexicon.get_lexical_entries():</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Consider<sp/>only<sp/>main<sp/>entries<sp/>(subentries<sp/>and<sp/>components<sp/>will<sp/>be<sp/>written<sp/>as<sp/>parts<sp/>of<sp/>the<sp/>main<sp/>entry)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>lexical_entry.find_related_forms(</highlight><highlight class="stringliteral">&quot;main<sp/>entry&quot;</highlight><highlight class="normal">)<sp/>==<sp/>[]<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>lexical_entry.get_independentWord()<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Check<sp/>if<sp/>current<sp/>element<sp/>is<sp/>a<sp/>lexeme<sp/>starting<sp/>with<sp/>a<sp/>different<sp/>character<sp/>than<sp/>previous<sp/>lexeme</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_character<sp/>=<sp/>items(lexical_entry)[0]</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>sort_order[items(lexical_entry)[0:1]]:</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_character<sp/>=<sp/>items(lexical_entry)[0:1]</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>sort_order[items(lexical_entry)[0:2]]:</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_character<sp/>=<sp/>items(lexical_entry)[0:2]</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>IndexError:</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>KeyError:</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>TypeError:</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(type(sort_order)<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>type(dict()))<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>((previous_character<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>(sort_order(current_character)<sp/>!=<sp/>sort_order(previous_character)))<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>(<sp/>(type(sort_order)<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>type(dict()))<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>(int(sort_order[current_character])<sp/>!=<sp/>int(sort_order[previous_character]))<sp/>):</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Do<sp/>not<sp/>consider<sp/>special<sp/>characters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previous_character<sp/>=<sp/>current_character</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex_file.write(</highlight><highlight class="stringliteral">&quot;\\newpage&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>title<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>type(sort_order)<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>type(dict()):</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>title<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>font[NATIONAL](current_character)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>key,value<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sorted(sort_order.items(),<sp/>key=</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>x:<sp/>x[1]):</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>int(value)<sp/>==<sp/>int(sort_order[current_character]):</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>title<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>font[VERNACULAR](key)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex_file.write(</highlight><highlight class="stringliteral">&quot;\\section*{\\centering-&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacelmf_1_1src_1_1output_1_1tex_1a736bc9a68d1249aa48f7f063f6860eb8" kindref="member">handle_reserved</ref>(title)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-}&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#tex_file.write(&quot;\\pdfbookmark[1]{&quot;<sp/>+<sp/>title<sp/>+<sp/>&quot;<sp/>}{&quot;<sp/>+<sp/>title<sp/>+<sp/>&quot;<sp/>}&quot;<sp/>+<sp/>EOL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex_file.write(lmf2tex(lexical_entry,<sp/>font))</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(paradigms)<sp/>!=<sp/>0:</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex_file.write(<ref refid="namespacelmf_1_1src_1_1output_1_1tex_1ab81efa044d47f387368ae4f11af1bde3" kindref="member">insert_references</ref>(lexical_entry))</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex_file.write(</highlight><highlight class="stringliteral">&quot;\\lhead{\\firstmark}&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex_file.write(</highlight><highlight class="stringliteral">&quot;\\rhead{\\botmark}&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Separate<sp/>lexical<sp/>entries<sp/>from<sp/>each<sp/>others<sp/>with<sp/>a<sp/>blank<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex_file.write(EOL)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Handle<sp/>subentries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>related_form<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lexical_entry.get_related_forms(</highlight><highlight class="stringliteral">&quot;subentry&quot;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>related_form.get_lexical_entry()<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex_file.write(lmf2tex(related_form.get_lexical_entry(),<sp/>font))</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(paradigms)<sp/>!=<sp/>0:</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex_file.write(<ref refid="namespacelmf_1_1src_1_1output_1_1tex_1ab81efa044d47f387368ae4f11af1bde3" kindref="member">insert_references</ref>(related_form.get_lexical_entry()))</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Separate<sp/>sub-entries<sp/>from<sp/>each<sp/>others<sp/>with<sp/>a<sp/>blank<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex_file.write(EOL)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>KeyError:</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>Warning(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>sort<sp/>item<sp/>%s&quot;</highlight><highlight class="normal"><sp/>%<sp/>items(lexical_entry).encode(ENCODING))</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>IndexError:</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Item<sp/>is<sp/>an<sp/>empty<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>OutputError(object,<sp/></highlight><highlight class="stringliteral">&quot;Object<sp/>to<sp/>write<sp/>must<sp/>be<sp/>a<sp/>Lexical<sp/>Resource.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Insert<sp/>LaTeX<sp/>commands<sp/>to<sp/>finish<sp/>the<sp/>document<sp/>properly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>tex_file.write(</highlight><highlight class="stringliteral">&quot;\end{multicols}&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Insert<sp/>paradigms<sp/>if<sp/>any</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>filename<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>paradigms:</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex_file.write(EOL)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex_file.write(</highlight><highlight class="stringliteral">&quot;\\newpage&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex_file.write(</highlight><highlight class="stringliteral">&quot;\markboth{paradigms}{}&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex_file.write(<ref refid="namespacelmf_1_1src_1_1output_1_1tex_1add0a1198eaf15d3c6303038718684dec" kindref="member">file_read</ref>(filename))</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex_file.write(EOL)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Insert<sp/>other<sp/>tables<sp/>if<sp/>any</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>filename<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>tables:</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex_file.write(EOL)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex_file.write(</highlight><highlight class="stringliteral">&quot;\\newpage&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex_file.write(<ref refid="namespacelmf_1_1src_1_1output_1_1tex_1add0a1198eaf15d3c6303038718684dec" kindref="member">file_read</ref>(filename))</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex_file.write(EOL)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>tex_file.write(</highlight><highlight class="stringliteral">&quot;\end{document}&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>tex_file.close()</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="comment">##<sp/>Functions<sp/>to<sp/>process<sp/>LaTeX<sp/>layout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="namespacelmf_1_1src_1_1output_1_1tex_1acdd13e0489e158f24036a243e21cb484" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1output_1_1tex_1acdd13e0489e158f24036a243e21cb484" kindref="member">handle_font</ref>(text):</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Replace<sp/>&apos;{xxx}&apos;<sp/>by<sp/>&apos;\ipa{xxx}&apos;<sp/>in<sp/>&apos;un&apos;,<sp/>&apos;xn&apos;,<sp/>&apos;gn&apos;,<sp/>&apos;dn&apos;,<sp/>&apos;en&apos;.</highlight></codeline>
<codeline lineno="190"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>re</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>pattern<sp/>=<sp/></highlight><highlight class="stringliteral">r&quot;([^\\\|]*){([^}]*)}(.*)&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>re.match(pattern,<sp/>text):</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text<sp/>=<sp/>re.sub(pattern,<sp/></highlight><highlight class="stringliteral">r&quot;\1&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">r&quot;\\ipa{&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">r&quot;\2&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">r&quot;\3&quot;</highlight><highlight class="normal">,<sp/>text)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>text</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="namespacelmf_1_1src_1_1output_1_1tex_1a736bc9a68d1249aa48f7f063f6860eb8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1output_1_1tex_1a736bc9a68d1249aa48f7f063f6860eb8" kindref="member">handle_reserved</ref>(text):</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Handle<sp/>reserved<sp/>characters<sp/>$<sp/>&amp;<sp/>%<sp/>#<sp/>_<sp/>^<sp/>except<sp/>\<sp/>{<sp/>}.</highlight></codeline>
<codeline lineno="199"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>text.find(</highlight><highlight class="stringliteral">&quot;$&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>-1:</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text<sp/>=<sp/>text.replace(</highlight><highlight class="stringliteral">&apos;$&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;\$&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>In<sp/>some<sp/>LaTeX<sp/>commands,<sp/>&apos;$&apos;<sp/>must<sp/>not<sp/>be<sp/>replaced<sp/>by<sp/>&apos;\$&apos;<sp/>=&gt;<sp/>marked<sp/>as<sp/>&apos;\\dollar&apos;<sp/>in<sp/>this<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>text.find(</highlight><highlight class="stringliteral">&quot;\\dollar&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>-1:</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text<sp/>=<sp/>text.replace(</highlight><highlight class="stringliteral">&quot;\\dollar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;$&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>text.find(</highlight><highlight class="stringliteral">&quot;&amp;<sp/>&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>-1:</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text<sp/>=<sp/>text.replace(</highlight><highlight class="stringliteral">&apos;&amp;<sp/>&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;\&amp;<sp/>&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>text.find(</highlight><highlight class="stringliteral">&quot;%&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>-1:</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text<sp/>=<sp/>text.replace(</highlight><highlight class="stringliteral">&apos;%&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;\%&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>text.find(</highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>-1:</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text<sp/>=<sp/>text.replace(</highlight><highlight class="stringliteral">&apos;#&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;\#&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>text.find(</highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>-1:</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text<sp/>=<sp/>text.replace(</highlight><highlight class="stringliteral">&apos;_&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;\string_&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>text.find(</highlight><highlight class="stringliteral">&quot;^&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>-1:</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text<sp/>=<sp/>text.replace(</highlight><highlight class="stringliteral">&apos;^&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;U+005E&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>text</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="namespacelmf_1_1src_1_1output_1_1tex_1a981c81cbc251b5e8d97caf9b0e4fb8bd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1output_1_1tex_1a981c81cbc251b5e8d97caf9b0e4fb8bd" kindref="member">handle_fi</ref>(text):</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Replace<sp/>&apos;fi:xxx&apos;<sp/>and<sp/>&apos;|fi{xxx}&apos;<sp/>by<sp/>\\textit{xxx}.</highlight></codeline>
<codeline lineno="219"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>re</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>text.find(</highlight><highlight class="stringliteral">&quot;fi:&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>-1:</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pattern<sp/>=<sp/></highlight><highlight class="stringliteral">r&quot;(\w*)fi:([^\s\.,)]*)(\w*)&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text<sp/>=<sp/>re.sub(pattern,<sp/></highlight><highlight class="stringliteral">r&quot;\1&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">r&quot;\\textit{&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">r&quot;\2&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">r&quot;\3&quot;</highlight><highlight class="normal">,<sp/>text)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>text.find(</highlight><highlight class="stringliteral">&quot;|fi{&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>-1:</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pattern<sp/>=<sp/></highlight><highlight class="stringliteral">r&quot;(\w*)\|fi{([^}]*)}(\w*)&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text<sp/>=<sp/>re.sub(pattern,<sp/></highlight><highlight class="stringliteral">r&quot;\1&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">r&quot;\\textit{&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">r&quot;\2&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">r&quot;\3&quot;</highlight><highlight class="normal">,<sp/>text)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>text</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="namespacelmf_1_1src_1_1output_1_1tex_1ae073d345dc8c6432ee6c2c4f138624f6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1output_1_1tex_1ae073d345dc8c6432ee6c2c4f138624f6" kindref="member">handle_fv</ref>(text,<sp/>font):</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Replace<sp/>&apos;fv:xxx&apos;<sp/>and<sp/>&apos;|fv{xxx}&apos;<sp/>by<sp/>font[VERNACULAR](xxx).</highlight></codeline>
<codeline lineno="231"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>re</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>text.find(</highlight><highlight class="stringliteral">&quot;fv:&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>-1:</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#pattern<sp/>=<sp/>r&quot;(.*[<sp/>}])?fv:([^\s\.,)]*)(.*)&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pattern<sp/>=<sp/></highlight><highlight class="stringliteral">r&quot;(\w*)fv:([^\s\.,)]*)(\w*)&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text<sp/>=<sp/>re.sub(pattern,<sp/></highlight><highlight class="stringliteral">r&quot;\1&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">r&quot;%s&quot;</highlight><highlight class="normal"><sp/>%<sp/>font[VERNACULAR](</highlight><highlight class="stringliteral">r&quot;\2&quot;</highlight><highlight class="normal">).replace(</highlight><highlight class="stringliteral">&apos;\\&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">r&apos;\\&apos;</highlight><highlight class="normal">).replace(</highlight><highlight class="stringliteral">r&apos;\\2&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">r&quot;\2&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">r&quot;\3&quot;</highlight><highlight class="normal">,<sp/>text)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>text.find(</highlight><highlight class="stringliteral">&quot;|fv{&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>-1:</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pattern<sp/>=<sp/></highlight><highlight class="stringliteral">r&quot;(\w*)\|fv{([^}]*)}(\w*)&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text<sp/>=<sp/>re.sub(pattern,<sp/></highlight><highlight class="stringliteral">r&quot;\1&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">r&quot;%s&quot;</highlight><highlight class="normal"><sp/>%<sp/>font[VERNACULAR](</highlight><highlight class="stringliteral">r&quot;\2&quot;</highlight><highlight class="normal">).replace(</highlight><highlight class="stringliteral">&apos;\\&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">r&apos;\\&apos;</highlight><highlight class="normal">).replace(</highlight><highlight class="stringliteral">r&apos;\\2&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">r&quot;\2&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">r&quot;\3&quot;</highlight><highlight class="normal">,<sp/>text)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>text</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="namespacelmf_1_1src_1_1output_1_1tex_1a5aaf8cb83b14ae9eec529d9b5ee79e2a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1output_1_1tex_1a5aaf8cb83b14ae9eec529d9b5ee79e2a" kindref="member">handle_fn</ref>(text,<sp/>font):</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Replace<sp/>&apos;fn:xxx&apos;<sp/>and<sp/>&apos;|fn{xxx}&apos;<sp/>by<sp/>font[NATIONAL](xxx).</highlight></codeline>
<codeline lineno="244"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>re</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>text.find(</highlight><highlight class="stringliteral">&quot;fn:&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>-1:</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pattern<sp/>=<sp/></highlight><highlight class="stringliteral">r&quot;(\w*)fn:([^\s\.,)]*)(\w*)&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text<sp/>=<sp/>re.sub(pattern,<sp/></highlight><highlight class="stringliteral">r&quot;\1&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">r&quot;%s&quot;</highlight><highlight class="normal"><sp/>%<sp/>font[NATIONAL](</highlight><highlight class="stringliteral">r&quot;\2&quot;</highlight><highlight class="normal">).replace(</highlight><highlight class="stringliteral">&apos;\\&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">r&apos;\\&apos;</highlight><highlight class="normal">).replace(</highlight><highlight class="stringliteral">r&apos;\\2&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">r&quot;\2&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">r&quot;\3&quot;</highlight><highlight class="normal">,<sp/>text)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>text.find(</highlight><highlight class="stringliteral">&quot;|fn{&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>-1:</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pattern<sp/>=<sp/></highlight><highlight class="stringliteral">r&quot;(\w*)\|fn{([^}]*)}(\w*)&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text<sp/>=<sp/>re.sub(pattern,<sp/></highlight><highlight class="stringliteral">r&quot;\1&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">r&quot;%s&quot;</highlight><highlight class="normal"><sp/>%<sp/>font[NATIONAL](</highlight><highlight class="stringliteral">r&quot;\2&quot;</highlight><highlight class="normal">).replace(</highlight><highlight class="stringliteral">&apos;\\&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">r&apos;\\&apos;</highlight><highlight class="normal">).replace(</highlight><highlight class="stringliteral">r&apos;\\2&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">r&quot;\2&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">r&quot;\3&quot;</highlight><highlight class="normal">,<sp/>text)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>text</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254" refid="namespacelmf_1_1src_1_1output_1_1tex_1a888b1a2e247aca19782cd33553a48389" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1output_1_1tex_1a888b1a2e247aca19782cd33553a48389" kindref="member">handle_pinyin</ref>(text):</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Replace<sp/>&apos;@xxx&apos;<sp/>by<sp/>&apos;\\textcolor{gray}{xxx}&apos;<sp/>in<sp/>&apos;lx&apos;,<sp/>&apos;dv&apos;,<sp/>&apos;xv&apos;<sp/>fields<sp/>(already<sp/>in<sp/>API).</highlight></codeline>
<codeline lineno="256"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>re</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>text.find(</highlight><highlight class="stringliteral">&quot;@&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>-1:</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text<sp/>=<sp/>re.sub(</highlight><highlight class="stringliteral">r&quot;(\w*)@(\w*)&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">r&quot;\1&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">r&quot;\\textcolor{gray}{&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">r&quot;\2&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">,<sp/>text)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>text</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262" refid="namespacelmf_1_1src_1_1output_1_1tex_1a205f4188aa1b342c369855e6e5572a57" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1output_1_1tex_1a205f4188aa1b342c369855e6e5572a57" kindref="member">handle_caps</ref>(text):</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Handle<sp/>small<sp/>caps.</highlight></codeline>
<codeline lineno="264"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Replace<sp/>&apos;°xxx&apos;<sp/>by<sp/>&apos;\textsc{xxx}&apos;<sp/>in<sp/>translated<sp/>examples.</highlight></codeline>
<codeline lineno="265"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>re</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>text.encode(</highlight><highlight class="stringliteral">&quot;utf8&quot;</highlight><highlight class="normal">).find(</highlight><highlight class="stringliteral">&quot;°&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>-1:</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>LaTeX<sp/>does<sp/>not<sp/>support<sp/>&apos;#&apos;<sp/>nor<sp/>&apos;_&apos;<sp/>characters<sp/>inside<sp/>&apos;\mytextsc&apos;<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text<sp/>=<sp/>re.sub(</highlight><highlight class="stringliteral">r&quot;(\w*)°([^\s\.,)+/:\#\_]*)(\w*)&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">r&quot;\1&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">r&quot;\\textsc{&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">r&quot;\2&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">r&quot;\3&quot;</highlight><highlight class="normal">,<sp/>text.encode(</highlight><highlight class="stringliteral">&quot;utf8&quot;</highlight><highlight class="normal">)).decode(</highlight><highlight class="stringliteral">&quot;utf8&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>text</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="namespacelmf_1_1src_1_1output_1_1tex_1ae0c82fed3f85067694b3723e2b22c9dd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1output_1_1tex_1ae0c82fed3f85067694b3723e2b22c9dd" kindref="member">handle_quotes</ref>(text):</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Hanlde<sp/>quotation<sp/>marks.</highlight></codeline>
<codeline lineno="274"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Replace<sp/>each<sp/>&quot;xxx&quot;<sp/>by<sp/>``xxx&quot;.</highlight></codeline>
<codeline lineno="275"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>re</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>pattern<sp/>=<sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;^([^\&quot;]*)\&quot;([^\&quot;]*)\&quot;.*&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>re.match(pattern,<sp/>text)</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>end<sp/>=<sp/>text</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>result:</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text<sp/>+=<sp/>result.group(1)<sp/>+<sp/></highlight><highlight class="stringliteral">r&quot;``&quot;</highlight><highlight class="normal"><sp/>+<sp/>result.group(2)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>=<sp/>end.replace(result.group(1)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal"><sp/>+<sp/>result.group(2)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>re.match(pattern,<sp/>end)</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>text<sp/>+=<sp/>end</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>text</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="comment">##<sp/>Functions<sp/>to<sp/>process<sp/>LaTeX<sp/>fields<sp/>(output)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290" refid="namespacelmf_1_1src_1_1output_1_1tex_1af227fdf99ed78fcc56c1baaacec9ec61" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1output_1_1tex_1af227fdf99ed78fcc56c1baaacec9ec61" kindref="member">format_uid</ref>(lexical_entry,<sp/>font):</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>@brief<sp/>Transform<sp/>unique<sp/>identifier<sp/>of<sp/>a<sp/>lexical<sp/>entry<sp/>in<sp/>ASCII<sp/>format.</highlight></codeline>
<codeline lineno="292"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>lexical_entry<sp/>The<sp/>targeted<sp/>Lexical<sp/>Entry<sp/>LMF<sp/>instance.</highlight></codeline>
<codeline lineno="293"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>font<sp/>A<sp/>Python<sp/>dictionary<sp/>giving<sp/>the<sp/>vernacular,<sp/>national,<sp/>regional<sp/>fonts<sp/>to<sp/>apply<sp/>to<sp/>a<sp/>text<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="294"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@return<sp/>A<sp/>string<sp/>representing<sp/>the<sp/>unique<sp/>identifier<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="295"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>LaTeX<sp/>does<sp/>not<sp/>handle<sp/>&apos;\&apos;<sp/>(backslash),<sp/>&apos;{&apos;<sp/>(left<sp/>brace)<sp/>and<sp/>&apos;{&apos;<sp/>(right<sp/>brace)<sp/>characters<sp/>in<sp/>links</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>text<sp/>=<sp/>lexical_entry.get_id()</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>text.find(</highlight><highlight class="stringliteral">&quot;\\&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>-1:</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text<sp/>=<sp/>text.replace(</highlight><highlight class="stringliteral">&apos;\\&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">u&quot;£&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>text.find(</highlight><highlight class="stringliteral">&quot;{&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>-1:</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text<sp/>=<sp/>text.replace(</highlight><highlight class="stringliteral">&apos;{&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;\{&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>text.find(</highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>-1:</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text<sp/>=<sp/>text.replace(</highlight><highlight class="stringliteral">&apos;}&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;\}&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>text</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306" refid="namespacelmf_1_1src_1_1output_1_1tex_1ae7e3e1a360c0c3edf578c6c8e0a0df7f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1output_1_1tex_1ae7e3e1a360c0c3edf578c6c8e0a0df7f" kindref="member">format_link</ref>(lexical_entry,<sp/>font):</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>@brief<sp/>Display<sp/>hyperlink<sp/>to<sp/>a<sp/>lexical<sp/>entry<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="308"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>lexical_entry<sp/>The<sp/>targeted<sp/>Lexical<sp/>Entry<sp/>LMF<sp/>instance.</highlight></codeline>
<codeline lineno="309"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>font<sp/>A<sp/>Python<sp/>dictionary<sp/>giving<sp/>the<sp/>vernacular,<sp/>national,<sp/>regional<sp/>fonts<sp/>to<sp/>apply<sp/>to<sp/>a<sp/>text<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="310"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@return<sp/>A<sp/>string<sp/>representing<sp/>the<sp/>hyperlink<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="311"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\\hyperlink{&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacelmf_1_1src_1_1output_1_1tex_1af227fdf99ed78fcc56c1baaacec9ec61" kindref="member">format_uid</ref>(lexical_entry,<sp/>font)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;}{&quot;</highlight><highlight class="normal"><sp/>+<sp/>font[VERNACULAR](lexical_entry.get_lexeme())</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>lexical_entry.get_homonymNumber()<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>\\textsubscript{&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(lexical_entry.get_homonymNumber())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318" refid="namespacelmf_1_1src_1_1output_1_1tex_1ad8ae0c7f0968885dbcc879c3750a77cc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1output_1_1tex_1ad8ae0c7f0968885dbcc879c3750a77cc" kindref="member">format_lexeme</ref>(lexical_entry,<sp/>font):</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>@brief<sp/>&apos;lx&apos;,<sp/>&apos;hm&apos;<sp/>and<sp/>&apos;lc&apos;<sp/>fields<sp/>are<sp/>flipped<sp/>if<sp/>&apos;lc&apos;<sp/>field<sp/>has<sp/>data.</highlight></codeline>
<codeline lineno="320"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>lexical_entry<sp/>The<sp/>current<sp/>Lexical<sp/>Entry<sp/>LMF<sp/>instance.</highlight></codeline>
<codeline lineno="321"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>font<sp/>A<sp/>Python<sp/>dictionary<sp/>giving<sp/>the<sp/>vernacular,<sp/>national,<sp/>regional<sp/>fonts<sp/>to<sp/>apply<sp/>to<sp/>a<sp/>text<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="322"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@return<sp/>A<sp/>string<sp/>representing<sp/>lexeme<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="323"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>lexeme<sp/>=<sp/>font[VERNACULAR](lexical_entry.get_lexeme())</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>lexical_entry.is_subentry():</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\subparagraph{\\dollar\\blacksquare\\dollar<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\paragraph{\\hspace{-0.5cm}<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>lexical_entry.get_homonymNumber()<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Add<sp/>homonym<sp/>number<sp/>to<sp/>lexeme</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lexeme<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>\\textsubscript{&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(lexical_entry.get_homonymNumber())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>lexical_entry.get_contextual_variations()<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>len(lexical_entry.get_contextual_variations())<sp/>!=<sp/>0:</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Format<sp/>contextual<sp/>variations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>var<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lexical_entry.get_contextual_variations():</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>font[VERNACULAR](var)</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(from:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>lexeme<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;).&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Format<sp/>lexeme</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>lexeme</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;}<sp/>\\hypertarget{&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacelmf_1_1src_1_1output_1_1tex_1af227fdf99ed78fcc56c1baaacec9ec61" kindref="member">format_uid</ref>(lexical_entry,<sp/>font)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;}{}&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>lexical_entry.is_subentry():</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\markboth{&quot;</highlight><highlight class="normal"><sp/>+<sp/>lexeme<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;}{}&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346" refid="namespacelmf_1_1src_1_1output_1_1tex_1acfa25a92d1341c5aeed086b136377983" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1output_1_1tex_1acfa25a92d1341c5aeed086b136377983" kindref="member">format_audio</ref>(lexical_entry,<sp/>font):</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>@brief<sp/>Embed<sp/>sound<sp/>file<sp/>into<sp/>PDF.</highlight></codeline>
<codeline lineno="348"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>lexical_entry<sp/>The<sp/>current<sp/>Lexical<sp/>Entry<sp/>LMF<sp/>instance.</highlight></codeline>
<codeline lineno="349"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>font<sp/>A<sp/>Python<sp/>dictionary<sp/>giving<sp/>the<sp/>vernacular,<sp/>national,<sp/>regional<sp/>fonts<sp/>to<sp/>apply<sp/>to<sp/>a<sp/>text<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="350"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@return<sp/>A<sp/>string<sp/>embedding<sp/>sound<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="351"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>os.path<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>basename,<sp/>isfile</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>To<sp/>access<sp/>options</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>lmf<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>options</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>options</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>options.audio:</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>form_representation<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lexical_entry.get_form_representations():</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>form_representation.get_audio()<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Embed<sp/>local<sp/>sound<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>\includemedia[&lt;options&gt;]{&lt;poster<sp/>text&gt;}{&lt;main<sp/>Flash<sp/>(SWF)<sp/>file<sp/>or<sp/>URL<sp/><sp/>|<sp/><sp/>3D<sp/>(PRC,<sp/>U3D)<sp/>file&gt;}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>To<sp/>include<sp/>audio<sp/>file<sp/>in<sp/>PDF,<sp/>replace<sp/>WAV<sp/>extension<sp/>by<sp/>MP3<sp/>extension<sp/>and<sp/>search<sp/>in<sp/>audio,<sp/>MP3<sp/>and<sp/>WAV<sp/>folders</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_name<sp/>=<sp/>form_representation.get_audio().get_fileName().replace(</highlight><highlight class="stringliteral">&quot;.wav&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;.mp3&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_path<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>os.name<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;posix&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Unix-style<sp/>paths</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_path.append(config.xml.audio_path<sp/>+<sp/>file_name)</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_path.append(config.xml.audio_path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;mp3/&quot;</highlight><highlight class="normal"><sp/>+<sp/>file_name)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_path.append(config.xml.audio_path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;wav/&quot;</highlight><highlight class="normal"><sp/>+<sp/>file_name)</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Windows-style<sp/>paths</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>audio_path<sp/>=<sp/>config.xml.audio_path.replace(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;\\&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_path.append(audio_path<sp/>+<sp/>file_name)</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_path.append(audio_path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;mp3\\&quot;</highlight><highlight class="normal"><sp/>+<sp/>file_name)</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_path.append(audio_path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;wav\\&quot;</highlight><highlight class="normal"><sp/>+<sp/>file_name)</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exist<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>audio_file<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>file_path:</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isfile(audio_file):</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exist<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>exist:</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>Warning(</highlight><highlight class="stringliteral">&quot;Sound<sp/>file<sp/>&apos;%s&apos;<sp/>encountered<sp/>for<sp/>lexeme<sp/>&apos;%s&apos;<sp/>does<sp/>not<sp/>exist&quot;</highlight><highlight class="normal"><sp/>%<sp/>(file_name.encode(ENCODING),<sp/>lexical_entry.get_lexeme().encode(ENCODING)))</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_name<sp/>=<sp/>file_name.replace(</highlight><highlight class="stringliteral">&apos;-&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;\string-&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\includemedia[&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL<sp/>+\</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\taddresource=&quot;</highlight><highlight class="normal"><sp/>+<sp/>file_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL<sp/>+\</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\tflashvars={&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL<sp/>+\</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\t\tsource=&quot;</highlight><highlight class="normal"><sp/>+<sp/>file_name<sp/>+<sp/>EOL<sp/>+\</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\t\t&amp;autoPlay=true&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL<sp/>+\</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\t\t&amp;autoRewind=true&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL<sp/>+\</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\t\t&amp;loop=false&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL<sp/>+\</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\t\t&amp;hideBar=true&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL<sp/>+\</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\t\t&amp;volume=1.0&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL<sp/>+\</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\t\t&amp;balance=0.0&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL<sp/>+\</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;}]{\includegraphics[scale=0.5]{sound1_bleu.jpg}}{APlayer.swf}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>\mediabutton[&lt;options&gt;]{&lt;normal<sp/>button<sp/>text<sp/>or<sp/>graphic&gt;}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>\\hspace{0.1cm}&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402" refid="namespacelmf_1_1src_1_1output_1_1tex_1a52a7393246f6050a19e672aa205b1570" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1output_1_1tex_1a52a7393246f6050a19e672aa205b1570" kindref="member">format_part_of_speech</ref>(lexical_entry,<sp/>font,<sp/>mapping=partOfSpeech_tex,<sp/>language=None):</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>@brief<sp/>Display<sp/>part<sp/>of<sp/>speech<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="404"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>lexical_entry<sp/>The<sp/>current<sp/>Lexical<sp/>Entry<sp/>LMF<sp/>instance.</highlight></codeline>
<codeline lineno="405"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>font<sp/>A<sp/>Python<sp/>dictionary<sp/>giving<sp/>the<sp/>vernacular,<sp/>national,<sp/>regional<sp/>fonts<sp/>to<sp/>apply<sp/>to<sp/>a<sp/>text<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="406"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>mapping<sp/>A<sp/>Python<sp/>dictionary<sp/>giving<sp/>the<sp/>mapping<sp/>between<sp/>LMF<sp/>part<sp/>of<sp/>speech<sp/>LexicalEntry<sp/>attribute<sp/>value<sp/>and<sp/>LaTeX<sp/>layout.</highlight></codeline>
<codeline lineno="407"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>language<sp/>Language<sp/>to<sp/>consider<sp/>to<sp/>display<sp/>part<sp/>of<sp/>speech.</highlight></codeline>
<codeline lineno="408"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@return<sp/>A<sp/>string<sp/>representing<sp/>part<sp/>of<sp/>speech<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="409"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>lexical_entry.get_partOfSpeech()<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>language<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\textit{&quot;</highlight><highlight class="normal"><sp/>+<sp/>mapping[lexical_entry.get_partOfSpeech()]<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;}.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\textit{&quot;</highlight><highlight class="normal"><sp/>+<sp/>mapping[(language,<sp/>lexical_entry.get_partOfSpeech())]<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;}.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>KeyError:</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>Warning(</highlight><highlight class="stringliteral">&quot;Part<sp/>of<sp/>speech<sp/>value<sp/>&apos;%s&apos;<sp/>encountered<sp/>for<sp/>lexeme<sp/>&apos;%s&apos;<sp/>is<sp/>not<sp/>defined<sp/>in<sp/>configuration&quot;</highlight><highlight class="normal"><sp/>%<sp/>(lexical_entry.get_partOfSpeech().encode(ENCODING),<sp/>lexical_entry.get_lexeme().encode(ENCODING)))</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421" refid="namespacelmf_1_1src_1_1output_1_1tex_1aa6cf10b6f99a8a571a00fb22d6797b9a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1output_1_1tex_1aa6cf10b6f99a8a571a00fb22d6797b9a" kindref="member">format_definitions</ref>(sense,<sp/>font,<sp/>languages=None):</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>@brief<sp/>Glosses<sp/>are<sp/>supplanted<sp/>by<sp/>definitions.</highlight></codeline>
<codeline lineno="423"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>sense<sp/>The<sp/>current<sp/>Sense<sp/>LMF<sp/>instance.</highlight></codeline>
<codeline lineno="424"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>font<sp/>A<sp/>Python<sp/>dictionary<sp/>giving<sp/>the<sp/>vernacular,<sp/>national,<sp/>regional<sp/>fonts<sp/>to<sp/>apply<sp/>to<sp/>a<sp/>text<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="425"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>languages<sp/>A<sp/>list<sp/>of<sp/>languages<sp/>to<sp/>consider<sp/>for<sp/>definitions<sp/>and<sp/>glosses<sp/>(all<sp/>by<sp/>default).</highlight></codeline>
<codeline lineno="426"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@return<sp/>A<sp/>string<sp/>representing<sp/>glosses<sp/>and<sp/>definitions<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="427"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>languages<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>languages<sp/>=<sp/>[config.xml.vernacular,<sp/>config.xml.English,<sp/>config.xml.national,<sp/>config.xml.regional]</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>language<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>languages:</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(sense.find_definitions(language))<sp/>!=<sp/>0:</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>definition<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sense.find_definitions(language):</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>language<sp/>==<sp/>config.xml.vernacular:</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>font[VERNACULAR](definition)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>language<sp/>==<sp/>config.xml.national:</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>font[NATIONAL](<ref refid="namespacelmf_1_1src_1_1output_1_1tex_1acdd13e0489e158f24036a243e21cb484" kindref="member">handle_font</ref>(definition))<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>language<sp/>==<sp/>config.xml.regional:</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\textit{[Regnl:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>font[REGIONAL](definition)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;]}.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>definition<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>len(sense.find_glosses(language))<sp/>!=<sp/>0:</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>gloss<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sense.find_glosses(language):</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>language<sp/>==<sp/>config.xml.vernacular:</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>font[VERNACULAR](gloss)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>language<sp/>==<sp/>config.xml.national:</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>font[NATIONAL](<ref refid="namespacelmf_1_1src_1_1output_1_1tex_1acdd13e0489e158f24036a243e21cb484" kindref="member">handle_font</ref>(gloss))<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>language<sp/>==<sp/>config.xml.regional:</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\textit{[Regnl:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>font[REGIONAL](gloss)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;]}.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>gloss<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(sense.get_translations(language))<sp/>!=<sp/>0:</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>translation<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sense.get_translations(language):</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>language<sp/>==<sp/>config.xml.national:</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>font[NATIONAL](translation)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>language<sp/>==<sp/>config.xml.regional:</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\textbf{rr:}\\textit{[Regnl:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>translation<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;]}.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>translation<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462" refid="namespacelmf_1_1src_1_1output_1_1tex_1afc649c48058e216ab2187efa4ea3969e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1output_1_1tex_1afc649c48058e216ab2187efa4ea3969e" kindref="member">format_lt</ref>(sense,<sp/>font):</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>@brief<sp/>Display<sp/>&apos;lt&apos;<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="464"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>sense<sp/>The<sp/>current<sp/>Sense<sp/>LMF<sp/>instance.</highlight></codeline>
<codeline lineno="465"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>font<sp/>A<sp/>Python<sp/>dictionary<sp/>giving<sp/>the<sp/>vernacular,<sp/>national,<sp/>regional<sp/>fonts<sp/>to<sp/>apply<sp/>to<sp/>a<sp/>text<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="466"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@return<sp/>A<sp/>string<sp/>representing<sp/>&apos;lt&apos;<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="467"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>return<sp/>&quot;\\textit{Lit:}<sp/>&quot;<sp/>+<sp/>u&quot;\u2018&quot;<sp/>+<sp/>sense.get_lt()<sp/>+<sp/>u&quot;\u2019&quot;<sp/>+<sp/>&quot;.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471" refid="namespacelmf_1_1src_1_1output_1_1tex_1a33262e30a0444e5f357a86053b4fe9e8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1output_1_1tex_1a33262e30a0444e5f357a86053b4fe9e8" kindref="member">format_sc</ref>(sense,<sp/>font):</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>@brief<sp/>Display<sp/>&apos;sc&apos;<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="473"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>sense<sp/>The<sp/>current<sp/>Sense<sp/>LMF<sp/>instance.</highlight></codeline>
<codeline lineno="474"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>font<sp/>A<sp/>Python<sp/>dictionary<sp/>giving<sp/>the<sp/>vernacular,<sp/>national,<sp/>regional<sp/>fonts<sp/>to<sp/>apply<sp/>to<sp/>a<sp/>text<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="475"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@return<sp/>A<sp/>string<sp/>representing<sp/>&apos;sc&apos;<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="476"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>return<sp/>&quot;\\textit{\uline{&quot;<sp/>+<sp/>sense.get_sc()<sp/>+<sp/>&quot;}}.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480" refid="namespacelmf_1_1src_1_1output_1_1tex_1ab6b257f9eee12679dcbe70496073d841" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1output_1_1tex_1ab6b257f9eee12679dcbe70496073d841" kindref="member">format_rf</ref>(sense,<sp/>font):</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>@brief<sp/>Display<sp/>&apos;rf&apos;<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="482"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>lexical_entry<sp/>The<sp/>current<sp/>Sense<sp/>LMF<sp/>instance.</highlight></codeline>
<codeline lineno="483"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>font<sp/>A<sp/>Python<sp/>dictionary<sp/>giving<sp/>the<sp/>vernacular,<sp/>national,<sp/>regional<sp/>fonts<sp/>to<sp/>apply<sp/>to<sp/>a<sp/>text<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="484"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@return<sp/>A<sp/>string<sp/>representing<sp/>&apos;rf&apos;<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="485"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>return<sp/>&quot;\\textit{Ref:}<sp/>&quot;<sp/>+<sp/>sense.get_rf()<sp/>+<sp/>&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489" refid="namespacelmf_1_1src_1_1output_1_1tex_1a43cc9691809bfccc3057c93d9ca21f7d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1output_1_1tex_1a43cc9691809bfccc3057c93d9ca21f7d" kindref="member">format_examples</ref>(sense,<sp/>font,<sp/>languages=None):</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>@brief<sp/>Display<sp/>examples<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="491"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>sense<sp/>The<sp/>current<sp/>Sense<sp/>LMF<sp/>instance.</highlight></codeline>
<codeline lineno="492"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>font<sp/>A<sp/>Python<sp/>dictionary<sp/>giving<sp/>the<sp/>vernacular,<sp/>national,<sp/>regional<sp/>fonts<sp/>to<sp/>apply<sp/>to<sp/>a<sp/>text<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="493"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>languages<sp/>A<sp/>list<sp/>of<sp/>languages<sp/>to<sp/>consider<sp/>for<sp/>examples<sp/>(all<sp/>by<sp/>default).</highlight></codeline>
<codeline lineno="494"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@return<sp/>A<sp/>string<sp/>representing<sp/>examples<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="495"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>languages<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>languages<sp/>=<sp/>[config.xml.vernacular,<sp/>config.xml.English,<sp/>config.xml.national,<sp/>config.xml.regional]</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>context<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sense.get_contexts():</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>language<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>languages:</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>example<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>context.find_written_forms(language):</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>language<sp/>==<sp/>config.xml.vernacular:</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\sn<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>font[VERNACULAR](example)<sp/>+<sp/>EOL</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>language<sp/>==<sp/>config.xml.national:</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\trans<sp/>\\textit{&quot;</highlight><highlight class="normal"><sp/>+<sp/>font[NATIONAL](<ref refid="namespacelmf_1_1src_1_1output_1_1tex_1acdd13e0489e158f24036a243e21cb484" kindref="member">handle_font</ref>(example))<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>language<sp/>==<sp/>config.xml.regional:</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\trans<sp/>\\textit{[&quot;</highlight><highlight class="normal"><sp/>+<sp/>font[REGIONAL](example)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;]}&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">#<sp/>language<sp/>==<sp/>config.xml.English</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\trans<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>example<sp/>+<sp/>EOL</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>LaTeX<sp/>does<sp/>not<sp/>support<sp/>empty<sp/>examples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(tmp)<sp/>!=<sp/>0:</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\begin{exe}&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL<sp/>+<sp/>tmp<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\\end{exe}&quot;</highlight><highlight class="normal"><sp/>+<sp/>EOL</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516" refid="namespacelmf_1_1src_1_1output_1_1tex_1af173240b4ab1cbc3638fc66aa095bbdc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1output_1_1tex_1af173240b4ab1cbc3638fc66aa095bbdc" kindref="member">format_usage_notes</ref>(sense,<sp/>font):</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>@brief<sp/>Display<sp/>usage<sp/>notes<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="518"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>sense<sp/>The<sp/>current<sp/>Sense<sp/>LMF<sp/>instance.</highlight></codeline>
<codeline lineno="519"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>font<sp/>A<sp/>Python<sp/>dictionary<sp/>giving<sp/>the<sp/>vernacular,<sp/>national,<sp/>regional<sp/>fonts<sp/>to<sp/>apply<sp/>to<sp/>a<sp/>text<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="520"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@return<sp/>A<sp/>string<sp/>representing<sp/>usage<sp/>notes<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="521"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>usage<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sense.find_usage_notes(language=config.xml.vernacular):</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\textit{VerUsage:}<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>font[VERNACULAR](usage)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>usage<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sense.find_usage_notes(language=config.xml.English):</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\textit{Usage:}<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>usage<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>usage<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sense.find_usage_notes(language=config.xml.national):</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\textit{&quot;</highlight><highlight class="normal"><sp/>+<sp/>font[NATIONAL](<ref refid="namespacelmf_1_1src_1_1output_1_1tex_1acdd13e0489e158f24036a243e21cb484" kindref="member">handle_font</ref>(usage))<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;}<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>usage<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sense.find_usage_notes(language=config.xml.regional):</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\textit{[&quot;</highlight><highlight class="normal"><sp/>+<sp/>font[REGIONAL](usage)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;]}<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533" refid="namespacelmf_1_1src_1_1output_1_1tex_1a33e3fb3d76e135d0e729ffd2cc8eb1f3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1output_1_1tex_1a33e3fb3d76e135d0e729ffd2cc8eb1f3" kindref="member">format_encyclopedic_informations</ref>(sense,<sp/>font):</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>@brief<sp/>Display<sp/>encyclopedic<sp/>informations<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="535"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>sense<sp/>The<sp/>current<sp/>Sense<sp/>LMF<sp/>instance.</highlight></codeline>
<codeline lineno="536"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>font<sp/>A<sp/>Python<sp/>dictionary<sp/>giving<sp/>the<sp/>vernacular,<sp/>national,<sp/>regional<sp/>fonts<sp/>to<sp/>apply<sp/>to<sp/>a<sp/>text<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="537"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@return<sp/>A<sp/>string<sp/>representing<sp/>encyclopedic<sp/>informations<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="538"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>information<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sense.find_encyclopedic_informations(language=config.xml.vernacular):</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>font[VERNACULAR](information)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>information<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sense.find_encyclopedic_informations(language=config.xml.English):</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>information<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>information<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sense.find_encyclopedic_informations(language=config.xml.national):</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>font[NATIONAL](<ref refid="namespacelmf_1_1src_1_1output_1_1tex_1acdd13e0489e158f24036a243e21cb484" kindref="member">handle_font</ref>(information))<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>information<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sense.find_encyclopedic_informations(language=config.xml.regional):</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\textit{[&quot;</highlight><highlight class="normal"><sp/>+<sp/>font[REGIONAL](information)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;]}<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550" refid="namespacelmf_1_1src_1_1output_1_1tex_1a4bb11e8aae90a0f5e4ce2745f21eee5e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1output_1_1tex_1a4bb11e8aae90a0f5e4ce2745f21eee5e" kindref="member">format_restrictions</ref>(sense,<sp/>font):</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>@brief<sp/>Display<sp/>restrictions<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="552"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>sense<sp/>The<sp/>current<sp/>Sense<sp/>LMF<sp/>instance.</highlight></codeline>
<codeline lineno="553"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>font<sp/>A<sp/>Python<sp/>dictionary<sp/>giving<sp/>the<sp/>vernacular,<sp/>national,<sp/>regional<sp/>fonts<sp/>to<sp/>apply<sp/>to<sp/>a<sp/>text<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="554"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@return<sp/>A<sp/>string<sp/>representing<sp/>restrictions<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="555"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>restriction<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sense.find_restrictions(language=config.xml.vernacular):</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\textit{VerRestrict:}<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>font[VERNACULAR](restriction)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>restriction<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sense.find_restrictions(language=config.xml.English):</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\textit{Restrict:}<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>restriction<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>restriction<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sense.find_restrictions(language=config.xml.national):</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\textit{&quot;</highlight><highlight class="normal"><sp/>+<sp/>font[NATIONAL](restriction)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;}<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>restriction<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sense.find_restrictions(language=config.xml.regional):</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\textit{[&quot;</highlight><highlight class="normal"><sp/>+<sp/>font[REGIONAL](restriction)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;]}<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567" refid="namespacelmf_1_1src_1_1output_1_1tex_1a537739524148dfabf1b8a478dbdc2ab8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1output_1_1tex_1a537739524148dfabf1b8a478dbdc2ab8" kindref="member">format_lexical_functions</ref>(lexical_entry,<sp/>font):</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>@brief<sp/>Display<sp/>lexical<sp/>functions<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="569"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>lexical_entry<sp/>The<sp/>current<sp/>Lexical<sp/>Entry<sp/>LMF<sp/>instance.</highlight></codeline>
<codeline lineno="570"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>font<sp/>A<sp/>Python<sp/>dictionary<sp/>giving<sp/>the<sp/>vernacular,<sp/>national,<sp/>regional<sp/>fonts<sp/>to<sp/>apply<sp/>to<sp/>a<sp/>text<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="571"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@return<sp/>A<sp/>string<sp/>representing<sp/>lexical<sp/>functions<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="572"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>result<sp/>+=<sp/>&quot;\\textit{&quot;<sp/>+<sp/>lexical_entry.get_lf()<sp/>+<sp/>&quot;:<sp/>}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>result<sp/>+=<sp/>lexical_entry.get_le()<sp/>+<sp/>&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>result<sp/>+=<sp/>lexical_entry.get_ln()<sp/>+<sp/>&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>result<sp/>+=<sp/>lexical_entry.get_lr()<sp/>+<sp/>&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580" refid="namespacelmf_1_1src_1_1output_1_1tex_1a8ec199d60ed9bf1181e3fc2b0f5bfdfd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1output_1_1tex_1a8ec199d60ed9bf1181e3fc2b0f5bfdfd" kindref="member">format_related_forms</ref>(lexical_entry,<sp/>font):</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>@brief<sp/>Display<sp/>related<sp/>forms<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="582"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>lexical_entry<sp/>The<sp/>current<sp/>Lexical<sp/>Entry<sp/>LMF<sp/>instance.</highlight></codeline>
<codeline lineno="583"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>font<sp/>A<sp/>Python<sp/>dictionary<sp/>giving<sp/>the<sp/>vernacular,<sp/>national,<sp/>regional<sp/>fonts<sp/>to<sp/>apply<sp/>to<sp/>a<sp/>text<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="584"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@return<sp/>A<sp/>string<sp/>representing<sp/>related<sp/>forms<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="585"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>related_form<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lexical_entry.get_related_forms(mdf_semanticRelation[</highlight><highlight class="stringliteral">&quot;sy&quot;</highlight><highlight class="normal">]):</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\textit{Syn:}<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>related_form.get_lexical_entry()<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="namespacelmf_1_1src_1_1output_1_1tex_1ae7e3e1a360c0c3edf578c6c8e0a0df7f" kindref="member">format_link</ref>(related_form.get_lexical_entry(),<sp/>font)</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>font[VERNACULAR](related_form.get_lexeme())</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>related_form<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lexical_entry.get_related_forms(mdf_semanticRelation[</highlight><highlight class="stringliteral">&quot;an&quot;</highlight><highlight class="normal">]):</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\textit{Ant:}<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>related_form.get_lexical_entry()<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="namespacelmf_1_1src_1_1output_1_1tex_1ae7e3e1a360c0c3edf578c6c8e0a0df7f" kindref="member">format_link</ref>(related_form.get_lexical_entry(),<sp/>font)</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>font[VERNACULAR](related_form.get_lexeme())</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>morphology<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lexical_entry.get_morphologies():</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\textit{Morph:}<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>font[VERNACULAR](morphology)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>related_form<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lexical_entry.get_related_forms(mdf_semanticRelation[</highlight><highlight class="stringliteral">&quot;cf&quot;</highlight><highlight class="normal">]):</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\textit{See:}<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>related_form.get_lexical_entry()<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="namespacelmf_1_1src_1_1output_1_1tex_1ae7e3e1a360c0c3edf578c6c8e0a0df7f" kindref="member">format_link</ref>(related_form.get_lexical_entry(),<sp/>font)</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>font[VERNACULAR](related_form.get_lexeme())</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>ce</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>cn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>cr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>result<sp/>+=<sp/>&quot;\\textit{See<sp/>main<sp/>entry:}<sp/>&quot;<sp/>+<sp/>font[VERNACULAR](lexical_entry.get_mn())<sp/>+<sp/>&quot;.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616" refid="namespacelmf_1_1src_1_1output_1_1tex_1ad480953f36ad10784d7c31ccf6312845" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1output_1_1tex_1ad480953f36ad10784d7c31ccf6312845" kindref="member">format_variant_forms</ref>(lexical_entry,<sp/>font):</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>@brief<sp/>Display<sp/>variant<sp/>forms<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="618"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>lexical_entry<sp/>The<sp/>current<sp/>Lexical<sp/>Entry<sp/>LMF<sp/>instance.</highlight></codeline>
<codeline lineno="619"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>font<sp/>A<sp/>Python<sp/>dictionary<sp/>giving<sp/>the<sp/>vernacular,<sp/>national,<sp/>regional<sp/>fonts<sp/>to<sp/>apply<sp/>to<sp/>a<sp/>text<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="620"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@return<sp/>A<sp/>string<sp/>representing<sp/>variant<sp/>forms<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="621"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>form_representation<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lexical_entry.get_form_representations():</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>form_representation.get_variantForm()<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\textit{Variant:}<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>font[VERNACULAR](form_representation.get_variantForm())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>form_representation.get_comment(config.xml.English)<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><sp/></highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal"><sp/>+<sp/>form_representation.get_comment(config.xml.English)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>form_representation.get_comment(config.xml.national)<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><sp/></highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal"><sp/>+<sp/>font[NATIONAL](form_representation.get_comment(config.xml.national))<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>form_representation.get_comment(config.xml.regional)<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><sp/></highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal"><sp/>+<sp/>font[REGIONAL](form_representation.get_comment(config.xml.regional))<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634" refid="namespacelmf_1_1src_1_1output_1_1tex_1a83e46c265d9398f923037d98556f8a3a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1output_1_1tex_1a83e46c265d9398f923037d98556f8a3a" kindref="member">format_borrowed_word</ref>(lexical_entry,<sp/>font):</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>@brief<sp/>Display<sp/>borrowed<sp/>word<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="636"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>lexical_entry<sp/>The<sp/>current<sp/>Lexical<sp/>Entry<sp/>LMF<sp/>instance.</highlight></codeline>
<codeline lineno="637"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>font<sp/>A<sp/>Python<sp/>dictionary<sp/>giving<sp/>the<sp/>vernacular,<sp/>national,<sp/>regional<sp/>fonts<sp/>to<sp/>apply<sp/>to<sp/>a<sp/>text<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="638"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@return<sp/>A<sp/>string<sp/>representing<sp/>borrowed<sp/>word<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="639"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>lexical_entry.get_borrowed_word()<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\textit{From:}<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>lexical_entry.get_borrowed_word()</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>lexical_entry.get_written_form()<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>lexical_entry.get_written_form()</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648" refid="namespacelmf_1_1src_1_1output_1_1tex_1a8b32c48ab08f6cf19cbf5a6a85afc29e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1output_1_1tex_1a8b32c48ab08f6cf19cbf5a6a85afc29e" kindref="member">format_etymology</ref>(lexical_entry,<sp/>font):</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>@brief<sp/>Display<sp/>etymology<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="650"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>lexical_entry<sp/>The<sp/>current<sp/>Lexical<sp/>Entry<sp/>LMF<sp/>instance.</highlight></codeline>
<codeline lineno="651"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>font<sp/>A<sp/>Python<sp/>dictionary<sp/>giving<sp/>the<sp/>vernacular,<sp/>national,<sp/>regional<sp/>fonts<sp/>to<sp/>apply<sp/>to<sp/>a<sp/>text<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="652"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@return<sp/>A<sp/>string<sp/>representing<sp/>etymology<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="653"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>lexical_entry.get_etymology()<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\textit{Etym:}<sp/>\\textbf{&quot;</highlight><highlight class="normal"><sp/>+<sp/>lexical_entry.get_etymology()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;}<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>lexical_entry.get_etymology_gloss()<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">u&quot;\u2018&quot;</highlight><highlight class="normal"><sp/>+<sp/>lexical_entry.get_etymology_gloss()<sp/>+<sp/></highlight><highlight class="stringliteral">u&quot;\u2019&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661" refid="namespacelmf_1_1src_1_1output_1_1tex_1af15fafa4a65e29c0bbbd58fe5309a438" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1output_1_1tex_1af15fafa4a65e29c0bbbd58fe5309a438" kindref="member">format_paradigms</ref>(lexical_entry,<sp/>font):</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>@brief<sp/>Display<sp/>all<sp/>paradigms<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="663"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>lexical_entry<sp/>The<sp/>current<sp/>Lexical<sp/>Entry<sp/>LMF<sp/>instance.</highlight></codeline>
<codeline lineno="664"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>font<sp/>A<sp/>Python<sp/>dictionary<sp/>giving<sp/>the<sp/>vernacular,<sp/>national,<sp/>regional<sp/>fonts<sp/>to<sp/>apply<sp/>to<sp/>a<sp/>text<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="665"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@return<sp/>A<sp/>string<sp/>representing<sp/>all<sp/>paradigms<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="666"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>paradigm<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lexical_entry.find_paradigms():</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\textit{Prdm:}<sp/>\\textbf{&quot;</highlight><highlight class="normal"><sp/>+<sp/>paradigm<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;}.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>paradigm<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lexical_entry.find_paradigms(grammatical_number=pd_grammaticalNumber[</highlight><highlight class="stringliteral">&quot;sg&quot;</highlight><highlight class="normal">]):</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\textit{Sg:}<sp/>\\textbf{&quot;</highlight><highlight class="normal"><sp/>+<sp/>paradigm<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;}<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>paradigm<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lexical_entry.find_paradigms(grammatical_number=pd_grammaticalNumber[</highlight><highlight class="stringliteral">&quot;pl&quot;</highlight><highlight class="normal">]):</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\textit{Pl:}<sp/>\\textbf{&quot;</highlight><highlight class="normal"><sp/>+<sp/>paradigm<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;}<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>result<sp/>+=<sp/>&quot;\\textit{Redup:}<sp/>\\textbf{&quot;<sp/>+<sp/>lexical_entry.get_rd()<sp/>+<sp/>&quot;}<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>paradigm<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lexical_entry.find_paradigms(person=pd_person[1],<sp/>grammatical_number=pd_grammaticalNumber[</highlight><highlight class="stringliteral">&apos;s&apos;</highlight><highlight class="normal">]):</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\textit{1s:}<sp/>\\textbf{&quot;</highlight><highlight class="normal"><sp/>+<sp/>paradigm<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;}<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>paradigm<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lexical_entry.find_paradigms(person=pd_person[2],<sp/>grammatical_number=pd_grammaticalNumber[</highlight><highlight class="stringliteral">&apos;s&apos;</highlight><highlight class="normal">]):</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\textit{2s:}<sp/>\\textbf{&quot;</highlight><highlight class="normal"><sp/>+<sp/>paradigm<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;}<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>paradigm<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lexical_entry.find_paradigms(person=pd_person[3],<sp/>grammatical_number=pd_grammaticalNumber[</highlight><highlight class="stringliteral">&apos;s&apos;</highlight><highlight class="normal">]):</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\textit{3s:}<sp/>\\textbf{&quot;</highlight><highlight class="normal"><sp/>+<sp/>paradigm<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;}<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>paradigm<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lexical_entry.find_paradigms(anymacy=pd_anymacy[4],<sp/>grammatical_number=pd_grammaticalNumber[</highlight><highlight class="stringliteral">&apos;s&apos;</highlight><highlight class="normal">]):</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\textit{3sn:}<sp/>\\textbf{&quot;</highlight><highlight class="normal"><sp/>+<sp/>paradigm<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;}<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>paradigm<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lexical_entry.find_paradigms(person=pd_person[1],<sp/>grammatical_number=pd_grammaticalNumber[</highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">]):</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\textit{1d:}<sp/>\\textbf{&quot;</highlight><highlight class="normal"><sp/>+<sp/>paradigm<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;}<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>paradigm<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lexical_entry.find_paradigms(person=pd_person[2],<sp/>grammatical_number=pd_grammaticalNumber[</highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">]):</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\textit{2d:}<sp/>\\textbf{&quot;</highlight><highlight class="normal"><sp/>+<sp/>paradigm<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;}<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>paradigm<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lexical_entry.find_paradigms(person=pd_person[3],<sp/>grammatical_number=pd_grammaticalNumber[</highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">]):</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\textit{3d:}<sp/>\\textbf{&quot;</highlight><highlight class="normal"><sp/>+<sp/>paradigm<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;}<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>paradigm<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lexical_entry.find_paradigms(anymacy=pd_anymacy[4],<sp/>grammatical_number=pd_grammaticalNumber[</highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">]):</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\textit{3dn:}<sp/>\\textbf{&quot;</highlight><highlight class="normal"><sp/>+<sp/>paradigm<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;}<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>paradigm<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lexical_entry.find_paradigms(person=pd_person[1],<sp/>grammatical_number=pd_grammaticalNumber[</highlight><highlight class="stringliteral">&apos;p&apos;</highlight><highlight class="normal">]):</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\textit{1p:}<sp/>\\textbf{&quot;</highlight><highlight class="normal"><sp/>+<sp/>paradigm<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;}<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>paradigm<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lexical_entry.find_paradigms(person=pd_person[1],<sp/>grammatical_number=pd_grammaticalNumber[</highlight><highlight class="stringliteral">&apos;p&apos;</highlight><highlight class="normal">],<sp/>clusivity=pd_clusivity[</highlight><highlight class="stringliteral">&apos;e&apos;</highlight><highlight class="normal">]):</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\textit{1px:}<sp/>\\textbf{&quot;</highlight><highlight class="normal"><sp/>+<sp/>paradigm<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;}<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>paradigm<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lexical_entry.find_paradigms(person=pd_person[1],<sp/>grammatical_number=pd_grammaticalNumber[</highlight><highlight class="stringliteral">&apos;p&apos;</highlight><highlight class="normal">],<sp/>clusivity=pd_clusivity[</highlight><highlight class="stringliteral">&apos;i&apos;</highlight><highlight class="normal">]):</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\textit{1pi:}<sp/>\\textbf{&quot;</highlight><highlight class="normal"><sp/>+<sp/>paradigm<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;}<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>paradigm<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lexical_entry.find_paradigms(person=pd_person[2],<sp/>grammatical_number=pd_grammaticalNumber[</highlight><highlight class="stringliteral">&apos;p&apos;</highlight><highlight class="normal">]):</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\textit{2p:}<sp/>\\textbf{&quot;</highlight><highlight class="normal"><sp/>+<sp/>paradigm<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;}<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>paradigm<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lexical_entry.find_paradigms(person=pd_person[3],<sp/>grammatical_number=pd_grammaticalNumber[</highlight><highlight class="stringliteral">&apos;p&apos;</highlight><highlight class="normal">]):</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\textit{3p:}<sp/>\\textbf{&quot;</highlight><highlight class="normal"><sp/>+<sp/>paradigm<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;}<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>paradigm<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lexical_entry.find_paradigms(anymacy=pd_anymacy[4],<sp/>grammatical_number=pd_grammaticalNumber[</highlight><highlight class="stringliteral">&apos;p&apos;</highlight><highlight class="normal">]):</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\textit{3pn:}<sp/>\\textbf{&quot;</highlight><highlight class="normal"><sp/>+<sp/>paradigm<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;}<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705" refid="namespacelmf_1_1src_1_1output_1_1tex_1add49538268673cc7499172c453a135a7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1output_1_1tex_1add49538268673cc7499172c453a135a7" kindref="member">format_table</ref>(lexical_entry,<sp/>font):</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>@brief<sp/>Display<sp/>a<sp/>table<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="707"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>lexical_entry<sp/>The<sp/>current<sp/>Lexical<sp/>Entry<sp/>LMF<sp/>instance.</highlight></codeline>
<codeline lineno="708"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>font<sp/>A<sp/>Python<sp/>dictionary<sp/>giving<sp/>the<sp/>vernacular,<sp/>national,<sp/>regional<sp/>fonts<sp/>to<sp/>apply<sp/>to<sp/>a<sp/>text<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="709"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@return<sp/>A<sp/>string<sp/>representing<sp/>a<sp/>table<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="710"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713" refid="namespacelmf_1_1src_1_1output_1_1tex_1a3ffcbb1f8e1432f650d0e0b8b1177543" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1output_1_1tex_1a3ffcbb1f8e1432f650d0e0b8b1177543" kindref="member">format_semantic_domains</ref>(lexical_entry,<sp/>font):</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>@brief<sp/>Display<sp/>semantic<sp/>domains<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="715"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>lexical_entry<sp/>The<sp/>current<sp/>Lexical<sp/>Entry<sp/>LMF<sp/>instance.</highlight></codeline>
<codeline lineno="716"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>font<sp/>A<sp/>Python<sp/>dictionary<sp/>giving<sp/>the<sp/>vernacular,<sp/>national,<sp/>regional<sp/>fonts<sp/>to<sp/>apply<sp/>to<sp/>a<sp/>text<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="717"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@return<sp/>A<sp/>string<sp/>representing<sp/>semantic<sp/>domains<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="718"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>semantic_domain<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lexical_entry.get_semantic_domains():</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\textit{SD:}<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>semantic_domain<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>result<sp/>+=<sp/>&quot;\\textit{Semantics:}<sp/>&quot;<sp/>+<sp/>lexical_entry.get_is()<sp/>+<sp/>&quot;.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>th</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>result<sp/>+=<sp/>&quot;\\textit{Thes:}<sp/>&quot;<sp/>+<sp/>lexical_entry.get_th()<sp/>+<sp/>&quot;.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728" refid="namespacelmf_1_1src_1_1output_1_1tex_1aae400c8f0cdd2e08c20377c6ed7b2dcc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1output_1_1tex_1aae400c8f0cdd2e08c20377c6ed7b2dcc" kindref="member">format_bibliography</ref>(lexical_entry,<sp/>font):</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>@brief<sp/>Display<sp/>bibliography<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="730"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>lexical_entry<sp/>The<sp/>current<sp/>Lexical<sp/>Entry<sp/>LMF<sp/>instance.</highlight></codeline>
<codeline lineno="731"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>font<sp/>A<sp/>Python<sp/>dictionary<sp/>giving<sp/>the<sp/>vernacular,<sp/>national,<sp/>regional<sp/>fonts<sp/>to<sp/>apply<sp/>to<sp/>a<sp/>text<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="732"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@return<sp/>A<sp/>string<sp/>representing<sp/>bibliography<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="733"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>lexical_entry.get_bibliography()<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\textit{Read:}<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>lexical_entry.get_bibliography()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739" refid="namespacelmf_1_1src_1_1output_1_1tex_1a6d8e82577b0cfde12afdc47800615332" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1output_1_1tex_1a6d8e82577b0cfde12afdc47800615332" kindref="member">format_picture</ref>(lexical_entry,<sp/>font):</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>@brief<sp/>Display<sp/>a<sp/>picture<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="741"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>lexical_entry<sp/>The<sp/>current<sp/>Lexical<sp/>Entry<sp/>LMF<sp/>instance.</highlight></codeline>
<codeline lineno="742"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>font<sp/>A<sp/>Python<sp/>dictionary<sp/>giving<sp/>the<sp/>vernacular,<sp/>national,<sp/>regional<sp/>fonts<sp/>to<sp/>apply<sp/>to<sp/>a<sp/>text<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="743"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@return<sp/>A<sp/>string<sp/>representing<sp/>a<sp/>picture<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="744"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>return<sp/>&quot;(&quot;<sp/>+<sp/>lexical_entry.get_pc()<sp/>+<sp/>&quot;)<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748" refid="namespacelmf_1_1src_1_1output_1_1tex_1a3a5f6fdc200d161c1e65d79e217dc4e1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1output_1_1tex_1a3a5f6fdc200d161c1e65d79e217dc4e1" kindref="member">format_notes</ref>(lexical_entry,<sp/>font):</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>@brief<sp/>Display<sp/>all<sp/>notes<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="750"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>lexical_entry<sp/>The<sp/>current<sp/>Lexical<sp/>Entry<sp/>LMF<sp/>instance.</highlight></codeline>
<codeline lineno="751"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>font<sp/>A<sp/>Python<sp/>dictionary<sp/>giving<sp/>the<sp/>vernacular,<sp/>national,<sp/>regional<sp/>fonts<sp/>to<sp/>apply<sp/>to<sp/>a<sp/>text<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="752"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@return<sp/>A<sp/>string<sp/>representing<sp/>all<sp/>notes<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="753"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>note<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lexical_entry.find_notes(type=</highlight><highlight class="stringliteral">&quot;general&quot;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\textit{[Note:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>note<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;]}<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>note<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lexical_entry.find_notes(type=</highlight><highlight class="stringliteral">&quot;phonology&quot;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\textit{[Phon:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>note<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;]}<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>note<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lexical_entry.find_notes(type=</highlight><highlight class="stringliteral">&quot;grammar&quot;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\textit{[Gram:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>note<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;]}<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>note<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lexical_entry.find_notes(type=</highlight><highlight class="stringliteral">&quot;discourse&quot;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\textit{[Disc:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>note<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;]}<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>note<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lexical_entry.find_notes(type=</highlight><highlight class="stringliteral">&quot;anthropology&quot;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\textit{[Ant:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>note<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;]}<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>note<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lexical_entry.find_notes(type=</highlight><highlight class="stringliteral">&quot;sociolinguistics&quot;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\textit{[Socio:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>note<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;]}<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>note<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lexical_entry.find_notes(type=</highlight><highlight class="stringliteral">&quot;question&quot;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\textit{[Ques:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>note<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;]}<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771" refid="namespacelmf_1_1src_1_1output_1_1tex_1a54b44cdb2da8e53a85e6c541772ade76" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1output_1_1tex_1a54b44cdb2da8e53a85e6c541772ade76" kindref="member">format_source</ref>(lexical_entry,<sp/>font):</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>@brief<sp/>Display<sp/>source<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="773"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>lexical_entry<sp/>The<sp/>current<sp/>Lexical<sp/>Entry<sp/>LMF<sp/>instance.</highlight></codeline>
<codeline lineno="774"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>font<sp/>A<sp/>Python<sp/>dictionary<sp/>giving<sp/>the<sp/>vernacular,<sp/>national,<sp/>regional<sp/>fonts<sp/>to<sp/>apply<sp/>to<sp/>a<sp/>text<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="775"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@return<sp/>A<sp/>string<sp/>representing<sp/>source<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="776"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>return<sp/>&quot;\\textit{Source:}<sp/>&quot;<sp/>+<sp/>lexical_entry.get_so()<sp/>+<sp/>&quot;.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780" refid="namespacelmf_1_1src_1_1output_1_1tex_1ac38ff95f9228aaa2e3a4412fd3b04773" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1output_1_1tex_1ac38ff95f9228aaa2e3a4412fd3b04773" kindref="member">format_status</ref>(lexical_entry,<sp/>font):</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>@brief<sp/>Display<sp/>status<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="782"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>lexical_entry<sp/>The<sp/>current<sp/>Lexical<sp/>Entry<sp/>LMF<sp/>instance.</highlight></codeline>
<codeline lineno="783"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>font<sp/>A<sp/>Python<sp/>dictionary<sp/>giving<sp/>the<sp/>vernacular,<sp/>national,<sp/>regional<sp/>fonts<sp/>to<sp/>apply<sp/>to<sp/>a<sp/>text<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="784"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@return<sp/>A<sp/>string<sp/>representing<sp/>status<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="785"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>lexical_entry.get_status()<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\textit{Status:}<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>lexical_entry.get_status()</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791" refid="namespacelmf_1_1src_1_1output_1_1tex_1a43ca1be807ad687521d4e5f9994a1442" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1output_1_1tex_1a43ca1be807ad687521d4e5f9994a1442" kindref="member">format_date</ref>(lexical_entry,<sp/>font):</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>@brief<sp/>Do<sp/>not<sp/>display<sp/>date<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="793"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>lexical_entry<sp/>The<sp/>current<sp/>Lexical<sp/>Entry<sp/>LMF<sp/>instance.</highlight></codeline>
<codeline lineno="794"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>font<sp/>A<sp/>Python<sp/>dictionary<sp/>giving<sp/>the<sp/>vernacular,<sp/>national,<sp/>regional<sp/>fonts<sp/>to<sp/>apply<sp/>to<sp/>a<sp/>text<sp/>in<sp/>LaTeX<sp/>format.</highlight></codeline>
<codeline lineno="795"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@return<sp/>An<sp/>empty<sp/>string.</highlight></codeline>
<codeline lineno="796"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/output/tex.py"/>
  </compounddef>
</doxygen>
