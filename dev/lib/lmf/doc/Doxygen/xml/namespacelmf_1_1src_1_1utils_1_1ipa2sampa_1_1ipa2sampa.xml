<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="namespacelmf_1_1src_1_1utils_1_1ipa2sampa_1_1ipa2sampa" kind="namespace">
    <compoundname>lmf::src::utils::ipa2sampa::ipa2sampa</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacelmf_1_1src_1_1utils_1_1ipa2sampa_1_1ipa2sampa_1a8a95155398fd80089637dc91bec08dd4" prot="public" static="no" mutable="no">
        <type>tuple</type>
        <definition>tuple lmf::src::utils::ipa2sampa::ipa2sampa.data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <initializer>= codecs.open(&apos;./src/utils/ipa2sampa/sampa.csv&apos;, &apos;r&apos;, &apos;utf-8&apos;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/utils/ipa2sampa/ipa2sampa.py" line="13" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/utils/ipa2sampa/ipa2sampa.py" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacelmf_1_1src_1_1utils_1_1ipa2sampa_1_1ipa2sampa_1aafe2729198b6e17baf543acf1cde5a2c" prot="public" static="no" mutable="no">
        <type>list</type>
        <definition>tuple lmf::src::utils::ipa2sampa::ipa2sampa::sota</definition>
        <argsstring></argsstring>
        <name>sota</name>
        <initializer>= []</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/utils/ipa2sampa/ipa2sampa.py" line="16" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/utils/ipa2sampa/ipa2sampa.py" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacelmf_1_1src_1_1utils_1_1ipa2sampa_1_1ipa2sampa_1a2fad537cd70d78b8061780b2a2a8d986" prot="public" static="no" mutable="no">
        <type>tuple</type>
        <definition>tuple lmf::src::utils::ipa2sampa::ipa2sampa.ta</definition>
        <argsstring></argsstring>
        <name>ta</name>
        <initializer>= eval(&apos;&quot;&quot;&quot;&apos;+ta+&apos;&quot;&quot;&quot;&apos;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/utils/ipa2sampa/ipa2sampa.py" line="24" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/utils/ipa2sampa/ipa2sampa.py" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacelmf_1_1src_1_1utils_1_1ipa2sampa_1_1ipa2sampa_1a2bff6b612a31a796771c153db6ee739b" prot="public" static="no" mutable="no">
        <type>tuple</type>
        <definition>tuple lmf::src::utils::ipa2sampa::ipa2sampa.seq</definition>
        <argsstring></argsstring>
        <name>seq</name>
        <initializer>= line.strip()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/utils/ipa2sampa/ipa2sampa.py" line="59" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/utils/ipa2sampa/ipa2sampa.py" bodystart="59" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacelmf_1_1src_1_1utils_1_1ipa2sampa_1_1ipa2sampa_1af77b860d37ddfcd77e56bf7ed1e897b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lmf.src.utils.ipa2sampa.ipa2sampa.uni2sampa</definition>
        <argsstring></argsstring>
        <name>uni2sampa</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Convert sequence in unicode-ipa to ascii-sampa.

Notes
-----
Forked from LingPy&apos;s version for ipa2sampa, which is based on code
taken from Peter Kleiweg
(http://www.let.rug.nl/~kleiweg/L04/devel/python/xsampa.html).
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/utils/ipa2sampa/ipa2sampa.py" line="30" column="1" bodyfile="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/utils/ipa2sampa/ipa2sampa.py" bodystart="30" bodyend="54"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/utils/ipa2sampa/ipa2sampa.py" line="1" column="1"/>
  </compounddef>
</doxygen>
