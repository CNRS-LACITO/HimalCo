<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="wrapper_8py" kind="file">
    <compoundname>wrapper.py</compoundname>
    <innernamespace refid="namespacelmf_1_1src_1_1wrapper">lmf::src::wrapper</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacelmf_1_1src_1_1wrapper" refkind="compound"><highlight class="comment">#!<sp/>/usr/bin/env<sp/>python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>@package<sp/>lmf.src.wrapper<sp/>Contains<sp/>one<sp/>main<sp/>function,<sp/>wrapper(),<sp/>which<sp/>runs<sp/>another<sp/>function<sp/>which<sp/>should<sp/>be<sp/>a<sp/>user<sp/>function.<sp/>If<sp/>the<sp/>library<sp/>raises<sp/>an<sp/>exception,<sp/>wrapper()<sp/>will<sp/>restore<sp/>the<sp/>terminal<sp/>to<sp/>a<sp/>sane<sp/>state<sp/>so<sp/>you<sp/>can<sp/>read<sp/>the<sp/>resulting<sp/>traceback.</highlight></codeline>
<codeline lineno="4"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Add<sp/>lib/lmf/src/<sp/>folder<sp/>to<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="8"><highlight class="normal">sys.path.append(</highlight><highlight class="stringliteral">&apos;./src&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">##<sp/>Functions<sp/>to<sp/>read<sp/>from<sp/>a<sp/>file:<sp/>MDF,<sp/>XML<sp/>LMF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>input.mdf<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>mdf_read</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>input.xml_lmf<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>xml_lmf_read<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>lmf_read</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">##<sp/>Functions<sp/>to<sp/>write<sp/>into<sp/>a<sp/>file:<sp/>MDF,<sp/>XML<sp/>LMF,<sp/>LaTeX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>output.mdf<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>mdf_write</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>output.xml_lmf<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>xml_lmf_write<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>lmf_write</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>output.tex<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>tex_write</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>utils.error_handling<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Error</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>utils.log<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>log</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="namespacelmf_1_1src_1_1wrapper_1ad3bdb7559a7a1a4caf4b441bf0c74c28" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1wrapper_1ad3bdb7559a7a1a4caf4b441bf0c74c28" kindref="member">wrapper</ref>(func,<sp/>*args,<sp/>**kwds):</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>@brief<sp/>Wrapper<sp/>function<sp/>that<sp/>calls<sp/>another<sp/>function,<sp/>restoring<sp/>normal<sp/>behavior<sp/>on<sp/>error.</highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>func<sp/>Callable<sp/>object.</highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>args<sp/>Arguments<sp/>passed<sp/>to<sp/>&apos;func&apos;<sp/>as<sp/>its<sp/>first<sp/>argument.</highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>kwds<sp/>Other<sp/>arguments<sp/>passed<sp/>to<sp/>&apos;func&apos;.</highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>As<sp/>this<sp/>is<sp/>a<sp/>user<sp/>function,<sp/>it<sp/>is<sp/>executed<sp/>under<sp/>&apos;try&apos;<sp/>statement<sp/>to<sp/>catch<sp/>and<sp/>handle<sp/>exceptions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>func(*args,<sp/>**kwds)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Error<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>exception:</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>A<sp/>library<sp/>error<sp/>has<sp/>occured</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exception.handle()</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>A<sp/>system<sp/>error<sp/>has<sp/>occured</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sys.stderr.write(</highlight><highlight class="stringliteral">&quot;Unexpected<sp/>error:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(sys.exc_info()[0]))</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>Nominal<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;else&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>Set<sp/>everything<sp/>back<sp/>to<sp/>normal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Release<sp/>created<sp/>objects<sp/>if<sp/>any</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;lexicon&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>locals():</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del<sp/>lexicon</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="namespacelmf_1_1src_1_1wrapper_1ac9330e43238a9e7374fec44248dccb9b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1wrapper_1ac9330e43238a9e7374fec44248dccb9b" kindref="member">read_mdf</ref>(*args,<sp/>**kwds):</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>lexicon<sp/>=<sp/><ref refid="namespacelmf_1_1src_1_1wrapper_1ad3bdb7559a7a1a4caf4b441bf0c74c28" kindref="member">wrapper</ref>(mdf_read,<sp/>*args,<sp/>**kwds)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelmf_1_1src_1_1utils_1_1log_1abf590a9f2e1b55b9eaf8ed9c30e1ee54" kindref="member">log</ref>(</highlight><highlight class="stringliteral">&quot;Successfully<sp/>created<sp/>%s<sp/>LMF<sp/>entries<sp/>from<sp/>MDF<sp/>file<sp/>&apos;%s&apos;.&quot;</highlight><highlight class="normal"><sp/>%<sp/>(lexicon.count_lexical_entries(),<sp/>args[0]))</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lexicon</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="namespacelmf_1_1src_1_1wrapper_1a43689b5d5e59354412e8419b55cad753" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1wrapper_1a43689b5d5e59354412e8419b55cad753" kindref="member">read_xml_lmf</ref>(*args,<sp/>**kwds):</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>lexicon<sp/>=<sp/><ref refid="namespacelmf_1_1src_1_1wrapper_1ad3bdb7559a7a1a4caf4b441bf0c74c28" kindref="member">wrapper</ref>(lmf_read,<sp/>*args,<sp/>**kwds)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelmf_1_1src_1_1utils_1_1log_1abf590a9f2e1b55b9eaf8ed9c30e1ee54" kindref="member">log</ref>(</highlight><highlight class="stringliteral">&quot;Successfully<sp/>created<sp/>%s<sp/>LMF<sp/>entries<sp/>from<sp/>MDF<sp/>file<sp/>&apos;%s&apos;.&quot;</highlight><highlight class="normal"><sp/>%<sp/>(lexicon.count_lexical_entries(),<sp/>args[0]))</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lexicon</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="namespacelmf_1_1src_1_1wrapper_1a34eb45bde89039fab69e6f323c64b61b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1wrapper_1a34eb45bde89039fab69e6f323c64b61b" kindref="member">write_mdf</ref>(*args,<sp/>**kwds):</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelmf_1_1src_1_1wrapper_1ad3bdb7559a7a1a4caf4b441bf0c74c28" kindref="member">wrapper</ref>(mdf_write,<sp/>*args,<sp/>**kwds)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelmf_1_1src_1_1utils_1_1log_1abf590a9f2e1b55b9eaf8ed9c30e1ee54" kindref="member">log</ref>(</highlight><highlight class="stringliteral">&quot;Successfully<sp/>wrote<sp/>%s<sp/>LMF<sp/>entries<sp/>into<sp/>MDF<sp/>file<sp/>&apos;%s&apos;.&quot;</highlight><highlight class="normal"><sp/>%<sp/>(args[0].count_lexical_entries(),<sp/>args[1]))</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="namespacelmf_1_1src_1_1wrapper_1a21e10a1783a71a179ca395a1ffbf7124" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1wrapper_1a21e10a1783a71a179ca395a1ffbf7124" kindref="member">write_xml_lmf</ref>(*args,<sp/>**kwds):</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelmf_1_1src_1_1wrapper_1ad3bdb7559a7a1a4caf4b441bf0c74c28" kindref="member">wrapper</ref>(lmf_write,<sp/>*args,<sp/>**kwds)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelmf_1_1src_1_1utils_1_1log_1abf590a9f2e1b55b9eaf8ed9c30e1ee54" kindref="member">log</ref>(</highlight><highlight class="stringliteral">&quot;Successfully<sp/>wrote<sp/>%s<sp/>LMF<sp/>entries<sp/>into<sp/>XML<sp/>LMF<sp/>file<sp/>&apos;%s&apos;.&quot;</highlight><highlight class="normal"><sp/>%<sp/>(args[0].count_lexical_entries(),<sp/>args[1]))</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="namespacelmf_1_1src_1_1wrapper_1ac819224ea6166cfc937077700ec04fb2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1wrapper_1ac819224ea6166cfc937077700ec04fb2" kindref="member">write_tex</ref>(*args,<sp/>**kwds):</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelmf_1_1src_1_1wrapper_1ad3bdb7559a7a1a4caf4b441bf0c74c28" kindref="member">wrapper</ref>(tex_write,<sp/>*args,<sp/>**kwds)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelmf_1_1src_1_1utils_1_1log_1abf590a9f2e1b55b9eaf8ed9c30e1ee54" kindref="member">log</ref>(</highlight><highlight class="stringliteral">&quot;Successfully<sp/>wrote<sp/>%s<sp/>LMF<sp/>entries<sp/>into<sp/>LaTeX<sp/>file<sp/>&apos;%s&apos;.&quot;</highlight><highlight class="normal"><sp/>%<sp/>(args[0].count_lexical_entries(),<sp/>args[1]))</highlight></codeline>
    </programlisting>
    <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/wrapper.py"/>
  </compounddef>
</doxygen>
