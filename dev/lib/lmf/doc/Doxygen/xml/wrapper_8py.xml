<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="wrapper_8py" kind="file">
    <compoundname>wrapper.py</compoundname>
    <innernamespace refid="namespacelmf_1_1src_1_1wrapper">lmf::src::wrapper</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacelmf_1_1src_1_1wrapper" refkind="compound"><highlight class="comment">#!<sp/>/usr/bin/env<sp/>python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>@package<sp/>lmf.src.wrapper<sp/>Contains<sp/>one<sp/>main<sp/>function,<sp/>wrapper_rw(),<sp/>which<sp/>runs<sp/>another<sp/>function<sp/>which<sp/>should<sp/>be<sp/>a<sp/>user<sp/>function.<sp/>If<sp/>the<sp/>library<sp/>raises<sp/>an<sp/>exception,<sp/>wrapper_rw()<sp/>will<sp/>restore<sp/>the<sp/>terminal<sp/>to<sp/>a<sp/>sane<sp/>state<sp/>so<sp/>you<sp/>can<sp/>read<sp/>the<sp/>resulting<sp/>traceback.</highlight></codeline>
<codeline lineno="4"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Add<sp/>lib/lmf/src/<sp/>folder<sp/>to<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="8"><highlight class="normal">sys.path.append(</highlight><highlight class="stringliteral">&apos;./src&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">##<sp/>Functions<sp/>to<sp/>read<sp/>from<sp/>a<sp/>file:<sp/>MDF,<sp/>XML<sp/>LMF,<sp/>sort<sp/>order,<sp/>XML<sp/>config</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>input.mdf<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>mdf_read</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>input.xml_lmf<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>xml_lmf_read<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>lmf_read</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>config.xml<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sort_order_read<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>order_read</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>config.xml<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>config_read</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">##<sp/>Functions<sp/>to<sp/>write<sp/>into<sp/>a<sp/>file:<sp/>MDF,<sp/>XML<sp/>LMF,<sp/>LaTeX,<sp/>doc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>output.mdf<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>mdf_write</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>output.xml_lmf<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>xml_lmf_write<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>lmf_write</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>output.tex<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>tex_write</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>utils.error_handling<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Error</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>utils.log<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>log</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">##<sp/>Module<sp/>variable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="namespacelmf_1_1src_1_1wrapper_1a0fd5d22005d5ad60acf8eb22acc51f8b" refkind="member"><highlight class="normal">lexical_resource<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="namespacelmf_1_1src_1_1wrapper_1a3452144e50e7d9906a4fb68f16338147" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1wrapper_1a3452144e50e7d9906a4fb68f16338147" kindref="member">wrapper_rw</ref>(func,<sp/>*args,<sp/>**kwds):</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>@brief<sp/>Wrapper<sp/>function<sp/>that<sp/>calls<sp/>another<sp/>function,<sp/>restoring<sp/>normal<sp/>behavior<sp/>on<sp/>error.</highlight></codeline>
<codeline lineno="29"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>func<sp/>Callable<sp/>object.</highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>args<sp/>Arguments<sp/>passed<sp/>to<sp/>&apos;func&apos;<sp/>as<sp/>its<sp/>first<sp/>argument.</highlight></codeline>
<codeline lineno="31"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>kwds<sp/>Other<sp/>arguments<sp/>passed<sp/>to<sp/>&apos;func&apos;.</highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>wrapper</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>As<sp/>this<sp/>is<sp/>a<sp/>user<sp/>function,<sp/>it<sp/>is<sp/>executed<sp/>under<sp/>&apos;try&apos;<sp/>statement<sp/>to<sp/>catch<sp/>and<sp/>handle<sp/>exceptions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object<sp/>=<sp/>func(*args,<sp/>**kwds)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>object.__class__.__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;LexicalResource&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wrapper.lexical_resource<sp/>=<sp/>object</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>object</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>object.__class__.__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Lexicon&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>core.lexical_resource<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>LexicalResource</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>wrapper.lexical_resource<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Create<sp/>a<sp/>Lexical<sp/>Resource<sp/>only<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wrapper.lexical_resource<sp/>=<sp/>LexicalResource()</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Attach<sp/>lexicon<sp/>to<sp/>the<sp/>lexical<sp/>resource<sp/>if<sp/>not<sp/>yet<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>wrapper.lexical_resource.get_lexicon(object.get_id())<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wrapper.lexical_resource.add_lexicon(object)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wrapper.lexical_resource</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>type(object)<sp/>==<sp/>type(dict())<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>type(object)<sp/>==<sp/>type(tuple()):</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>object</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Error<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>exception:</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>A<sp/>library<sp/>error<sp/>has<sp/>occured</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exception.handle()</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>SystemExit:</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>The<sp/>library<sp/>decided<sp/>to<sp/>stop<sp/>execution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>A<sp/>system<sp/>error<sp/>has<sp/>occured</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sys.stderr.write(</highlight><highlight class="stringliteral">&quot;Unexpected<sp/>error:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(sys.exc_info()[0])<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>Nominal<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>Set<sp/>everything<sp/>back<sp/>to<sp/>normal<sp/>and<sp/>release<sp/>created<sp/>objects<sp/>if<sp/>any</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="namespacelmf_1_1src_1_1wrapper_1ac9330e43238a9e7374fec44248dccb9b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1wrapper_1ac9330e43238a9e7374fec44248dccb9b" kindref="member">read_mdf</ref>(*args,<sp/>**kwds):</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>wrapper</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>To<sp/>access<sp/>options</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>lmf<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>options</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>options</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Find<sp/>lexicon<sp/>configuration<sp/>if<sp/>any</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id<sp/>=<sp/>kwds[</highlight><highlight class="stringliteral">&apos;id&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>KeyError:</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>id<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>wrapper.lexical_resource<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lexicon<sp/>=<sp/>wrapper.lexical_resource.get_lexicon(id)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Add<sp/>lexicon<sp/>argument</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwds.update({</highlight><highlight class="stringliteral">&apos;lexicon&apos;</highlight><highlight class="normal">:<sp/>lexicon})</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>An<sp/>MDF<sp/>file<sp/>contains<sp/>one<sp/>lexicon<sp/>only,<sp/>but<sp/>wrapper_rw()<sp/>function<sp/>encapsulates<sp/>it<sp/>into<sp/>a<sp/>lexical<sp/>resource</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>lexical_resource<sp/>=<sp/><ref refid="namespacelmf_1_1src_1_1wrapper_1a3452144e50e7d9906a4fb68f16338147" kindref="member">wrapper_rw</ref>(mdf_read,<sp/>*args,<sp/>**kwds)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>lexicon<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lexical_resource.lexicon:</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>options.cross_references:</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Verify<sp/>lexicon<sp/>coherence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lexicon.check_cross_references()</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacelmf_1_1src_1_1utils_1_1log_1abf590a9f2e1b55b9eaf8ed9c30e1ee54" kindref="member">log</ref>(</highlight><highlight class="stringliteral">&quot;Successfully<sp/>created<sp/>%s<sp/>LMF<sp/>entries<sp/>from<sp/>MDF<sp/>file<sp/>&apos;%s&apos;.&quot;</highlight><highlight class="normal"><sp/>%<sp/>(lexicon.count_lexical_entries(),<sp/>lexicon.get_entrySource()))</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lexical_resource</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="namespacelmf_1_1src_1_1wrapper_1a43689b5d5e59354412e8419b55cad753" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1wrapper_1a43689b5d5e59354412e8419b55cad753" kindref="member">read_xml_lmf</ref>(*args,<sp/>**kwds):</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>To<sp/>access<sp/>options</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>lmf<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>options</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>options</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>An<sp/>XML<sp/>LMF<sp/>file<sp/>contains<sp/>one<sp/>lexical<sp/>resource,<sp/>itself<sp/>containing<sp/>lexicon(s)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>lexical_resource<sp/>=<sp/><ref refid="namespacelmf_1_1src_1_1wrapper_1a3452144e50e7d9906a4fb68f16338147" kindref="member">wrapper_rw</ref>(lmf_read,<sp/>*args,<sp/>**kwds)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Count<sp/>total<sp/>number<sp/>of<sp/>entries<sp/>to<sp/>report<sp/>to<sp/>user</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>entries_nb<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>lexicon<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lexical_resource.get_lexicons():</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entries_nb<sp/>+=<sp/>lexicon.count_lexical_entries()</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>options.cross_references:</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Verify<sp/>lexicon<sp/>coherence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lexicon.check_cross_references()</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelmf_1_1src_1_1utils_1_1log_1abf590a9f2e1b55b9eaf8ed9c30e1ee54" kindref="member">log</ref>(</highlight><highlight class="stringliteral">&quot;Successfully<sp/>created<sp/>%s<sp/>LMF<sp/>entries<sp/>from<sp/>XML<sp/>LMF<sp/>file<sp/>&apos;%s&apos;.&quot;</highlight><highlight class="normal"><sp/>%<sp/>(entries_nb,<sp/>args[0]))</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lexical_resource</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="namespacelmf_1_1src_1_1wrapper_1ae26ce96b85e0bd54d99d77674a330f08" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1wrapper_1ae26ce96b85e0bd54d99d77674a330f08" kindref="member">read_sort_order</ref>(*args,<sp/>**kwds):</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>sort_order<sp/>=<sp/><ref refid="namespacelmf_1_1src_1_1wrapper_1a3452144e50e7d9906a4fb68f16338147" kindref="member">wrapper_rw</ref>(order_read,<sp/>*args,<sp/>**kwds)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelmf_1_1src_1_1utils_1_1log_1abf590a9f2e1b55b9eaf8ed9c30e1ee54" kindref="member">log</ref>(</highlight><highlight class="stringliteral">&quot;Successfully<sp/>read<sp/>sort<sp/>order:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(sort_order))</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sort_order</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="namespacelmf_1_1src_1_1wrapper_1a8f281516c56b0837c0a0138ee87c4e7c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1wrapper_1a8f281516c56b0837c0a0138ee87c4e7c" kindref="member">read_config</ref>(*args,<sp/>**kwds):</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>lexical_resource<sp/>=<sp/><ref refid="namespacelmf_1_1src_1_1wrapper_1a3452144e50e7d9906a4fb68f16338147" kindref="member">wrapper_rw</ref>(config_read,<sp/>*args,<sp/>**kwds)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelmf_1_1src_1_1utils_1_1log_1abf590a9f2e1b55b9eaf8ed9c30e1ee54" kindref="member">log</ref>(</highlight><highlight class="stringliteral">&quot;Successfully<sp/>read<sp/>config&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lexical_resource</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="namespacelmf_1_1src_1_1wrapper_1a34eb45bde89039fab69e6f323c64b61b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1wrapper_1a34eb45bde89039fab69e6f323c64b61b" kindref="member">write_mdf</ref>(*args,<sp/>**kwds):</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>As<sp/>an<sp/>MDF<sp/>file<sp/>can<sp/>only<sp/>contain<sp/>one<sp/>lexicon,<sp/>create<sp/>as<sp/>many<sp/>MDF<sp/>files<sp/>as<sp/>lexicons<sp/>in<sp/>the<sp/>lexical<sp/>resource<sp/>(TODO:<sp/>rename<sp/>files)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>lexicon<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>args[0].get_lexicons():</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacelmf_1_1src_1_1wrapper_1a3452144e50e7d9906a4fb68f16338147" kindref="member">wrapper_rw</ref>(mdf_write,<sp/>lexicon,<sp/>*args[1:],<sp/>**kwds)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacelmf_1_1src_1_1utils_1_1log_1abf590a9f2e1b55b9eaf8ed9c30e1ee54" kindref="member">log</ref>(</highlight><highlight class="stringliteral">&quot;Successfully<sp/>wrote<sp/>%s<sp/>LMF<sp/>entries<sp/>into<sp/>MDF<sp/>file<sp/>&apos;%s&apos;.&quot;</highlight><highlight class="normal"><sp/>%<sp/>(lexicon.count_lexical_entries(),<sp/>args[1]))</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="namespacelmf_1_1src_1_1wrapper_1a21e10a1783a71a179ca395a1ffbf7124" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1wrapper_1a21e10a1783a71a179ca395a1ffbf7124" kindref="member">write_xml_lmf</ref>(*args,<sp/>**kwds):</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>An<sp/>XML<sp/>LMF<sp/>file<sp/>contains<sp/>one<sp/>lexical<sp/>resource,<sp/>itself<sp/>containing<sp/>lexicon(s)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelmf_1_1src_1_1wrapper_1a3452144e50e7d9906a4fb68f16338147" kindref="member">wrapper_rw</ref>(lmf_write,<sp/>*args,<sp/>**kwds)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Count<sp/>total<sp/>number<sp/>of<sp/>entries<sp/>to<sp/>report<sp/>to<sp/>user</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>entries_nb<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>lexicon<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>args[0].get_lexicons():</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entries_nb<sp/>+=<sp/>lexicon.count_lexical_entries()</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelmf_1_1src_1_1utils_1_1log_1abf590a9f2e1b55b9eaf8ed9c30e1ee54" kindref="member">log</ref>(</highlight><highlight class="stringliteral">&quot;Successfully<sp/>wrote<sp/>%s<sp/>LMF<sp/>entries<sp/>into<sp/>XML<sp/>LMF<sp/>file<sp/>&apos;%s&apos;.&quot;</highlight><highlight class="normal"><sp/>%<sp/>(entries_nb,<sp/>args[1]))</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="namespacelmf_1_1src_1_1wrapper_1ac819224ea6166cfc937077700ec04fb2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1wrapper_1ac819224ea6166cfc937077700ec04fb2" kindref="member">write_tex</ref>(*args,<sp/>**kwds):</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>A<sp/>LaTeX<sp/>file<sp/>contains<sp/>one<sp/>or<sp/>several<sp/>lexicons<sp/>and<sp/>informations<sp/>about<sp/>the<sp/>lexical<sp/>resource</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelmf_1_1src_1_1wrapper_1a3452144e50e7d9906a4fb68f16338147" kindref="member">wrapper_rw</ref>(tex_write,<sp/>*args,<sp/>**kwds)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Count<sp/>total<sp/>number<sp/>of<sp/>entries<sp/>to<sp/>report<sp/>to<sp/>user</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>entries_nb<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>lexicon<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>args[0].get_lexicons():</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entries_nb<sp/>+=<sp/>lexicon.count_lexical_entries()</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelmf_1_1src_1_1utils_1_1log_1abf590a9f2e1b55b9eaf8ed9c30e1ee54" kindref="member">log</ref>(</highlight><highlight class="stringliteral">&quot;Successfully<sp/>wrote<sp/>%s<sp/>LMF<sp/>entries<sp/>into<sp/>LaTeX<sp/>file<sp/>&apos;%s&apos;.&quot;</highlight><highlight class="normal"><sp/>%<sp/>(entries_nb,<sp/>args[1]))</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="namespacelmf_1_1src_1_1wrapper_1aca592ed407c9bd88f27cd28d43c2ec47" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelmf_1_1src_1_1wrapper_1aca592ed407c9bd88f27cd28d43c2ec47" kindref="member">write_doc</ref>(*args,<sp/>**kwds):</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Import<sp/>only<sp/>when<sp/>needed<sp/>because<sp/>it<sp/>requires<sp/>installation<sp/>of<sp/>Python<sp/>package<sp/>&apos;docx&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>output.doc<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>doc_write</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>A<sp/>document<sp/>file<sp/>contains<sp/>one<sp/>or<sp/>several<sp/>lexicons<sp/>and<sp/>informations<sp/>about<sp/>the<sp/>lexical<sp/>resource</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelmf_1_1src_1_1wrapper_1a3452144e50e7d9906a4fb68f16338147" kindref="member">wrapper_rw</ref>(doc_write,<sp/>*args,<sp/>**kwds)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Count<sp/>total<sp/>number<sp/>of<sp/>entries<sp/>to<sp/>report<sp/>to<sp/>user</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>entries_nb<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>lexicon<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>args[0].get_lexicons():</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entries_nb<sp/>+=<sp/>lexicon.count_lexical_entries()</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelmf_1_1src_1_1utils_1_1log_1abf590a9f2e1b55b9eaf8ed9c30e1ee54" kindref="member">log</ref>(</highlight><highlight class="stringliteral">&quot;Successfully<sp/>wrote<sp/>%s<sp/>LMF<sp/>entries<sp/>into<sp/>document<sp/>file<sp/>&apos;%s&apos;.&quot;</highlight><highlight class="normal"><sp/>%<sp/>(entries_nb,<sp/>args[1]))</highlight></codeline>
    </programlisting>
    <location file="/Users/celine/Work/CNRS/workspace/HimalCo/dev/lib/lmf/src/wrapper.py"/>
  </compounddef>
</doxygen>
