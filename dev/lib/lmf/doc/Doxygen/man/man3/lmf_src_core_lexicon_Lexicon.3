.TH "lmf.src.core.lexicon.Lexicon" 3 "Fri Oct 3 2014" "LMF library" \" -*- nroff -*-
.ad l
.nh
.SH NAME
lmf.src.core.lexicon.Lexicon \- 
.PP
'Lexicon is a class containing all the lexical entries of a given language within the entire resource\&.' (LMF)  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "def \fB__init__\fP"
.br
.RI "\fIConstructor\&. \fP"
.ti -1c
.RI "def \fB__del__\fP"
.br
.RI "\fIDestructor\&. \fP"
.ti -1c
.RI "def \fBget_lexical_entries\fP"
.br
.RI "\fIGet all lexical entries maintained by the lexicon\&. \fP"
.ti -1c
.RI "def \fBadd_lexical_entry\fP"
.br
.RI "\fIAdd a lexical entry to the lexicon\&. \fP"
.ti -1c
.RI "def \fBremove_lexical_entry\fP"
.br
.RI "\fIRemove a lexical entry from the lexicon\&. \fP"
.ti -1c
.RI "def \fBcount_lexical_entries\fP"
.br
.RI "\fICount number of lexical entries of the lexicon\&. \fP"
.ti -1c
.RI "def \fBsort_lexical_entries\fP"
.br
.RI "\fISort given items of lexical entries contained in the lexicon according to a certain order\&. \fP"
.ti -1c
.RI "def \fBfind_lexical_entries\fP"
.br
.RI "\fIFind all lexical entries which characteristics meet the given condition\&. \fP"
.ti -1c
.RI "def \fBcheck_cross_references\fP"
.br
.RI "\fICheck all cross-references in the lexicon\&. \fP"
.ti -1c
.RI "def \fBconvert_to_latex\fP"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBlanguage\fP"
.br
.ti -1c
.RI "\fBlanguageScript\fP"
.br
.ti -1c
.RI "\fBid\fP"
.br
.ti -1c
.RI "\fBlabel\fP"
.br
.ti -1c
.RI "\fBlexiconType\fP"
.br
.ti -1c
.RI "\fBentrySource\fP"
.br
.ti -1c
.RI "\fBvowelHarmony\fP"
.br
.ti -1c
.RI "\fBlexical_entry\fP"
.br
.RI "\fIAll LexicalEntry instances are maintained by \fBLexicon\fP There is one or more LexicalEntry instances per \fBLexicon\fP\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
'Lexicon is a class containing all the lexical entries of a given language within the entire resource\&.' (LMF) 
.PP
Definition at line 8 of file lexicon\&.py\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "def lmf\&.src\&.core\&.lexicon\&.Lexicon\&.__init__ (self)"

.PP
Constructor\&. \fBLexicon\fP instances are owned by LexicalResource\&. 
.PP
\fBReturns:\fP
.RS 4
A \fBLexicon\fP instance\&. 
.RE
.PP

.PP
Definition at line 11 of file lexicon\&.py\&.
.SS "def lmf\&.src\&.core\&.lexicon\&.Lexicon\&.__del__ (self)"

.PP
Destructor\&. Release LexicalEntry instances\&. 
.PP
Definition at line 27 of file lexicon\&.py\&.
.SH "Member Function Documentation"
.PP 
.SS "def lmf\&.src\&.core\&.lexicon\&.Lexicon\&.add_lexical_entry (self, lexical_entry)"

.PP
Add a lexical entry to the lexicon\&. 
.PP
\fBParameters:\fP
.RS 4
\fI\fBlexical_entry\fP\fP A LexicalEntry instance to add to the \fBLexicon\fP\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBLexicon\fP instance\&. 
.RE
.PP

.PP
Definition at line 42 of file lexicon\&.py\&.
.SS "def lmf\&.src\&.core\&.lexicon\&.Lexicon\&.check_cross_references (self)"

.PP
Check all cross-references in the lexicon\&. Fill the private attribute '__lexicalEntry' of each RelatedForm instance for all lexical entries\&. 
.PP
\fBReturns:\fP
.RS 4
\fBLexicon\fP instance\&. 
.RE
.PP

.PP
Definition at line 93 of file lexicon\&.py\&.
.SS "def lmf\&.src\&.core\&.lexicon\&.Lexicon\&.convert_to_latex (self)"

.PP
.nf
This method converts the lexicon into LaTeX format.

.fi
.PP
 
.PP
Definition at line 113 of file lexicon\&.py\&.
.SS "def lmf\&.src\&.core\&.lexicon\&.Lexicon\&.count_lexical_entries (self)"

.PP
Count number of lexical entries of the lexicon\&. 
.PP
\fBReturns:\fP
.RS 4
The number of lexical entries without duplicates maintained by the lexicon\&. 
.RE
.PP

.PP
Definition at line 58 of file lexicon\&.py\&.
.SS "def lmf\&.src\&.core\&.lexicon\&.Lexicon\&.find_lexical_entries (self, filter)"

.PP
Find all lexical entries which characteristics meet the given condition\&. 
.PP
\fBParameters:\fP
.RS 4
\fIfilter\fP Function or lambda function taking a lexical entry as argument, and returning True or False; for instance 'lambda \fBlexical_entry\fP: lexical_entry\&.get_lexeme() == 'Hello''\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
A Python list of LexicalEntry instances\&. 
.RE
.PP

.PP
Definition at line 82 of file lexicon\&.py\&.
.SS "def lmf\&.src\&.core\&.lexicon\&.Lexicon\&.get_lexical_entries (self)"

.PP
Get all lexical entries maintained by the lexicon\&. 
.PP
\fBReturns:\fP
.RS 4
A Python set of lexical entries\&. 
.RE
.PP

.PP
Definition at line 35 of file lexicon\&.py\&.
.SS "def lmf\&.src\&.core\&.lexicon\&.Lexicon\&.remove_lexical_entry (self, lexical_entry)"

.PP
Remove a lexical entry from the lexicon\&. 
.PP
\fBParameters:\fP
.RS 4
\fI\fBlexical_entry\fP\fP The LexicalEntry instance to remove from the \fBLexicon\fP\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBLexicon\fP instance\&. 
.RE
.PP

.PP
Definition at line 50 of file lexicon\&.py\&.
.SS "def lmf\&.src\&.core\&.lexicon\&.Lexicon\&.sort_lexical_entries (self, items = \fClambda lexical_entry: lexical_entry\&.get_lexeme()\fP, order = \fCNone\fP)"

.PP
Sort given items of lexical entries contained in the lexicon according to a certain order\&. 
.PP
\fBParameters:\fP
.RS 4
\fIitems\fP Lambda function giving the item to sort\&. Default value is 'lambda \fBlexical_entry\fP: lexical_entry\&.get_lexeme()', which means that the items to sort are lexemes\&. 
.br
\fIorder\fP Default value is 'None', which means that the lexicographical ordering uses the ASCII ordering\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
The sorted Python list of lexical entries\&. 
.RE
.PP

.PP
Definition at line 64 of file lexicon\&.py\&.
.SH "Member Data Documentation"
.PP 
.SS "lmf\&.src\&.core\&.lexicon\&.Lexicon\&.entrySource"

.PP
Definition at line 21 of file lexicon\&.py\&.
.SS "lmf\&.src\&.core\&.lexicon\&.Lexicon\&.id"

.PP
Definition at line 18 of file lexicon\&.py\&.
.SS "lmf\&.src\&.core\&.lexicon\&.Lexicon\&.label"

.PP
Definition at line 19 of file lexicon\&.py\&.
.SS "lmf\&.src\&.core\&.lexicon\&.Lexicon\&.language"

.PP
Definition at line 16 of file lexicon\&.py\&.
.SS "lmf\&.src\&.core\&.lexicon\&.Lexicon\&.languageScript"

.PP
Definition at line 17 of file lexicon\&.py\&.
.SS "lmf\&.src\&.core\&.lexicon\&.Lexicon\&.lexical_entry"

.PP
All LexicalEntry instances are maintained by \fBLexicon\fP There is one or more LexicalEntry instances per \fBLexicon\fP\&. 
.PP
Definition at line 25 of file lexicon\&.py\&.
.SS "lmf\&.src\&.core\&.lexicon\&.Lexicon\&.lexiconType"

.PP
Definition at line 20 of file lexicon\&.py\&.
.SS "lmf\&.src\&.core\&.lexicon\&.Lexicon\&.vowelHarmony"

.PP
Definition at line 22 of file lexicon\&.py\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for LMF library from the source code\&.
